<add><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/introduction/introduction#introduction</field><field name="link_cont">vdp developer introduction introduction introduction</field><field name="cont">introduction&#182;denodo virtual dataport global solution integrate heterogeneous distribute data source virtual dataport datum relevant company regardless origin format level structure incorporate datum data system real time configurable preload facilitate construction service high strategic functional value corporate business use virtual dataport base client server architecture client issue statement server write vql virtual query language sql like language query define datum view virtual dataport administration guide virtual dataport vql guide document introduce product user mechanism available client application use denodo virtual dataport make data integration facility client application access virtual dataport way jdbc interface java database connectivity virtual dataport provide jdbc driver client application use purpose section access jdbc odbc interface open database connectivity virtual dataport provide odbc interface odbc driver odbc client section access odbc ado.net data provider section access ado.net data provider soap rest web service interface access generic restful web service interface service automatically deploy http://localhost:9090 denodo restfulws virtual dataport administration tool publish soap rest web service publish content view section publication web service administration guide</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/introduction/examples/examples#examples</field><field name="link_cont">vdp developer introduction example example example</field><field name="cont">examples&#182; &lt; denodo_home&gt;/samples vdp/ directory example client retrieve datum virtual dataport vdp client contain sample program connect virtual dataport jdbc interface soap web service vdp-clients-ado.net contain c program ado.net data provider connect directly odbc interface virtual dataport window odbc dsn execute query vdp client c++ contain c++ program connect virtual dataport odbc interface execute query vdp client entityframework contain c program send query virtual dataport entity framework.see example readme file directory</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/access_through_jdbc#access-through-jdbc</field><field name="link_cont">vdp developer access jdbc access jdbc access jdbc</field><field name="cont">access jdbc&#182;jdbc java database connectivity java api allow execute statement relational database regardless database management system denodo provide jdbc type 4 driver implement main characteristic jdbc 4.1 api java database connectivity mean driver platform independent denodo jdbc driver denodo community https://community.denodo.com/drivers/jdbc/ download version update instal denodo server find version denodo server connect log server design studio administration tool click menu file &gt; look vdp server instal update need register site download register installation denodo platform &lt; denodo_home&gt;/tools client driver jdbc vdp jdbcdriver core denodo vdp jdbcdriver.jar java versionthe jdbc driver compatible java 8 9 10 11 driver class namethe class driver com.denodo.vdp.jdbc driverconnection urlthe syntax database url syntax jdbc connection url&#182;jdbc denodo://&lt;hostname&gt;:&lt;port&gt;/&lt;databasename&gt;[?&lt;paramname&gt;=&lt;paramvalue &gt; &lt; paramname&gt;=&lt;paramvalue&gt;]*]importantto use prefix jdbc denodo need use denodo jdbc driver 8.0u20210209 new use driver 8.0 ga use prefix jdbc vdb backward compatibility new driver support prefix jdbc vdb database mandatory example jdbc connection url sample&#182;jdbc denodo://denodo server.acme.com:9999 admin?ssl = true&amp;querytimeout=100000&amp;chunktimeout=1000&amp;useragent = myapplication&amp;autocommit = true database contain non ascii character url encode example database &#12486;&#12473;&#12488; connection url database jdbc connection url sample non ascii characters&#182;jdbc denodo://localhost:9999/%e3%83%86%e3%82%b9%e3%83%88?querytimeout=900000&amp;chunktimeout=1000&amp;useragent = myapplication&amp;autocommit = truethe path &lt; denodo_home&gt;/samples vdp vdp client contain example client program access virtual dataport jdbc readme file path explain generate publish view access client example backward compatibilityvirtual dataport backward compatible jdbc driver client major version connect virtual dataport run certain update use jdbc driver update old update example connect denodo server version 8.0 update 20210715 use jdbc driver include update old update use jdbc driver 8.0 20210715 connect virtual dataport 8.0 update 20210209 old driver recent server unsupported configuration operation fail jdbc driver denodo 8.0 ga 8.0 update return error try connect denodo 7.0 old feature driverthese feature jdbc specification support virtual dataport jdbc driver datum type support define vql guide include support basic type field type array register execution statement query insert update delete datum addition create new element datum source view etc.support metadata description statement list server catalog element support preparedstatement support cancel current statement execution cancel method java.sql statement class query cancel virtual dataport server cancel current access data source cache invoke cancel method possible server return result retrieve source access canceling effective query cancellation imply close resultset invocation store procedure statement support submit batch command resultset object return virtual dataport updatable i.e. concur_read_only cursor move forward i.e. type_forward_only addition resultset object close current transaction commit i.e. close_cursors_at_commit driver implement method resultset getgeneratedkey class java.sql statement auto generate key idu statement support jdbc escape syntax timestamp date time literal query datetime literal</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/access_through_jdbc#id1</field><field name="link_cont">vdp developer access jdbc access jdbc id1</field><field name="cont">syntax jdbc connection url&#182;jdbc denodo://&lt;hostname&gt;:&lt;port&gt;/&lt;databasename&gt;[?&lt;paramname&gt;=&lt;paramvalue &gt; &lt; paramname&gt;=&lt;paramvalue &gt;</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/access_through_jdbc#id2</field><field name="link_cont">vdp developer access jdbc access jdbc id2</field><field name="cont">jdbc connection url sample&#182;jdbc denodo://denodo server.acme.com:9999 admin?ssl = true&amp;querytimeout=100000&amp;chunktimeout=1000&amp;useragent = myapplication&amp;autocommit = true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/access_through_jdbc#id3</field><field name="link_cont">vdp developer access jdbc access jdbc id3</field><field name="cont">jdbc connection url sample non ascii characters&#182;jdbc denodo://localhost:9999/%e3%83%86%e3%82%b9%e3%83%88?querytimeout=900000&amp;chunktimeout=1000&amp;useragent = myapplication&amp;autocommit = true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/parameters_of_the_jdbc_connection_url/parameters_of_the_jdbc_connection_url#jdbc-driver-parameters</field><field name="link_cont">vdp developer access jdbc parameter jdbc connection url parameter jdbc connection url jdbc driver parameter</field><field name="cont">jdbc driver parameters&#182;the table list parameter jdbc driver default value indicate option parameter connection url driver property usergsscredential pass driver property url parameter parameter jdbc driver default value&#182;parameter urldescriptionadjustscaleofdecimalvaluesif true driver modify value type decimal resultset scale match scale report metadata resultset set true connect apache arrow default value false autocommitif true invocation method jdbc api responsible manage transaction ignore i.e. driver ignore invocation method setautocommit commit rollback useful sure application start transaction inadvertently parameter set true application start finish transaction execute statement begin commit rollback client invoke setautocommit(false execute commit driver start new transaction execute statement client invoke setautocommit(false account limit duration transaction default transaction 30 minute execution statement finish client execute statement 30 second limit duration transaction section transaction virtual dataport vql guide default value true chunksizethe result query divide block chunk server wait query finish order begin send result client parameter establish maximum number result block contain server obtain result complete block send block driver continue process result application use driver add parameter connection url and/or execute query invoke method setfetchsize class statement value set setfetchsize method override value set url default value 1000chunktimeout parameter establish maximum time millisecond server wait return new block driver time exceed server send current block driver contain number result specify chunksize parameter note chunksize chunktimeout 0 server return result single block value different 0 server return chunk condition happen chunk fill chunksize certain time send chunk client chunktimeout)default value 90000 millisecond 90 seconds)connecttimeoutthis parameter establish maximum time millisecond driver wait open connection time exceed timeout error return note connecttimeout equal low 0 timeout disabled limit apply default value 120000 millisecond 120 seconds)describenationalchartypesasbasictypesif true driver report field type nchar nvarchar nclob longnvarchar char varchar clob longvarchar respectively default value falsei18n parameter establish internationalization i18n configuration connection server present driver assume i18n database connect parameter i18n context clause query override value parameter default value i18n database connect toidentifiersuppercaseif true execute select query name field return uppercase default value falseidlekeepaliveindicate connection send alive idle state number second specify keepalive property default value falsekeepaliveindicates number second connection currently discard alive response receive server value equal low 0 disable functionality default value 300loggerconsoleif true driver print log message console enable jdbc logging default value falseloggerfileif driver write log message file enable jdbc logging default value n aloggerlevellevel log message level follow java logging syntax mandatory enable log enable jdbc logging value severe warning info fine finer fine default value n aloggernativecallsif true driver log information relate internal communication default value falsenativecompressif true data compress network level default value falsepasswordpassword authenticate virtual dataport parameter provide value parameter user default value n apublishcatalogsasschemasby default jdbc driver expose database virtual dataport catalog catalog collection sql object table view store procedure etc property true driver expose database schema schema collection sql object tool expect database organize element schema catalog case add parameter connection value true default value falsepublishviewsastablesif false metadata publish jdbc driver describe base view table element derived interface view view element true metadata describe view table element party tool require jdbc metadata publish view table order recognize association create view application add parameter url value true default value falsequerytimeoutmaximum time millisecond driver wait query finish period throw exception parameter optional set query timeout default value 900000 millisecond 0 driver wait indefinitely query finish parameter set default timeout query addition change timeout single query add parameter querytimeout = &lt; value &gt; context clause query section context clause vql guide default value 900000 millisecond 15 minutes)pingquery pingquerytimeoutparameter need connect virtual dataport load balancer section connect virtual dataport load balancer explain use default value nonesendsniheaderif true ssl connection virtual dataport add server indication sni header set server_name value open connection default value falsesslby default driver try establish non ssl connection server ssl enable server connection fail immediately driver try establish ssl connection true driver establishe ssl connection ssl disabled server connection fail recommend value server use ssl false driver establish non ssl connection try establish ssl connection ssl enable server connection fail default value nonessltrustservercertificateif true driver validate ssl certificate present virtual dataport connect parameter make easy use self sign certificate certificate sign organization use internally consider validate certificate consider security risk false driver validate ssl certificate present virtual dataport driver take property account property ssl true default value falsessltruststorelocation ssltruststorepasswordssltruststorelocation path trust store file contain ssl certificate driver trust ssltruststorepassword password trust store parameter optional provide driver use password validate integrity trust store prevent unauthorized user add certificate trust store ssltruststorelocation set driver use trust store i.e. cacert file java virtual machine launch application use driver driver take property account property ssl true default value noneuseruser authenticate virtual dataport parameter provide value parameter password default value n auseragentset user agent connection section set user agent application administration guide explain recommend set parameter default value &lt; &gt; usergsscredentialjava object class org.ietf.jgss gsscredential use driver property pass kerbero credential driver use connect denodo.usergsscredential driver property pass parameter url.see property section connect virtual dataport kerberos authentication default value wanoptimizedif true driver enable feature reduce latency communication client application virtual dataport server default value falsethe property relate oauth authentication explain page connect virtual dataport oauth authentication autocommit propertyby default connection open denodo jdbc driver property autocommit set true recommend value effect query perform inside transaction change property false need statement execute inside transaction reason virtual dataport use distribute transaction manager use 2 phase commit protocol protocol introduce overhead query set property false need query run unnecessarily slow connect virtual dataport ssl tlsif ssl enable virtual dataport ssl certificate use sign public certification authority connection fail client application configure trust certification authority sign key trust authority need import certificate authority cacert file java runtime environment jre client application use</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/parameters_of_the_jdbc_connection_url/parameters_of_the_jdbc_connection_url#parameters-of-the-jdbc-driver-and-their-default-value</field><field name="link_cont">vdp developer access jdbc parameter jdbc connection url parameter jdbc connection url parameter jdbc driver default value</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_through_a_load_balancer/connecting_to_virtual_dataport_through_a_load_balancer#connecting-to-virtual-dataport-through-a-load-balancer</field><field name="link_cont">vdp developer access jdbc connect virtual dataport load balancer connect virtual dataport load balancer connect virtual dataport load balancer</field><field name="cont">connect virtual dataport load balancer&#182;read section jdbc client connect virtual dataport load balancer intermediate resource hold pool connection virtual dataport table parameter jdbc driver useful set cluster denodo server list parameter url useful connect virtual dataport load balancer parameter jdbc driver useful set cluster denodo servers&#182;parameter urldescriptionpingquery pingquerytimeoutimportant use property load balancer client application execute ping query support set timeout ping query client execute query parameter pingquery driver return error query finish number millisecond set pingquerytimeout.see detailed explanation property default value parameter &lt; &gt; sample url jdbc application parameter pingquery pingquerytimeout&#182;jdbc denodo://acme:9999 admin?pingquery = select 1&amp;pingquerytimeout=1000with url driver return error client application load balancer execute query select 1 virtual dataport return response second error cause client load balancer create new connection instead reuse need add parameter pingquery pingquerytimeout connection url load balancer client meet condition execute ping query check virtual dataport server alive connection valid client application load balancer support execute ping query support set timeout query runtime jdbc driver receive query set parameter pingquery wait maximum pingquerytimeout millisecond query finish query finish time driver return error indicate client load balancer connection long valid connection virtual dataport server invalid time drop firewall note driver actually execute ping query client application load balancer</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_through_a_load_balancer/connecting_to_virtual_dataport_through_a_load_balancer#parameters-of-the-jdbc-driver-useful-to-set-up-a-cluster-of-denodo-servers</field><field name="link_cont">vdp developer access jdbc connect virtual dataport load balancer connect virtual dataport load balancer parameter jdbc driver useful set cluster denodo server</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_through_a_load_balancer/connecting_to_virtual_dataport_through_a_load_balancer#id1</field><field name="link_cont">vdp developer access jdbc connect virtual dataport load balancer connect virtual dataport load balancer id1</field><field name="cont">sample url jdbc application parameter pingquery pingquerytimeout&#182;jdbc denodo://acme:9999 admin?pingquery = select 1&amp;pingquerytimeout=1000</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_kerberos_authentication/connecting_to_virtual_dataport_using_kerberos_authentication#connecting-to-virtual-dataport-using-kerberos-authentication</field><field name="link_cont">vdp developer access jdbc connect virtual dataport kerberos authentication connect virtual dataport kerberos authentication connect virtual dataport kerbero authentication</field><field name="cont">connect virtual dataport kerberos authentication&#182; denodo jdbc driver support kerbero authentication protocol use need add certain property connection virtual dataport server configure use kerbero authentication client use standard authentication table list driver property set create jdbc connection kerbero authentication user password easy option set option driver request ticket grant ticket tgt active directory send server valid standalone application use credential connect denodo driver property user password authentication kerberos&#182;propertyvalueusekerberostruedebugtrueremove property issue kerbero authenticationuser passworduser password user jdbc client dbvisualizer enter credential user password box instead provide property kerbero constrain delegationthe denodo driver support kerbero constrain delegation allow denodo server obtain service ticket restricted list service client present service ticket driver property pass kerbero credential object&#182;propertyvalueusekerberostrueusergsscredentialjava object class org.ietf.jgss gsscredentialin driver property usergsscredential pass gsscredential object follow sample code show gsscredential usercredential = driver driver = driver class.forname("com.denodo.vdp.jdbc.driver").newinstance property property = new property properties.put("usergsscredential usercredential connection conn = driver.connect("jdbc denodo://denodo1.acme.com:9999 customer?useragent = myapplication properties);single sign onwith option client application provide credential driver automatically obtain kerbero credential user launch application use connect denodo user enter credential client application run window consider add follow library classpath application addition denodo driver:&lt;denodo_home&gt;/lib contrib jna.jar &lt; denodo_home&gt;/lib contrib jna platform.jarfor example db visualizer driver manager load jar file driver jar driver property obtain kerbero credential ticket cache system window single sign sso)&#8221;&#182;propertyvalueusekerberostruedebugtrueremove property issue kerbero authenticationuseticketcachetruerenewtgttrueuse kerbero credential store ticket cachewith option driver obtain kerbero credential kerberos credential cache driver property obtain kerbero credential ticket cache file&#182;propertyvalueusekerberostruedebugtrueremove property issue kerbero authenticationuseticketcachetruerenewtgttrueticketcachepath ticket cache filebefore authentication mode need generate ticket cache file host jdbc application run manually obtain cache file ticket grant ticket tgt open command line execute following:&lt;denodo_home&gt;\jre\bin\kinit.exe -f -c &lt; denodo_home&gt;\conf\vdp admin\ticket\cache"the option -f request key distribution center kdc return forwardable ticket client application belong domain&#182;application want connect denodo kerberos authentication need information active directory domain client application run host active directory domain usually application obtain information environment client domain need provide information need obtain krb5.conf/ini file</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_kerberos_authentication/connecting_to_virtual_dataport_using_kerberos_authentication#id1</field><field name="link_cont">vdp developer access jdbc connect virtual dataport kerberos authentication connect virtual dataport kerberos authentication id1</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_kerberos_authentication/connecting_to_virtual_dataport_using_kerberos_authentication#id2</field><field name="link_cont">vdp developer access jdbc connect virtual dataport kerberos authentication connect virtual dataport kerberos authentication id2</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_kerberos_authentication/connecting_to_virtual_dataport_using_kerberos_authentication#id3</field><field name="link_cont">vdp developer access jdbc connect virtual dataport kerberos authentication connect virtual dataport kerberos authentication id3</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_kerberos_authentication/connecting_to_virtual_dataport_using_kerberos_authentication#id4</field><field name="link_cont">vdp developer access jdbc connect virtual dataport kerberos authentication connect virtual dataport kerberos authentication id4</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_kerberos_authentication/connecting_to_virtual_dataport_using_kerberos_authentication#when-the-client-application-does-not-belong-to-the-domain</field><field name="link_cont">vdp developer access jdbc connect virtual dataport kerberos authentication connect virtual dataport kerberos authentication client application belong domain</field><field name="cont">client application belong domain&#182;application want connect denodo kerberos authentication need information active directory domain client application run host active directory domain usually application obtain information environment client domain need provide information need obtain krb5.conf/ini file</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_oauth_authentication/connecting_to_virtual_dataport_using_oauth_authentication#connecting-to-virtual-dataport-using-oauth-authentication</field><field name="link_cont">vdp developer access jdbc connect virtual dataport oauth authentication connect virtual dataport oauth authentication connect virtual dataport oauth authentication</field><field name="cont">connect virtual dataport oauth authentication&#182;the denodo jdbc driver support oauth 2.0 protocol authentication authorization user oauth open standard protocol allow client application access denodo send password user account oauth connect virtual dataport enable oauth virtual dataport connection oauth fail denodo provide path connect denodo oauth depend choose add certain parameter indicate parameter parameter connection url driver property path 1 oauth 2.0 authentication provide access tokenthe client application obtain oauth access token pass denodo jdbc driver driver use token connect virtual dataport path mean client application ability obtain access token connect virtual dataport client application obtain access token behalf end user application method add follow parameter connection url driver property parameter oauth 2.0 authentication access token&#182;propertyvalueuseoauth2trueaccesstokenthe oauth 2.0 access tokendo provide user password path 2 oauth 2.0 resource owner password credentialsif client application ability obtain oauth token driver obtain behalf application identity provider organization support resource owner password credential oauth flow case configure connection information identity provider url request token identity provider client d client secret application register identity provider etc.when client application open connection driver request oauth token identity provider use token establish connection method add follow url parameter connection url parameter oauth 2.0 authentication resource owner password credentials&#182;propertyvalueuseoauth2trueuser username provide client obtain access tokenpasswordthe password corresponding user authenticatedtokenendpointurl expose oauth server request access tokenclientidapplication client d. usually obtain register client application identity provider.clientsecretapplication client secretscopestre value different scope requestedextraparamsadditional parameter add body http request driver send obtain oauth token syntax parameter param1 = value1&amp;param2 = value2&amp; indicate driver property parameter connection url useidtokenif true driver use id_token authentication false use access_token set true environment openid connect default value falseoauthsslverifyif true driver validate ssl certificate identity provider false validate certificate default value true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_oauth_authentication/connecting_to_virtual_dataport_using_oauth_authentication#id1</field><field name="link_cont">vdp developer access jdbc connect virtual dataport oauth authentication connect virtual dataport oauth authentication id1</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/connecting_to_virtual_dataport_using_oauth_authentication/connecting_to_virtual_dataport_using_oauth_authentication#id2</field><field name="link_cont">vdp developer access jdbc connect virtual dataport oauth authentication connect virtual dataport oauth authentication id2</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#details-of-the-jdbc-interface</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface detail jdbc interface</field><field name="cont">detail jdbc interface&#182;this section describe information specific jdbc driver denododescription view fieldsretrieving content type blob valuesworke datetime value denodo jdbc driversette datetime value parameter prepared statementshow driver report datetime interval typesobtaine name element inside struct register connect application filter incoming serialization dataquerie datetime literalsget auto generate key idu statementsdescription view fields&#182;the driver publish description view field column remark metadata table view field retrieve content type blob values&#182; driver make available content type blob field example show retrieve content type blob value&#182;resultset rs = stmt.executequery com.denodo.vdb.jdbcdriver vdbjdbcblob blob = com.denodo.vdb.jdbcdriver vdbjdbcblob rs.getblob(index string contenttype = blob.getcontenttype work datetime value denodo jdbc driver&#182;the follow subsection provide information use jdbc driver work different datetime value set datetime value parameter prepared statementshow driver report datetime interval type set datetime value parameter prepare statements&#182;the table list method class preparedstatement invoke set value parameter depend type value method set datetime parameter preparedstatement&#182;typemethod(s set parameter type preparedstatementlocaldateany preparedstatement.setobject(java.time.localdate)preparedstatement.setdate(java.sql date example:// create localdate object setobject(1 java.time.localdate.of(2018,01,15 create date object setdate(1 java.sql date.valueof("2018 01 15 accord documentation class java.sql date setdate date object normalize set hour minute second millisecond zero particular time zone instance associate localdate object simple timeany preparedstatement.setobject(java.time.localtime)preparedstatement.settime(java.sql time example:// create localtime object setobject(1 localtime.of(11 58 59 123000000 create java.sql time object settime(2 java.sql time.valueof("11:58:59"));according documentation class java.sql time settime date component time object set zero epoch value january 1 1970 localtime object simple timestamppreparedstatement.setobject(java.time localdatetime)for example setobject(1 java.time.localdatetime.of 2018 01 15 23 58 59 256000000 parameter represent 256 millisecond value nanosecond denodo maximum precision timestamp timestamptz time millisecond nanosecond preparedstatement.settimestamp timestamptz value query fail query cast timestamptz timestamp order work parameter i18n connection uri match i18n setting denodo server date deprecated)the timestamptz below)timestamptzany preparedstatement.setobject(java.time offsetdatetime)preparedstatement.settimestamp(java.sql timestamp example:// create offsetdatetime object setobject(1 offsetdatetime.parse 2018 01 01t21:15:00 + 01:00 create timestamp object simpledateformat sdf = new simpledateformat("yyyy mm dd hh mm ss xxx sdf.settimezone("gmt settimestamp 1 sdf.parse("1982 12 13 01:59:59 +0000"));interval_year_monthsetobject(java.time.period)for example:// equivalent interval 145 11 year month setobject(1 period.ofyears(145).plusmonths(11 equivalent interval 145 year setobject(period.ofyear 145));interval_day_secondsetobject(java.time duration example:// equivalent interval 4 5:12 day minute setobject(duration.ofdays(4).plushours(5).plusminutes(12 equivalent interval 4 5:12:10.222 day second setobject(duration.parse("p4dt5h12m10.222s"));how driver report datetime interval types&#182; table list jdbc driver report datetime type type denodotype return method resultsetmetadata.getcolumntypename()value return method resultsetmetadata.getcolumntype(int)localdatedate91timetime92timestamptimestamp93date deprecate timestamp_with_timezone2014timestamptztimestamp_with_timezone2014interval_year_monthinterval_year_month2020interval_day_secondinterval_day_second2021the type date timestamptz report type timestamp timezone client application distinguish intentional facilitate upgrade denodo 8.0 denodo 6.0 previous version client application need distinguish type treat timestamptz code type interval_year_month interval_day_second define denodo jdbc api type denodoresult resultsetmetadata.getcolumnclassname(int)java class object return class resultset.getobject()localdatejava.sql datejava.sql datetimejava.sql timejava.sql timetimestampjava.sql timestampjava.sql timestampdate deprecated)java.sql timestampjava.sql timestamptimestamptzjava.sql timestampjava.sql timestampinterval_year_monthjava.lang longjava.lang longinvoke java.time period.ofmonth value convert value java.time period object obtain duration object driver invoke resultset.getobject(col java.time.period.class interval_day_secondjava.lang longjava.lang longinvoke java.time duration ofmillis(value convert value java.time duration object obtain duration object driver invoke resultset.getobject(col java.time.duration.class obtain name element inside struct register)&#182;the jdbc driver denodo transform compound value class jdbc api convert value type register java.sql struct object convert value type array java.sql array object java.sql array object array struct object standard jdbc api provide method obtain value inside java.sql struct object i.e. inside register field offer way obtain subfield struct obtain value subfield section explain denodo jdbc driver obtain subfield struct object obtain value subfield instead position inside register example let application execute query return register field subfield last_name first_name row result set return struct object obtain value struct object application invoke method struct.getattribute return array value later modify register add subfield e.g. telephone array return method struct.getattribute element instead addition element array telephone application obtain invalid datum avoid sort maintainability issue want use class denodo jdbc api obtain value struct position register application robust change example show obtain value inside struct object&#182;import com.denodo.vdb.jdbcdriver.printer field import com.denodo.vdb.jdbcdriver vdbjdbcresultsetmetadata import com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type registervo import com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type registervaluevo public static void main(string args throw exception  method getconnection return connection virtual dataport connection connection = getconnection statement st = connection.createstatement string query = select view_with_compound_field resultset rs = st.executequery(query  class vdbjdbcresultsetmetadata field denodo jdbc api belong standard jdbc api vdbjdbcresultsetmetadata metadata = vdbjdbcresultsetmetadata rs.getmetadata field field = metadata.getfield rs.next int columncount = metadata.getcolumncount int = 1 &lt; = columncount i++ object value = rs.getobject(i value = null metadata.getcolumntype(i = = type struct   jdbc api represent value type register struct object    class registervo registervaluevo denodo jdbc api belong standard java api registervo vdptype = registervo fields[i 1].getvdptype list &lt; registervaluevo &gt; registersubtype = vdptype.getelement struct struct = struct value object structvalue = struct.getattribute string firstname = null lastname = null int j=0 j &lt; registersubtypes.size j++ variable registersubtype contain name name subfield string subfieldname = registersubtypes.get(j).getname switch subfieldname case first_name firstname = string structvalues[j break case last_name lastname = string structvalues[j break metadata.getcolumntype(i)==types.array  jdbc api represent value type array array object object register = object rs.getarray(i).getarray object o register denodo jdbc api content array array struct object  struct s = struct o  close resultset statement connection connect application filter incoming serialization data&#182;the denodo jdbc driver use java remote method invocation rmi connect virtual dataport client application e.g. late version oracle weblogic server include mechanism filter datum receive rmi mechanism increase security client application default configuration filter application prevent application receive datum denodo connect denodo application filter enable administrator application add following parameter control filter.com.denodo configuration filter depend client application find information official specification jep 290 filter incoming serialization dataquerie datetime literals&#182;when escape processing enable jdbc statement denodo jdbc driver interpret jdbc escape syntax timestamp date time literal equivalent correct vql syntax timestamp following syntax timestamp literals:{ts yyyy mm dd hh mm ss.f '}the follow syntax date literals:{d yyyy mm dd'}and following syntax time literals:{t hh mm ss'}for example queryselect my_view time_field = t 20:00:03 date_field = d 1999 01 09 timestamp_field = ts 1999 01 09 20:11:11.123455'}will process jdbc driver send virtual dataport select my_view time_field = time 20:00:03 date_field = date 1999 01 09 timestamp_field = timestamp 1999 01 09 20:11:11.123455'get auto generate key idu statements&#182;the jdbc driver support retrieve value underlie database generate insert row auto generate value primary key new row example retrieve auto generate key denodo jdbc driver.&#182;statement stmt = conn.createstatement statement.return_generated_key code request virtual dataport return auto generate value int row = stmt.executeupdate("insert customer + first_name last_name + value john smith statement.return_generated_keys resultset rs = stmt.getgeneratedkey boolean b = rs.next b = = true retrieve new key value long customerid = rs.getlong(1 obtain auto generate key execute idu statement i.e. insert update delete method boolean execute string sql int autogeneratedkey second argument statement.return_generated_keys&#8221;)boolean execute string sql int columnindexe boolean execute string sql string columnnames)int executeupdate string sql int autogeneratedkey second argument statement.return_generated_keys&#8221;)int executeupdate string sql int columnindexes)int executeupdate string sql string columnnames)long executelargebatch string sql int autogeneratedkey second argument statement.return_generated_keys&#8221;)long executelargebatch string sql int columnindexes)long executelargebatch string sql string columnname use class java.sql statement java.sql preparedstatement virtual dataport store datum support feature depend underlie database support database vendor implement functionality example let application connect virtual dataport jdbc driver application execute code like datum view customer store oracle oracle return auto generate value virtual dataport driver pass application database test behavior check database use return value work internallywhen application request return generate key driver modify idu query send virtual dataport application request obtain generate key statement.return_generated_key driver append idu statement return generate keyswhen application request auto generate value specific field driver append like idu statement return field_name_2 field_name_4 field_name_5when application request auto generate value specific field index driver append like idu statement return 3 7 11</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#description-of-views-and-their-fields</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface description view field</field><field name="cont">description view fields&#182;the driver publish description view field column remark metadata table view field</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#retrieving-the-content-type-of-blob-values</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface retrieve content type blob value</field><field name="cont">retrieve content type blob values&#182;the driver make available content type blob field example show retrieve content type blob value&#182;resultset rs = stmt.executequery com.denodo.vdb.jdbcdriver vdbjdbcblob blob = com.denodo.vdb.jdbcdriver vdbjdbcblob rs.getblob(index string contenttype = blob.getcontenttype</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#id2</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface id2</field><field name="cont">retrieve content type blob value&#182;resultset rs = stmt.executequery com.denodo.vdb.jdbcdriver vdbjdbcblob blob = com.denodo.vdb.jdbcdriver vdbjdbcblob rs.getblob(index string contenttype = blob.getcontenttype</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#working-with-datetime-values-with-the-denodo-jdbc-driver</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface work datetime value denodo jdbc driver</field><field name="cont">work datetime value denodo jdbc driver&#182;the follow subsection provide information use jdbc driver work different datetime value set datetime value parameter prepared statementshow driver report datetime interval type set datetime value parameter prepare statements&#182;the table list method class preparedstatement invoke set value parameter depend type value method set datetime parameter preparedstatement&#182;typemethod(s set parameter type preparedstatementlocaldateany preparedstatement.setobject(java.time.localdate)preparedstatement.setdate(java.sql date example:// create localdate object setobject(1 java.time.localdate.of(2018,01,15 create date object setdate(1 java.sql date.valueof("2018 01 15 accord documentation class java.sql date setdate date object normalize set hour minute second millisecond zero particular time zone instance associate localdate object simple timeany preparedstatement.setobject(java.time.localtime)preparedstatement.settime(java.sql time example:// create localtime object setobject(1 localtime.of(11 58 59 123000000 create java.sql time object settime(2 java.sql time.valueof("11:58:59"));according documentation class java.sql time settime date component time object set zero epoch value january 1 1970 localtime object simple timestamppreparedstatement.setobject(java.time localdatetime)for example setobject(1 java.time.localdatetime.of 2018 01 15 23 58 59 256000000 parameter represent 256 millisecond value nanosecond denodo maximum precision timestamp timestamptz time millisecond nanosecond preparedstatement.settimestamp timestamptz value query fail query cast timestamptz timestamp order work parameter i18n connection uri match i18n setting denodo server date deprecated)the timestamptz below)timestamptzany preparedstatement.setobject(java.time offsetdatetime)preparedstatement.settimestamp(java.sql timestamp example:// create offsetdatetime object setobject(1 offsetdatetime.parse 2018 01 01t21:15:00 + 01:00 create timestamp object simpledateformat sdf = new simpledateformat("yyyy mm dd hh mm ss xxx sdf.settimezone("gmt settimestamp 1 sdf.parse("1982 12 13 01:59:59 +0000"));interval_year_monthsetobject(java.time.period)for example:// equivalent interval 145 11 year month setobject(1 period.ofyears(145).plusmonths(11 equivalent interval 145 year setobject(period.ofyear 145));interval_day_secondsetobject(java.time duration example:// equivalent interval 4 5:12 day minute setobject(duration.ofdays(4).plushours(5).plusminutes(12 equivalent interval 4 5:12:10.222 day second setobject(duration.parse("p4dt5h12m10.222s"));how driver report datetime interval types&#182; table list jdbc driver report datetime type type denodotype return method resultsetmetadata.getcolumntypename()value return method resultsetmetadata.getcolumntype(int)localdatedate91timetime92timestamptimestamp93date deprecate timestamp_with_timezone2014timestamptztimestamp_with_timezone2014interval_year_monthinterval_year_month2020interval_day_secondinterval_day_second2021the type date timestamptz report type timestamp timezone client application distinguish intentional facilitate upgrade denodo 8.0 denodo 6.0 previous version client application need distinguish type treat timestamptz code type interval_year_month interval_day_second define denodo jdbc api type denodoresult resultsetmetadata.getcolumnclassname(int)java class object return class resultset.getobject()localdatejava.sql datejava.sql datetimejava.sql timejava.sql timetimestampjava.sql timestampjava.sql timestampdate deprecated)java.sql timestampjava.sql timestamptimestamptzjava.sql timestampjava.sql timestampinterval_year_monthjava.lang longjava.lang longinvoke java.time period.ofmonth value convert value java.time period object obtain duration object driver invoke resultset.getobject(col java.time.period.class interval_day_secondjava.lang longjava.lang longinvoke java.time duration ofmillis(value convert value java.time duration object obtain duration object driver invoke resultset.getobject(col java.time.duration.class</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#setting-datetime-values-on-parameters-of-prepared-statements</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface set datetime value parameter prepared statement</field><field name="cont">set datetime value parameter prepare statements&#182;the table list method class preparedstatement invoke set value parameter depend type value method set datetime parameter preparedstatement&#182;typemethod(s set parameter type preparedstatementlocaldateany preparedstatement.setobject(java.time.localdate)preparedstatement.setdate(java.sql date example:// create localdate object setobject(1 java.time.localdate.of(2018,01,15 create date object setdate(1 java.sql date.valueof("2018 01 15 accord documentation class java.sql date setdate date object normalize set hour minute second millisecond zero particular time zone instance associate localdate object simple timeany preparedstatement.setobject(java.time.localtime)preparedstatement.settime(java.sql time example:// create localtime object setobject(1 localtime.of(11 58 59 123000000 create java.sql time object settime(2 java.sql time.valueof("11:58:59"));according documentation class java.sql time settime date component time object set zero epoch value january 1 1970 localtime object simple timestamppreparedstatement.setobject(java.time localdatetime)for example setobject(1 java.time.localdatetime.of 2018 01 15 23 58 59 256000000 parameter represent 256 millisecond value nanosecond denodo maximum precision timestamp timestamptz time millisecond nanosecond preparedstatement.settimestamp timestamptz value query fail query cast timestamptz timestamp order work parameter i18n connection uri match i18n setting denodo server date deprecated)the timestamptz below)timestamptzany preparedstatement.setobject(java.time offsetdatetime)preparedstatement.settimestamp(java.sql timestamp example:// create offsetdatetime object setobject(1 offsetdatetime.parse 2018 01 01t21:15:00 + 01:00 create timestamp object simpledateformat sdf = new simpledateformat("yyyy mm dd hh mm ss xxx sdf.settimezone("gmt settimestamp 1 sdf.parse("1982 12 13 01:59:59 +0000"));interval_year_monthsetobject(java.time.period)for example:// equivalent interval 145 11 year month setobject(1 period.ofyears(145).plusmonths(11 equivalent interval 145 year setobject(period.ofyear 145));interval_day_secondsetobject(java.time duration example:// equivalent interval 4 5:12 day minute setobject(duration.ofdays(4).plushours(5).plusminutes(12 equivalent interval 4 5:12:10.222 day second setobject(duration.parse("p4dt5h12m10.222s</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#id3</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface id3</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#how-the-driver-reports-the-datetime-and-interval-types</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface driver report datetime interval type</field><field name="cont">driver report datetime interval types&#182; table list jdbc driver report datetime type type denodotype return method resultsetmetadata.getcolumntypename()value return method resultsetmetadata.getcolumntype(int)localdatedate91timetime92timestamptimestamp93date deprecate timestamp_with_timezone2014timestamptztimestamp_with_timezone2014interval_year_monthinterval_year_month2020interval_day_secondinterval_day_second2021the type date timestamptz report type timestamp timezone client application distinguish intentional facilitate upgrade denodo 8.0 denodo 6.0 previous version client application need distinguish type treat timestamptz code type interval_year_month interval_day_second define denodo jdbc api type denodoresult resultsetmetadata.getcolumnclassname(int)java class object return class resultset.getobject()localdatejava.sql datejava.sql datetimejava.sql timejava.sql timetimestampjava.sql timestampjava.sql timestampdate deprecated)java.sql timestampjava.sql timestamptimestamptzjava.sql timestampjava.sql timestampinterval_year_monthjava.lang longjava.lang longinvoke java.time period.ofmonth value convert value java.time period object obtain duration object driver invoke resultset.getobject(col java.time.period.class interval_day_secondjava.lang longjava.lang longinvoke java.time duration ofmillis(value convert value java.time duration object obtain duration object driver invoke resultset.getobject(col java.time.duration.class</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#obtaining-the-names-of-elements-inside-a-struct-register</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface obtain name element inside struct register</field><field name="cont">obtain name element inside struct register)&#182;the jdbc driver denodo transform compound value class jdbc api convert value type register java.sql struct object convert value type array java.sql array object java.sql array object array struct object standard jdbc api provide method obtain value inside java.sql struct object i.e. inside register field offer way obtain subfield struct obtain value subfield section explain denodo jdbc driver obtain subfield struct object obtain value subfield instead position inside register example let application execute query return register field subfield last_name first_name row result set return struct object obtain value struct object application invoke method struct.getattribute return array value later modify register add subfield e.g. telephone array return method struct.getattribute element instead addition element array telephone application obtain invalid datum avoid sort maintainability issue want use class denodo jdbc api obtain value struct position register application robust change example show obtain value inside struct object&#182;import com.denodo.vdb.jdbcdriver.printer field import com.denodo.vdb.jdbcdriver vdbjdbcresultsetmetadata import com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type registervo import com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type registervaluevo public static void main(string args throw exception  method getconnection return connection virtual dataport connection connection = getconnection statement st = connection.createstatement string query = select view_with_compound_field resultset rs = st.executequery(query  class vdbjdbcresultsetmetadata field denodo jdbc api belong standard jdbc api vdbjdbcresultsetmetadata metadata = vdbjdbcresultsetmetadata rs.getmetadata field field = metadata.getfield rs.next int columncount = metadata.getcolumncount int = 1 &lt; = columncount i++ object value = rs.getobject(i value = null metadata.getcolumntype(i = = type struct   jdbc api represent value type register struct object    class registervo registervaluevo denodo jdbc api belong standard java api registervo vdptype = registervo fields[i 1].getvdptype list &lt; registervaluevo &gt; registersubtype = vdptype.getelement struct struct = struct value object structvalue = struct.getattribute string firstname = null lastname = null int j=0 j &lt; registersubtypes.size j++ variable registersubtype contain name name subfield string subfieldname = registersubtypes.get(j).getname switch subfieldname case first_name firstname = string structvalues[j break case last_name lastname = string structvalues[j break metadata.getcolumntype(i)==types.array  jdbc api represent value type array array object object register = object rs.getarray(i).getarray object o register denodo jdbc api content array array struct object  struct s = struct o  close resultset statement connection </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#id4</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface id4</field><field name="cont">obtain value inside struct object&#182;import com.denodo.vdb.jdbcdriver.printer field import com.denodo.vdb.jdbcdriver vdbjdbcresultsetmetadata import com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type registervo import com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type registervaluevo public static void main(string args throw exception  method getconnection return connection virtual dataport connection connection = getconnection statement st = connection.createstatement string query = select view_with_compound_field resultset rs = st.executequery(query  class vdbjdbcresultsetmetadata field denodo jdbc api belong standard jdbc api vdbjdbcresultsetmetadata metadata = vdbjdbcresultsetmetadata rs.getmetadata field field = metadata.getfield rs.next int columncount = metadata.getcolumncount int = 1 &lt; = columncount i++ object value = rs.getobject(i value = null metadata.getcolumntype(i = = type struct   jdbc api represent value type register struct object    class registervo registervaluevo denodo jdbc api belong standard java api registervo vdptype = registervo fields[i 1].getvdptype list &lt; registervaluevo &gt; registersubtype = vdptype.getelement struct struct = struct value object structvalue = struct.getattribute string firstname = null lastname = null int j=0 j &lt; registersubtypes.size j++ variable registersubtype contain name name subfield string subfieldname = registersubtypes.get(j).getname switch subfieldname case first_name firstname = string structvalues[j break case last_name lastname = string structvalues[j break metadata.getcolumntype(i)==types.array  jdbc api represent value type array array object object register = object rs.getarray(i).getarray object o register denodo jdbc api content array array struct object  struct s = struct o  close resultset statement connection </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#connecting-from-applications-that-filter-incoming-serialization-data</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface connect application filter incoming serialization datum</field><field name="cont">connect application filter incoming serialization data&#182;the denodo jdbc driver use java remote method invocation rmi connect virtual dataport client application e.g. late version oracle weblogic server include mechanism filter datum receive rmi mechanism increase security client application default configuration filter application prevent application receive datum denodo connect denodo application filter enable administrator application add following parameter control filter.com.denodo configuration filter depend client application find information official specification jep 290 filter incoming serialization datum</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#queries-with-datetime-literals</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface query datetime literal</field><field name="cont">query datetime literals&#182;when escape processing enable jdbc statement denodo jdbc driver interpret jdbc escape syntax timestamp date time literal equivalent correct vql syntax timestamp following syntax timestamp literals:{ts yyyy mm dd hh mm ss.f '}the follow syntax date literals:{d yyyy mm dd'}and following syntax time literals:{t hh mm ss'}for example queryselect my_view time_field = t 20:00:03 date_field = d 1999 01 09 timestamp_field = ts 1999 01 09 20:11:11.123455'}will process jdbc driver send virtual dataport select my_view time_field = time 20:00:03 date_field = date 1999 01 09 timestamp_field = timestamp 1999 01 09 20:11:11.123455</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#get-auto-generated-keys-in-idu-statements</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface auto generate key idu statement</field><field name="cont">auto generate key idu statements&#182;the jdbc driver support retrieve value underlie database generate insert row auto generate value primary key new row example retrieve auto generate key denodo jdbc driver.&#182;statement stmt = conn.createstatement statement.return_generated_key code request virtual dataport return auto generate value int row = stmt.executeupdate("insert customer + first_name last_name + value john smith statement.return_generated_keys resultset rs = stmt.getgeneratedkey boolean b = rs.next b = = true retrieve new key value long customerid = rs.getlong(1 obtain auto generate key execute idu statement i.e. insert update delete method boolean execute string sql int autogeneratedkey second argument statement.return_generated_keys&#8221;)boolean execute string sql int columnindexe boolean execute string sql string columnnames)int executeupdate string sql int autogeneratedkey second argument statement.return_generated_keys&#8221;)int executeupdate string sql int columnindexes)int executeupdate string sql string columnnames)long executelargebatch string sql int autogeneratedkey second argument statement.return_generated_keys&#8221;)long executelargebatch string sql int columnindexes)long executelargebatch string sql string columnname use class java.sql statement java.sql preparedstatement virtual dataport store datum support feature depend underlie database support database vendor implement functionality example let application connect virtual dataport jdbc driver application execute code like datum view customer store oracle oracle return auto generate value virtual dataport driver pass application database test behavior check database use return value work internallywhen application request return generate key driver modify idu query send virtual dataport application request obtain generate key statement.return_generated_key driver append idu statement return generate keyswhen application request auto generate value specific field driver append like idu statement return field_name_2 field_name_4 field_name_5when application request auto generate value specific field index driver append like idu statement return 3 7 11</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/details_of_the_jdbc_interface/details_of_the_jdbc_interface#id5</field><field name="link_cont">vdp developer access jdbc detail jdbc interface detail jdbc interface id5</field><field name="cont">retrieve auto generate key denodo jdbc driver.&#182;statement stmt = conn.createstatement statement.return_generated_key code request virtual dataport return auto generate value int row = stmt.executeupdate("insert customer + first_name last_name + value john smith statement.return_generated_keys resultset rs = stmt.getgeneratedkey boolean b = rs.next b = = true retrieve new key value long customerid = rs.getlong(1</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/enabling_jdbc_logging/enabling_jdbc_logging#enabling-jdbc-logging</field><field name="link_cont">vdp developer access jdbc enable jdbc logging enable jdbc logging enable jdbc logging</field><field name="cont">enable jdbc logging&#182;the denodo jdbc driver generate log information help troubleshoot issue connect virtual dataport jdbc driver store log message file add follow property jdbc connection url loggerlevel level log message allow value severe log severe errors)warninginfofinefinerfinest log events)offloggerfile optional path file store log message loggerconsole optional set true print log message console.loggernativecall optional true driver log information relate communication driver virtual dataport example jdbc connection url sample enable log&#182;jdbc denodo://acme:9999 admin?loggerlevel = fine&amp;loggerfile = c:/vdpjdbc.log</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_jdbc/enabling_jdbc_logging/enabling_jdbc_logging#id1</field><field name="link_cont">vdp developer access jdbc enable jdbc logging enable jdbc log id1</field><field name="cont">jdbc connection url sample enable log&#182;jdbc denodo://acme:9999 admin?loggerlevel = fine&amp;loggerfile = c:/vdpjdbc.log</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/access_through_odbc#access-through-odbc</field><field name="link_cont">vdp developer access odbc access odbc access odbc</field><field name="cont">access odbc&#182;the microsoft open database connectivity odbc standard define c programming language interface make possible application access datum database management system dbmss denodo provide odbc driver window linux provide source code build driver platform driver base odbc postgresql driver version 09.05 odbc driver connect virtual dataport application support jdbc excel notewe recommend connect virtual dataport jdbc driver odbc performance well backward compatibility odbc driver&#182;virtual dataport backward compatible odbc driver client major version denodo odbc driver update connect virtual dataport server update new update example connect virtual dataport version 8.0u20210209 use odbc driver include update driver include 8.0 ga.do use odbc driver include 8.0u20210209 connect virtual dataport server version 8.0 ga driver recent server unsupported configuration operation fail denodo odbc driver version 7.0 able connect denodo 8.0 compatibility guarantee unsupported configuration note install odbc driver 7.0 8.0 computer</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/access_through_odbc#backward-compatibility-of-the-odbc-driver</field><field name="link_cont">vdp developer access odbc access odbc backward compatibility odbc driver</field><field name="cont">backward compatibility odbc driver&#182;virtual dataport backward compatible odbc driver client major version denodo odbc driver update connect virtual dataport server update new update example connect virtual dataport version 8.0u20210209 use odbc driver include update driver include 8.0 ga.do use odbc driver include 8.0u20210209 connect virtual dataport server version 8.0 ga driver recent server unsupported configuration operation fail denodo odbc driver version 7.0 able connect denodo 8.0 compatibility guarantee unsupported configuration note install odbc driver 7.0 8.0 computer</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#configuration-of-the-odbc-driver-on-windows</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver windows configuration odbc driver window</field><field name="cont">configuration odbc driver windows&#182;the denodo platform provide odbc driver window base odbc postgresql driver connect denodo odbc application follow step machine client application run install odbc driverregister new data source window dsn install odbc driver windows&#182;install odbc driver machine client application run follow step obtain file denodo-vdp-odbcdriver-windows.zip copy installation &lt; denodo_home&gt;/tool client driver odbc denodo vdp odbcdriver windows.zip download odbc page denodo community page download driver window end -win sure select version package new denodo server go connect example denodo server update 7.0 20181011 download package denodo vdp odbcdriver-7.0 update-20190312 win new extract content file copy host client application run contain file denodoodbc_x64.msi folder msi install odbc driver 64 bit client denodoodbc_x86.msi folder msi install odbc driver 32 bit client install host application use odbc driver regardless bitness 32 bit driver 32 bit client like microsoft excel microsoft excel use 32 bit odbc driver run 64 bit o.s go connect virtual dataport server run 64 bit jre set dsn windows&#182;after instal denodo odbc driver host client application run need register new datum source know dsn point denodo server follow step open odbc data source applet window administrative tool control panel open press window key enter set odbc datum source importantthere dialog register odbc dsn 32 bit application 64 bit application example connect denodo microsoft excel use set odbc data source 32 bit tab user dsn click add create dsn user account run application connect denodo possible create system dsn local administrator computer register system dsn administrator create dsn create user dsn difference system dsn user dsn user dsn current user system dsn user system select denodoodbc unicode driver denodoodbc ansi click finish configuration dialog fill follow information database database virtual dataport e.g. admin database contain non ascii character url encode example database &#12486;&#12473;&#12488; enter e3%83%86%e3%82%b9%e3%83%88 server port host port server run virtual dataport default odbc port 9996 user password credential virtual dataport user notesome tool ask dsn ask user password instead define dsn able connect password contain follow character + need escape character 25 + 2b 7b 7d.if kerbero authentication select denodo database connect driver ignore credential instead obtain kerberos ticket system cache use kerbero authentication case possible connect normal user password authentication hand select kerberos authentication database level long require use kerbero odbc connection enable kerbero authentication client configuration page 3 data source configuration dsn noteto able use kerbero authentication configuration dsn meet condition client belong window domain reason odbc driver request kerbero ticket ticket cache server field enter fully qualified domain denodo server denodo server kerberos configuration field server principal http/denodo-prod.subnet1.contoso.com@contoso.com enter denodo-prod.subnet1.contoso.com ssl enable virtual dataport server ssl mode list select require denodo odbc driver configuration dialog&#182;click datasource open advanced option dialog default option show screenshot correct consider follow want log request receive dsn select commlog c:\denodoodbc_xxx.log mylog c:\mylog_xxx.log importantin production environment strongly recommend clear check box log request impact performance driver log file grow large size unknown size select maximum mean section maximum length text value use declare fetch select dsn use declare cursor fetch handle select statement effect dsn retrieve row result set block instead retrieve chunk size establish number row block chunk size dsn equivalent fetch size jdbc connection denodo odbc driver advanced configuration page 1)&#182;click page 2 default option show screenshot correct addition area level rollback error select transaction denodo odbc driver advanced configuration page 2)&#182;in connect setting box change property odbc connection establish virtual dataport enter follow set querytimeout &lt; value &gt; change query time value millisecond set i18n &lt; i18n &gt; change i18n connection example set default timeout query hour add follow set querytimeout 3600000 set i18n us_pst;note statement follow table describe property list default value parameter odbc driver default value&#182;connection propertydescriptiondefault valuequerytimeoutmaximum time millisecond driver wait query finish period throw exception 0 driver wait indefinitely query finish parameter set default timeout query addition change timeout single query add parameter querytimeout = &lt; value &gt; context clause query section context clause advanced vql guide 900000 millisecond 15 minutes)i18nset internationalization i18n configuration connection server present driver assume i18n database connect date field query result convert time zone assign i18n connection parameter i18n context clause query override value parameter &lt; i18n database connect &gt; click page 3 following set option use libpq library yes user agent box enter application use dsn recommend set field dsns virtual dataport useful log select use kerbero enable kerbero authentication usually default value krbsrvname correct enable kerbero authentication value match service class service principal server example field server principal kerberos setting server http/denodo1.contoso.com@contoso.com value krbsrvname http denodo odbc driver advanced configuration page 3)&#182;to establish connection oauth authentication instead user password select enable oauth 2.0 authentication provide following value parameter oauth authentication&#182;parametermeaningtoken endpointurl expose oauth server request access_token instance https://login.microsoftonline.com/common/oauth2/token client idapplication client d. usually obtain register client application identity provider client secretapplication client secret scopespace delimit list request scope permission extra parametersadditional parameter add body http request driver send obtain oauth token syntax value parameter param1 = value1&amp;param2 = value2&amp; use id_tokenif select driver use id_token authentication clear use access_token select check box environment openid connect check certificatesif select recommend value driver validate ssl certificate identity provider clear validate certificate oauth connect virtual dataport enable oauth virtual dataport connection oauth fail client application open connection driver request oauth token identity provider use token establish connection click ok close advanced option dialog click test test connection virtual dataport click ok dsn configure ready set dsn recommend read section integration party application error creation dsn try log account administrative privilege install multiple version odbc driver windows&#182;currently denodoodbc .msi installer allow have multiple version denodoodbc odbc driver window machine denodoodbc odbc driver window include set script locate denodo vdp odbcdriver windows.zip\scripts\ multiple version time follow readme aforementioned path instruction</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#install-the-odbc-driver-on-windows</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver window install odbc driver window</field><field name="cont">install odbc driver windows&#182;install odbc driver machine client application run follow step obtain file denodo-vdp-odbcdriver-windows.zip copy installation &lt; denodo_home&gt;/tool client driver odbc denodo vdp odbcdriver windows.zip download odbc page denodo community page download driver window end -win sure select version package new denodo server go connect example denodo server update 7.0 20181011 download package denodo vdp odbcdriver-7.0 update-20190312 win new extract content file copy host client application run contain file denodoodbc_x64.msi folder msi install odbc driver 64 bit client denodoodbc_x86.msi folder msi install odbc driver 32 bit client install host application use odbc driver regardless bitness 32 bit driver 32 bit client like microsoft excel microsoft excel use 32 bit odbc driver run 64 bit o.s go connect virtual dataport server run 64 bit jre</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#set-up-a-dsn-on-windows</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver window set dsn window</field><field name="cont">set dsn windows&#182;after instal denodo odbc driver host client application run need register new datum source know dsn point denodo server follow step open odbc data source applet window administrative tool control panel open press window key enter set odbc datum source importantthere dialog register odbc dsn 32 bit application 64 bit application example connect denodo microsoft excel use set odbc data source 32 bit tab user dsn click add create dsn user account run application connect denodo possible create system dsn local administrator computer register system dsn administrator create dsn create user dsn difference system dsn user dsn user dsn current user system dsn user system select denodoodbc unicode driver denodoodbc ansi click finish configuration dialog fill follow information database database virtual dataport e.g. admin database contain non ascii character url encode example database &#12486;&#12473;&#12488; enter e3%83%86%e3%82%b9%e3%83%88 server port host port server run virtual dataport default odbc port 9996 user password credential virtual dataport user notesome tool ask dsn ask user password instead define dsn able connect password contain follow character + need escape character 25 + 2b 7b 7d.if kerbero authentication select denodo database connect driver ignore credential instead obtain kerberos ticket system cache use kerbero authentication case possible connect normal user password authentication hand select kerberos authentication database level long require use kerbero odbc connection enable kerbero authentication client configuration page 3 data source configuration dsn noteto able use kerbero authentication configuration dsn meet condition client belong window domain reason odbc driver request kerbero ticket ticket cache server field enter fully qualified domain denodo server denodo server kerberos configuration field server principal http/denodo-prod.subnet1.contoso.com@contoso.com enter denodo-prod.subnet1.contoso.com ssl enable virtual dataport server ssl mode list select require denodo odbc driver configuration dialog&#182;click datasource open advanced option dialog default option show screenshot correct consider follow want log request receive dsn select commlog c:\denodoodbc_xxx.log mylog c:\mylog_xxx.log importantin production environment strongly recommend clear check box log request impact performance driver log file grow large size unknown size select maximum mean section maximum length text value use declare fetch select dsn use declare cursor fetch handle select statement effect dsn retrieve row result set block instead retrieve chunk size establish number row block chunk size dsn equivalent fetch size jdbc connection denodo odbc driver advanced configuration page 1)&#182;click page 2 default option show screenshot correct addition area level rollback error select transaction denodo odbc driver advanced configuration page 2)&#182;in connect setting box change property odbc connection establish virtual dataport enter follow set querytimeout &lt; value &gt; change query time value millisecond set i18n &lt; i18n &gt; change i18n connection example set default timeout query hour add follow set querytimeout 3600000 set i18n us_pst;note statement follow table describe property list default value parameter odbc driver default value&#182;connection propertydescriptiondefault valuequerytimeoutmaximum time millisecond driver wait query finish period throw exception 0 driver wait indefinitely query finish parameter set default timeout query addition change timeout single query add parameter querytimeout = &lt; value &gt; context clause query section context clause advanced vql guide 900000 millisecond 15 minutes)i18nset internationalization i18n configuration connection server present driver assume i18n database connect date field query result convert time zone assign i18n connection parameter i18n context clause query override value parameter &lt; i18n database connect &gt; click page 3 following set option use libpq library yes user agent box enter application use dsn recommend set field dsns virtual dataport useful log select use kerbero enable kerbero authentication usually default value krbsrvname correct enable kerbero authentication value match service class service principal server example field server principal kerberos setting server http/denodo1.contoso.com@contoso.com value krbsrvname http denodo odbc driver advanced configuration page 3)&#182;to establish connection oauth authentication instead user password select enable oauth 2.0 authentication provide following value parameter oauth authentication&#182;parametermeaningtoken endpointurl expose oauth server request access_token instance https://login.microsoftonline.com/common/oauth2/token client idapplication client d. usually obtain register client application identity provider client secretapplication client secret scopespace delimit list request scope permission extra parametersadditional parameter add body http request driver send obtain oauth token syntax value parameter param1 = value1&amp;param2 = value2&amp; use id_tokenif select driver use id_token authentication clear use access_token select check box environment openid connect check certificatesif select recommend value driver validate ssl certificate identity provider clear validate certificate oauth connect virtual dataport enable oauth virtual dataport connection oauth fail client application open connection driver request oauth token identity provider use token establish connection click ok close advanced option dialog click test test connection virtual dataport click ok dsn configure ready set dsn recommend read section integration party application error creation dsn try log account administrative privilege</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#denodo-odbc-driver-configuration-dialog</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver windows denodo odbc driver configuration dialog</field><field name="cont">denodo odbc driver configuration dialog&#182;</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#denodo-odbc-driver-advanced-configuration-page-1</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver windows denodo odbc driver advanced configuration page 1</field><field name="cont">denodo odbc driver advanced configuration page 1)&#182;</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#denodo-odbc-driver-advanced-configuration-page-2</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver windows denodo odbc driver advanced configuration page 2</field><field name="cont">denodo odbc driver advanced configuration page 2)&#182;</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#parameters-of-the-odbc-driver-and-their-default-value</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver windows parameter odbc driver default value</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#denodo-odbc-driver-advanced-configuration-page-3</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver windows denodo odbc driver advanced configuration page 3</field><field name="cont">denodo odbc driver advanced configuration page 3)&#182;</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#id1</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver window id1</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_on_windows/configuration_of_the_odbc_driver_on_windows#install-multiple-versions-of-the-odbc-driver-on-windows</field><field name="link_cont">vdp developer access odbc configuration odbc driver windows configuration odbc driver window install multiple version odbc driver window</field><field name="cont">install multiple version odbc driver windows&#182;currently denodoodbc .msi installer allow have multiple version denodoodbc odbc driver window machine denodoodbc odbc driver window include set script locate denodo vdp odbcdriver windows.zip\scripts\ multiple version time follow readme aforementioned path instruction</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#configuration-of-the-odbc-driver-in-linux-and-other-unix</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix configuration odbc driver linux unix</field><field name="cont">configuration odbc driver linux unix&#182;the denodo platform provide odbc driver linux base odbc postgresql driver version driver manager unixodbc iodbc install denodo odbc driver machine client application run follow step obtain appropriate odbc driverinstall unixodbcregister odbc driver unixodbcregister data source dsn point denodoobtain appropriate odbc driver&#182;there flavor denodo odbc driver section explain select obtain package denodo-vdp-odbcdriver-linux.zip copy installation &lt; denodo_home&gt;/tool client driver odbc denodo vdp odbcdriver linux.zip download odbc page denodo community page download driver linux end -linux sure select version package new denodo server go connect example denodo server update 7.0 20181011 download package denodo vdp odbcdriver-7.0 update-20190312 linux new section access odbc explain policy backward compatibility driver extract content file denodo vdp odbcdriver linux.tar.gz tar -xzf denodo-vdp-odbcdriver-linux.tar.gz --directory /opt create folder /opt denodo vdp odbcdriver linuxchoose appropriate flavor driver copy file host client application run option unixodbc_x86 odbc driver 32 bit client unixodbc driver manager unixodbc_x64 odbc driver 64 bit client unixodbc driver manager iodbc_x86 odbc driver 32 bit client iodbc driver manager iodbc_x64 odbc driver 64 bit client iodbc driver manager example connect 32 bit application unixodbc driver manager copy folder unixodbc_x86 host client application run denodo provide ansi version driver file end e.g. unixodbc_x86 denodoodbca.so use ansi version unicode encoding valid environment load denodo odbc driver follow share library version compatible list version need accesible libc.so.6 glibc_2.14 glibc_2.3.4 glibc_2.4 glibc_2.2.5libpthread.so.0 glibc_2.2.5libdl.so.2 glibc_2.2.5libgssapi_krb5.so.2 gssapi_krb5_2_mitinstall unixodbc&#182;linux provide odbc driver manager default install section explain install configure unixodbc denodo provide odbc driver compile iodbc importantinstall unixodbc denodo odbc driver host client application run verify unixodbc instal execute follow command check command line utility odbcinst isql instal isql odbcinstif command return path file section unixodbc instal linux distribution use rpm packaging system e.g. red hat centos etc execute sudo yum install unixodbcfor one base debian like ubuntu execute sudo apt install unixodbcexecute verify unixodbc instal correctly odbcinst -jregister denodo odbc driver unixodbc&#182;after instal unixodbc register odbc driver follow step create file denodoodbcdriver.template content:1 2 3 4[denodoodbcdriver description = odbc driver denodo driver=/opt denodo odbc driver unixodbc_x86 denodoodbc.so usagecount=1modify line 3 point flavor odbc driver want use i.e. unixodbc_x86 unixodbc_x64 execute follow command register denodo driver odbc driver manager sudo odbcinst -install -driver -file denodoodbcdriver.templateto list odbc driver register driver manager execute sudo odbcinst -query -driverthe result list new driver denodoodbcdriver uninstall driver execute sudo odbcinst -uninstall -driver -name denodoodbcdriverregister data source dsn unixodbc&#182;this section explain register dsn unixodbc create file call denododsn.template content below:1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32[denodo_dsn description = denodo connection driver = denodoodbcdriver servername = &lt; host &gt; default port odbc interface virtual dataport port = 9996 username = &lt; virtual dataport user &gt; password = &lt; password &gt; database = &lt; virtual dataport database &gt; useragent = &lt; application use dsn &gt; protocol = 7.4 boolsaschar = 0 byteaaslongvarbinary= 1 connsetting = set querytimeout 3600000 set i18n us_pst /*krbsrvname = http*/ debug = 0 commlog = 0 fakeoidindex = 0 fetch = 1000 ksqo = 0 lfconversion = 1 optimizer = 0 readonly = 0 rowversione = 0 showoidcolumn = 0 showsystemtable = 0 uncomment sslmode ssl enable virtual dataport sslmode = require uniqueindex = 1 updatablecursor = 0 usedeclarefetch = 1 useserversideprepare= 0 usekerberos = 0 line 7 password tool ask dsn ask user password instead define dsn able connect password contain follow character + need escape character 25 + 2b 7b 7d.in line 8 database database contain non ascii character url encode example database &#12486;&#12473;&#12488; set property e3%83%86%e3%82%b9%e3%83%88 line 30 usedeclarefetch value 1 dsn use declare cursor fetch handle select statement effect dsn retrieve row result set block instead retrieve fetch property establish number row block property equivalent fetch size jdbc connection line 14 15 debug commlog value 1 driver log detailed odbc information file create /tmp directory production environment strongly recommend set value property 0 log request impact performance driver log file grow large size line 13 connsetting set property connection establish virtual dataport add follow statement set querytimeout &lt; value &gt; change query time value millisecond set i18n &lt; i18n &gt; change i18n connection example set default timeout query hour set value property connsetting follow connsetting = set querytimeout 3600000 set i18n us_pstnote statement read parameter odbc driver default value learn property work default value enable ssl virtual dataport server secure communication add follow property configuration file sslmode = requireadd follow connsetting property connect virtual dataport kerbero authentication:/*krbsrvname = http*/importantthis line thing connsetting property kerbero authentication enable denodo database connect driver ignore value property username password instead obtain kerberos ticket system cache long require enable kerbero authentication database level odbc connection late denodo odbc driver set property usekerbero 1 enable kerbero authentication client able use kerbero authentication configuration dsn meet condition client belong window domain reason odbc driver use ticket cache operating system obtain ticket grant ticket tgt property servername enter fully qualified domain denodo server kerberos configuration denodo server field server principal http/denodo-prod.subnet1.contoso.com@contoso.com enter denodo-prod.subnet1.contoso.com property useragent optional recommend add dsns user agent allow identify application open connection request application send useful debug problem cause particular client log purpose establish connection oauth authentication instead user password add follow parameter template parameter oauth authentication&#182;propertymeaninguseoauth2set 1 instruct driver open connection oauth authentication tokenendpointurl expose oauth server request access_token instance https://login.microsoftonline.com/common/oauth2/token clientidapplication client d. usually obtain register client application identity provider.clientsecretapplication client secret scopespace delimit list request scope permission extraparamsadditional parameter add body http request driver send obtain oauth token syntax value parameter param1 = value1&amp;param2 = value2&amp; useidtoken 1 driver use id_token authentication 0 use access_token set 1 environment openid connect oauthsslverifyif 1 driver validate ssl certificate identity provider 0 validate certificate default value 1 oauth connect virtual dataport enable oauth virtual dataport connection oauth fail client application open connection driver request oauth token identity provider use token establish connection execute register new dsn sudo odbcinst -install -s -l -f denododsn.templatethe parameter -l register dsn system dsn system dsns available user privilege register system dsn replace -l -h register dsn user dsn instead execute command user execute client application need access dsn reason user dsns available user register list dsns register odbc driver manager execute sudo odbcinst -query -sthe result list new dsn denodo_dsn.execute test dsn command line utility isql include unixodbc isql -v denodo_dsnyou like + ---------------------------------------+ | connect | | | | sql statement | | help tablename | | quit | | | + ---------------------------------------+execute query example select 1 type quit exit shell set dsn recommend read section integration party application compile unixodbc&#182;if install unixodbc package manager operating system download compile follow step download late version source code http://www.unixodbc.org/download.html.execute follow command extract source code compile tar -zxf unixodbc*.tar.gz cd unixodbc ./configure.sh makeexecute following command sudo installtroubleshoote issues&#182; application return error like try use dsn:[unixodbc][driver manager]data source find default driver specify 0 sqldriverconnect)follow step connect host create dsn check file exist:/usr local lib64 libodbc.so /usr local lib64 libodbcinst.so or,/usr local lib libodbc.so /usr local lib libodbcinst.sotheir location change depend linux unix distribution edit file ~/.bash_profile add following end export ld_preload=/usr local lib libodbc.so:/usr local lib libodbcinst.so:$ld_preloadwith change value variable ld_preload sure application load file libodbc.so libodbcinst.so provide unixodbc one provide library noteif file list lib64 lib change line accordingly logout login user account apply change file .bash_profile</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#obtain-the-appropriate-odbc-driver</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix obtain appropriate odbc driver</field><field name="cont">obtain appropriate odbc driver&#182;there flavor denodo odbc driver section explain select obtain package denodo-vdp-odbcdriver-linux.zip copy installation &lt; denodo_home&gt;/tool client driver odbc denodo vdp odbcdriver linux.zip download odbc page denodo community page download driver linux end -linux sure select version package new denodo server go connect example denodo server update 7.0 20181011 download package denodo vdp odbcdriver-7.0 update-20190312 linux new section access odbc explain policy backward compatibility driver extract content file denodo vdp odbcdriver linux.tar.gz tar -xzf denodo-vdp-odbcdriver-linux.tar.gz --directory /opt create folder /opt denodo vdp odbcdriver linuxchoose appropriate flavor driver copy file host client application run option unixodbc_x86 odbc driver 32 bit client unixodbc driver manager unixodbc_x64 odbc driver 64 bit client unixodbc driver manager iodbc_x86 odbc driver 32 bit client iodbc driver manager iodbc_x64 odbc driver 64 bit client iodbc driver manager example connect 32 bit application unixodbc driver manager copy folder unixodbc_x86 host client application run denodo provide ansi version driver file end e.g. unixodbc_x86 denodoodbca.so use ansi version unicode encoding valid environment load denodo odbc driver follow share library version compatible list version need accesible libc.so.6 glibc_2.14 glibc_2.3.4 glibc_2.4 glibc_2.2.5libpthread.so.0 glibc_2.2.5libdl.so.2 glibc_2.2.5libgssapi_krb5.so.2 gssapi_krb5_2_mit</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#install-unixodbc</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix install unixodbc</field><field name="cont">install unixodbc&#182;linux provide odbc driver manager default install section explain install configure unixodbc denodo provide odbc driver compile iodbc importantinstall unixodbc denodo odbc driver host client application run verify unixodbc instal execute follow command check command line utility odbcinst isql instal isql odbcinstif command return path file section unixodbc instal linux distribution use rpm packaging system e.g. red hat centos etc execute sudo yum install unixodbcfor one base debian like ubuntu execute sudo apt install unixodbcexecute verify unixodbc instal correctly odbcinst -j</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#register-the-denodo-odbc-driver-in-unixodbc</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix register denodo odbc driver unixodbc</field><field name="cont">register denodo odbc driver unixodbc&#182;after instal unixodbc register odbc driver follow step create file denodoodbcdriver.template content:1 2 3 4[denodoodbcdriver description = odbc driver denodo driver=/opt denodo odbc driver unixodbc_x86 denodoodbc.so usagecount=1modify line 3 point flavor odbc driver want use i.e. unixodbc_x86 unixodbc_x64 execute follow command register denodo driver odbc driver manager sudo odbcinst -install -driver -file denodoodbcdriver.templateto list odbc driver register driver manager execute sudo odbcinst -query -driverthe result list new driver denodoodbcdriver uninstall driver execute sudo odbcinst -uninstall -driver -name denodoodbcdriver</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#register-a-data-source-dsn-on-unixodbc</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix register data source dsn unixodbc</field><field name="cont">register data source dsn unixodbc&#182;this section explain register dsn unixodbc create file call denododsn.template content below:1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32[denodo_dsn description = denodo connection driver = denodoodbcdriver servername = &lt; host &gt; default port odbc interface virtual dataport port = 9996 username = &lt; virtual dataport user &gt; password = &lt; password &gt; database = &lt; virtual dataport database &gt; useragent = &lt; application use dsn &gt; protocol = 7.4 boolsaschar = 0 byteaaslongvarbinary= 1 connsetting = set querytimeout 3600000 set i18n us_pst /*krbsrvname = http*/ debug = 0 commlog = 0 fakeoidindex = 0 fetch = 1000 ksqo = 0 lfconversion = 1 optimizer = 0 readonly = 0 rowversione = 0 showoidcolumn = 0 showsystemtable = 0 uncomment sslmode ssl enable virtual dataport sslmode = require uniqueindex = 1 updatablecursor = 0 usedeclarefetch = 1 useserversideprepare= 0 usekerberos = 0 line 7 password tool ask dsn ask user password instead define dsn able connect password contain follow character + need escape character 25 + 2b 7b 7d.in line 8 database database contain non ascii character url encode example database &#12486;&#12473;&#12488; set property e3%83%86%e3%82%b9%e3%83%88 line 30 usedeclarefetch value 1 dsn use declare cursor fetch handle select statement effect dsn retrieve row result set block instead retrieve fetch property establish number row block property equivalent fetch size jdbc connection line 14 15 debug commlog value 1 driver log detailed odbc information file create /tmp directory production environment strongly recommend set value property 0 log request impact performance driver log file grow large size line 13 connsetting set property connection establish virtual dataport add follow statement set querytimeout &lt; value &gt; change query time value millisecond set i18n &lt; i18n &gt; change i18n connection example set default timeout query hour set value property connsetting follow connsetting = set querytimeout 3600000 set i18n us_pstnote statement read parameter odbc driver default value learn property work default value enable ssl virtual dataport server secure communication add follow property configuration file sslmode = requireadd follow connsetting property connect virtual dataport kerbero authentication:/*krbsrvname = http*/importantthis line thing connsetting property kerbero authentication enable denodo database connect driver ignore value property username password instead obtain kerberos ticket system cache long require enable kerbero authentication database level odbc connection late denodo odbc driver set property usekerbero 1 enable kerbero authentication client able use kerbero authentication configuration dsn meet condition client belong window domain reason odbc driver use ticket cache operating system obtain ticket grant ticket tgt property servername enter fully qualified domain denodo server kerberos configuration denodo server field server principal http/denodo-prod.subnet1.contoso.com@contoso.com enter denodo-prod.subnet1.contoso.com property useragent optional recommend add dsns user agent allow identify application open connection request application send useful debug problem cause particular client log purpose establish connection oauth authentication instead user password add follow parameter template parameter oauth authentication&#182;propertymeaninguseoauth2set 1 instruct driver open connection oauth authentication tokenendpointurl expose oauth server request access_token instance https://login.microsoftonline.com/common/oauth2/token clientidapplication client d. usually obtain register client application identity provider.clientsecretapplication client secret scopespace delimit list request scope permission extraparamsadditional parameter add body http request driver send obtain oauth token syntax value parameter param1 = value1&amp;param2 = value2&amp; useidtoken 1 driver use id_token authentication 0 use access_token set 1 environment openid connect oauthsslverifyif 1 driver validate ssl certificate identity provider 0 validate certificate default value 1 oauth connect virtual dataport enable oauth virtual dataport connection oauth fail client application open connection driver request oauth token identity provider use token establish connection execute register new dsn sudo odbcinst -install -s -l -f denododsn.templatethe parameter -l register dsn system dsn system dsns available user privilege register system dsn replace -l -h register dsn user dsn instead execute command user execute client application need access dsn reason user dsns available user register list dsns register odbc driver manager execute sudo odbcinst -query -sthe result list new dsn denodo_dsn.execute test dsn command line utility isql include unixodbc isql -v denodo_dsnyou like + ---------------------------------------+ | connect | | | | sql statement | | help tablename | | quit | | | + ---------------------------------------+execute query example select 1 type quit exit shell set dsn recommend read section integration party application</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#id1</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix id1</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#compiling-unixodbc</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix compile unixodbc</field><field name="cont">compile unixodbc&#182;if install unixodbc package manager operating system download compile follow step download late version source code http://www.unixodbc.org/download.html.execute follow command extract source code compile tar -zxf unixodbc*.tar.gz cd unixodbc ./configure.sh makeexecute following command sudo install</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/configuration_of_the_odbc_driver_in_linux_and_other_unix/configuration_of_the_odbc_driver_in_linux_and_other_unix#troubleshooting-issues</field><field name="link_cont">vdp developer access odbc configuration odbc driver linux unix configuration odbc driver linux unix troubleshooting issue</field><field name="cont">troubleshooting issues&#182;if application return error like try use dsn:[unixodbc][driver manager]data source find default driver specify 0 sqldriverconnect)follow step connect host create dsn check file exist:/usr local lib64 libodbc.so /usr local lib64 libodbcinst.so or,/usr local lib libodbc.so /usr local lib libodbcinst.sotheir location change depend linux unix distribution edit file ~/.bash_profile add following end export ld_preload=/usr local lib libodbc.so:/usr local lib libodbcinst.so:$ld_preloadwith change value variable ld_preload sure application load file libodbc.so libodbcinst.so provide unixodbc one provide library noteif file list lib64 lib change line accordingly logout login user account apply change file .bash_profile</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/creating_a_dsn_less_connection/creating_a_dsn_less_connection#creating-a-dsn-less-connection</field><field name="link_cont">vdp developer access odbc create dsn connection create dsn connection create dsn connection</field><field name="cont">create dsn connection&#182;some odbc tool support connect odbc server data source dsn know dsn connection section list parameter use create dsn connection virtual dataport dsn connection 64 bit client&#182;driver={denodoodbc unicode(x64)};uid=&lt;user account&gt;;pwd=&lt;password user&gt;;server=&lt;host name&gt;;database=&lt;database name&gt;;port=9996;sslmode = prefer;service=;krbsrvname = http;useragent=&lt;user agent&gt;;readonly=0;protocol=7.4 1;fakeoidindex=0;showoidcolumn=0;rowversioning=0;showsystemtables=0;connsetting = set+i18n+to+us%5fpst%3b;fetch=100;socket=4096;unknownsizes=0;maxvarcharsize=255;maxlongvarcharsize=8190;debug=0;commlog=0;optimizer=0;ksqo=0;usedeclarefetch=1;textaslongvarchar=1;unknownsaslongvarchar=0;boolsaschar=0;parse=0;cancelasfreestmt=0;extrasystableprefixe = dd_;lfconversion=1;updatablecursors=0;disallowpremature=0;trueisminus1=0;bi=0;byteaaslongvarbinary=0;useserversideprepare=0;lowercaseidentifier=0;preferlibpq=1;gssauthusegss=0;xaopt=3;usekerberos=0dsn connection 32 bit client&#182;driver={denodoodbc unicode};uid=&lt;user account&gt;;pwd=&lt;password user&gt;;server=&lt;host name&gt;;database=&lt;database name&gt;;port=9996;pwd=;sslmode = prefer;service=;krbsrvname = http;useragent=&lt;user agent&gt;;readonly=0;protocol=7.4 1;fakeoidindex=0;showoidcolumn=0;rowversioning=0;showsystemtables=0;connsetting = set+i18n+to+us%5fpst%3b;fetch=100;socket=4096;unknownsizes=0;maxvarcharsize=255;maxlongvarcharsize=8190;debug=0;commlog=0;optimizer=0;ksqo=0;usedeclarefetch=1;textaslongvarchar=1;unknownsaslongvarchar=0;boolsaschar=0;parse=0;cancelasfreestmt=0;extrasystableprefixe = dd_;lfconversion=1;updatablecursors=0;disallowpremature=0;trueisminus1=0;bi=0;byteaaslongvarbinary=0;useserversideprepare=0;lowercaseidentifier=0;preferlibpq=1;gssauthusegss=0;xaopt=3;usekerberos=0about example use example replace &lt; user account &gt; &lt; password user &gt; &lt; host &gt; &lt; database &gt; &lt; user agent &gt; change default odbc port replace 9996 actual odbc port virtual dataport note value property driver denodoodbc unicode denodoodbc unicode(x64 depend create connection 32 bit client 64 bit respectively dsn connection able connect password contain follow character + need escape character 25 + 2b 7b 7d.notedo leave space name parameter equal symbol value semicolon etc use kerbero authentication&#182;to connect virtual dataport kerberos authentication check administrator denodo kerbero configure virtual dataport connection oauth protocol fail use kerbero authentication dsn connection use previous general template follow consideration remove parameter uid pwd set parameter usekerbero 1 value property server fully qualified domain denodo server kerberos configuration denodo server field server principal http/denodo-prod.subnet1.contoso.com@contoso.com enter denodo-prod.subnet1.contoso.com usually default value krbsrvname correct value match service class service principal server example field server principal kerberos setting server http/denodo1.contoso.com@contoso.com value krbsrvname http use oauth authentication&#182;to connect virtual dataport oauth authentication check administrator denodo oauth enable virtual dataport connection oauth protocol fail denodo odbc driver provide path connect denodo oauth depend choose add certain parameter connection string.path 1 oauth 2.0 authentication provide access tokenthe client application obtain oauth access token pass driver driver use token connect virtual dataport instead user password path mean client application ability obtain access token connect virtual dataport client application obtain access token behalf end user application use method add parameter dns connection string useoauth2=1 enable oauth 2.0 authenticationaccesstoken value access token obtain client application remove parameter uid pwd path 2 oauth 2.0 resource owner password credentialsif client application ability obtain oauth token driver obtain behalf application identity provider organization support resource owner password credential oauth flow case configure connection information identity provider url request token identity provider client d client secret application register identity provider etc use method provide value parameter uid pwd provide credential identity provider obtain access token add follow parameter connection string parameter oauth authentication&#182;propertymeaninguseoauth2set 1 instruct driver open connection oauth authentication tokenendpointurl expose oauth server request access_token instance https://login.microsoftonline.com/common/oauth2/token clientidapplication client d. usually obtain register client application identity provider.clientsecretapplication client secret scopespace delimit list request scope permission extraparamsadditional parameter add body http request driver send obtain oauth token syntax value parameter param1 = value1&amp;param2 = value2&amp; useidtoken 1 driver use id_token authentication 0 use access_token set 1 environment openid connect oauthsslverifyif 1 driver validate ssl certificate identity provider 0 validate certificate default value 1</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/creating_a_dsn_less_connection/creating_a_dsn_less_connection#dsn-less-connection-from-a-64-bit-client</field><field name="link_cont">vdp developer access odbc create dsn connection create dsn connection dsn connection 64 bit client</field><field name="cont">dsn connection 64 bit client&#182;driver={denodoodbc unicode(x64)};uid=&lt;user account&gt;;pwd=&lt;password user&gt;;server=&lt;host name&gt;;database=&lt;database name&gt;;port=9996;sslmode = prefer;service=;krbsrvname = http;useragent=&lt;user agent&gt;;readonly=0;protocol=7.4 1;fakeoidindex=0;showoidcolumn=0;rowversioning=0;showsystemtables=0;connsettings = set+i18n+to+us%5fpst%3b;fetch=100;socket=4096;unknownsizes=0;maxvarcharsize=255;maxlongvarcharsize=8190;debug=0;commlog=0;optimizer=0;ksqo=0;usedeclarefetch=1;textaslongvarchar=1;unknownsaslongvarchar=0;boolsaschar=0;parse=0;cancelasfreestmt=0;extrasystableprefixe = dd_;lfconversion=1;updatablecursors=0;disallowpremature=0;trueisminus1=0;bi=0;byteaaslongvarbinary=0;useserversideprepare=0;lowercaseidentifier=0;preferlibpq=1;gssauthusegss=0;xaopt=3;usekerberos=0</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/creating_a_dsn_less_connection/creating_a_dsn_less_connection#dsn-less-connection-from-a-32-bit-client</field><field name="link_cont">vdp developer access odbc create dsn connection create dsn connection dsn connection 32 bit client</field><field name="cont">dsn connection 32 bit client&#182;driver={denodoodbc unicode};uid=&lt;user account&gt;;pwd=&lt;password user&gt;;server=&lt;host name&gt;;database=&lt;database name&gt;;port=9996;pwd=;sslmode = prefer;service=;krbsrvname = http;useragent=&lt;user agent&gt;;readonly=0;protocol=7.4 1;fakeoidindex=0;showoidcolumn=0;rowversioning=0;showsystemtables=0;connsettings = set+i18n+to+us%5fpst%3b;fetch=100;socket=4096;unknownsizes=0;maxvarcharsize=255;maxlongvarcharsize=8190;debug=0;commlog=0;optimizer=0;ksqo=0;usedeclarefetch=1;textaslongvarchar=1;unknownsaslongvarchar=0;boolsaschar=0;parse=0;cancelasfreestmt=0;extrasystableprefixe = dd_;lfconversion=1;updatablecursors=0;disallowpremature=0;trueisminus1=0;bi=0;byteaaslongvarbinary=0;useserversideprepare=0;lowercaseidentifier=0;preferlibpq=1;gssauthusegss=0;xaopt=3;usekerberos=0</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/creating_a_dsn_less_connection/creating_a_dsn_less_connection#use-kerberos-authentication</field><field name="link_cont">vdp developer access odbc create dsn connection create dsn connection use kerbero authentication</field><field name="cont">use kerbero authentication&#182;to connect virtual dataport kerberos authentication check administrator denodo kerbero configure virtual dataport connection oauth protocol fail use kerbero authentication dsn connection use previous general template follow consideration remove parameter uid pwd set parameter usekerbero 1 value property server fully qualified domain denodo server kerberos configuration denodo server field server principal http/denodo-prod.subnet1.contoso.com@contoso.com enter denodo-prod.subnet1.contoso.com usually default value krbsrvname correct value match service class service principal server example field server principal kerberos setting server http/denodo1.contoso.com@contoso.com value krbsrvname http</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/creating_a_dsn_less_connection/creating_a_dsn_less_connection#use-oauth-authentication</field><field name="link_cont">vdp developer access odbc create dsn connection create dsn connection use oauth authentication</field><field name="cont">use oauth authentication&#182;to connect virtual dataport oauth authentication check administrator denodo oauth enable virtual dataport connection oauth protocol fail denodo odbc driver provide path connect denodo oauth depend choose add certain parameter connection string.path 1 oauth 2.0 authentication provide access tokenthe client application obtain oauth access token pass driver driver use token connect virtual dataport instead user password path mean client application ability obtain access token connect virtual dataport client application obtain access token behalf end user application use method add parameter dns connection string useoauth2=1 enable oauth 2.0 authenticationaccesstoken value access token obtain client application remove parameter uid pwd path 2 oauth 2.0 resource owner password credentialsif client application ability obtain oauth token driver obtain behalf application identity provider organization support resource owner password credential oauth flow case configure connection information identity provider url request token identity provider client d client secret application register identity provider etc use method provide value parameter uid pwd provide credential identity provider obtain access token add follow parameter connection string parameter oauth authentication&#182;propertymeaninguseoauth2set 1 instruct driver open connection oauth authentication tokenendpointurl expose oauth server request access_token instance https://login.microsoftonline.com/common/oauth2/token clientidapplication client d. usually obtain register client application identity provider.clientsecretapplication client secret scopespace delimit list request scope permission extraparamsadditional parameter add body http request driver send obtain oauth token syntax value parameter param1 = value1&amp;param2 = value2&amp; useidtoken 1 driver use id_token authentication 0 use access_token set 1 environment openid connect oauthsslverifyif 1 driver validate ssl certificate identity provider 0 validate certificate default value 1</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/creating_a_dsn_less_connection/creating_a_dsn_less_connection#id1</field><field name="link_cont">vdp developer access odbc create dsn connection create dsn connection id1</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/details_of_the_odbc_interface/details_of_the_odbc_interface#details-of-the-odbc-interface</field><field name="link_cont">vdp developer access odbc detail odbc interface detail odbc interface detail odbc interface</field><field name="cont">detail odbc interface&#182;this section describe information specific odbc interface denodo odbc interface report datetime interval datum typeshow odbc interface report datetime interval datum types&#182; odbc interface denodo follow protocol postgresql table list datum type denodo map datum type postgresql type denodotype postgresqltype code postgresqllocaldatedate1082timetime1083timestamptimestamp1114date deprecated)timestamptz1184timestamptztimestamptz1184interval_year_monthinterval1186interval_day_secondinterval1186the type date timestamptz report type timestamp timezone client application distinguish facilitate upgrade denodo 6.0 previous version client application need distinguish type treat timestamptz</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/details_of_the_odbc_interface/details_of_the_odbc_interface#how-the-odbc-interface-reports-the-datetime-and-interval-data-types</field><field name="link_cont">vdp developer access odbc detail odbc interface detail odbc interface odbc interface report datetime interval datum type</field><field name="cont">odbc interface report datetime interval datum types&#182;the odbc interface denodo follow protocol postgresql table list datum type denodo map datum type postgresql type denodotype postgresqltype code postgresqllocaldatedate1082timetime1083timestamptimestamp1114date deprecated)timestamptz1184timestamptztimestamptz1184interval_year_monthinterval1186interval_day_secondinterval1186the type date timestamptz report type timestamp timezone client application distinguish facilitate upgrade denodo 6.0 previous version client application need distinguish type treat timestamptz</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/integration_with_third-party_applications/integration_with_third-party_applications#integration-with-third-party-applications</field><field name="link_cont">vdp developer access odbc integration party application integration party application integration party application</field><field name="cont">integration party applications&#182;the follow subsection describe certain issue run connect odbc interface denodo party application</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/integration_with_third-party_applications/supporting_queries_with_brackets#supporting-queries-with-brackets</field><field name="link_cont">vdp developer access odbc integration party application support query bracket support query bracket</field><field name="cont">support query brackets&#182;some application microsoft power pivot query send denodo surround schema view bracket i.e. instead double quote example send query like select customer_360].[customer customer_360].[customer]instead send like select customer_360" "customer customer_360" "customer"to configure dsn allow bracket instead double quote surround name schemas view add following connection setting dsn set identifierdelimiter = brackets;to configure window open configuration dialog dsn click data source page 2 add connect setting box configure linux add property connsetting property file register dsn delete dsn driver manager add section set dsn window register denodo odbc driver unixodbc explain detail configure dsn window linux respectively</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/integration_with_third-party_applications/maximum_length_of_text_values#maximum-length-of-text-values</field><field name="link_cont">vdp developer access odbc integration party application maximum length text value maximum length text value</field><field name="cont">maximum length text values&#182;when application execute query odbc interface virtual dataport interface provide metadata field result set query field type text report thing maximum length value field text field type size define source type property odbc interface report value type size define odbc interface report maximum size value field unknown case configure dsn option unknown size = maximum page 1 dialog dsn configuration dsn report maximum length field value specify max varchar property dsn length text value field type size define long max varchar application execute query follow thing leave value truncate value max varchar size set value null behavior change application application set source type property virtual dataport view section view schema base view administration guide</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/integration_with_third-party_applications/maximum_length_of_error_messages#maximum-length-of-error-messages</field><field name="link_cont">vdp developer access odbc integration party application maximum length error message maximum length error message</field><field name="cont">maximum length error messages&#182;there application fail length error message exceed certain length work problem virtual dataport provide option set limit length error message option configure odbc interface server limit length error message execute command vql shell administrator account set com.denodo.vdb.vdbinterface.server.odbc.errormaxlength = 200 statement set limit 200 character change affect odbc client configure individual connection connection establish denodo odbc driver add parameter errormaxlength connect setting dsn example set errormaxlength 200 set querytimeout 3600000;for connection establish ado.net provider section access ado.net data provider add parameter errormaxlength database example support?errormaxlength=200the option set connection option 2 override option set server option 1 example configure odbc interface limit length error message 150 dsn 100 limit 100</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_odbc/integration_with_third-party_applications/disabling_transactions#disabling-transactions</field><field name="link_cont">vdp developer access odbc integration party application disable transaction disable transaction</field><field name="cont">disable transactions&#182;some application start transaction inadvertently start transaction need put unnecessary strain virtual dataport server default avoid impact performance odbc interface denodo ignore statement odbc application send start finish transaction begincommitrollbacksavepointreleaseyou configure odbc interface process statement follow step open virtual dataport administration tool log administrator user open vql shell execute statement set com.denodo.vdb.vdbinterface.server.odbc.ignoretransaction = false';the change apply immediately restart virtual dataport server necessary step odbc interface start process command list change property affect client connect odbc interface affect client connect virtual dataport interface jdbc client publish web service etc revert default behavior execute follow set com.denodo.vdb.vdbinterface.server.odbc.ignoretransaction = true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_an_ado.net_data_provider/access_through_an_ado.net_data_provider#access-through-an-ado-net-data-provider</field><field name="link_cont">vdp developer access ado.net data provider access ado.net data provider access ado net data provider</field><field name="cont">access ado.net datum provider&#182;ado.net datum provider software component allow user develop application independent database want use virtual dataport compatible .net data provider postgresql version 2.0 recommend version 2.0.12 2.2.0 2.2.3 2.2.7 download repository version 3.x npgsql support partially execute select insert update delete query inspect view virtual dataport database application following create new object class npgsqlconnection pass connection string constructor example &lt; denodo_home&gt;/samples vdp vdp client ado.net program.cs define ado.net provider global machine.config file .config file application application request connection npgsql factory set appropriate connection string option allow write code independent database sample app.config file provider definition&#182;&lt;?xml version="1.0 encoding="iso-8859 1 &gt; &lt; configuration &gt; &lt; system.data &gt; &lt; dbproviderfactorie &gt; &lt; add name="npgsql data provider invariant="npgsql support="ff description="ado.net data provider denodo type="npgsql npgsqlfactory npgsql version=2.0.12.0 culture = neutral publickeytoken=5d8b90d52f46fda7 &gt; &lt; /dbproviderfactories &gt; &lt; /system.data &gt; &lt; /configuration &gt; sample connectionstring connect virtual dataport&#182;string connectionstring = server = acme + port=9996 + username = admin + password = admin + database = admin + commandtimeout=80000";if database contain non ascii character url encode example database &#12486;&#12473;&#12488; set property database e3%83%86%e3%82%b9%e3%83%88 default query timeout connection establish commandtimeout parameter time millisecond connection timeout 80 second value i18n connection set database parameter connection string section parameter odbc driver default value describe property default value ssl tls enable virtual dataport server secure communication add follow parameter connectionstring:"ssl = true;sslmode = require"the page http://www.npgsql.org/doc/connection-string-parameters.html list parameter connectionstring</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_an_ado.net_data_provider/access_through_an_ado.net_data_provider#figure-sample-app-config-file-with-the-provider-definition</field><field name="link_cont">vdp developer access ado.net data provider access ado.net data provider figure sample app config file provider definition</field><field name="cont">sample app.config file provider definition&#182;&lt;?xml version="1.0 encoding="iso-8859 1 &gt; &lt; configuration &gt; &lt; system.data &gt; &lt; dbproviderfactorie &gt; &lt; add name="npgsql data provider invariant="npgsql support="ff description="ado.net data provider denodo type="npgsql npgsqlfactory npgsql version=2.0.12.0 culture = neutral publickeytoken=5d8b90d52f46fda7 &gt; &lt; /dbproviderfactories &gt; &lt; /system.data &gt; &lt; /configuration &gt;</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_an_ado.net_data_provider/access_through_an_ado.net_data_provider#id1</field><field name="link_cont">vdp developer access ado.net data provider access ado.net data provider id1</field><field name="cont">sample connectionstring connect virtual dataport&#182;string connectionstring = server = acme + port=9996 + username = admin + password = admin + database = admin + commandtimeout=80000</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_an_ado.net_data_provider/using_kerberos_authentication/using_kerberos_authentication#using-kerberos-authentication</field><field name="link_cont">vdp developer access ado.net data provider kerberos authentication kerberos authentication kerberos authentication</field><field name="cont">kerbero authentication&#182;to develop application log virtual dataport kerberos authentication following add parameter krbsrvname = http connection string parameter server connection string qualified domain virtual dataport server field server principal kerberos setting virtual dataport server prefix http/ @&lt;domain &gt; i.e. server principal http/denodo-prod.subnet1.contoso.com@contoso.com server parameter denodo-prod.subnet1.contoso.com alias dns example stre connectionstre = server = denodo1.subnet1.contoso.com + port=9996 + database = admin + commandtimeout=80000";as kerberos authentication need provide property username password connection string use kerbero authentication condition meet application use version 2.2.7 version npgsql provider early version support kerbero authentication virtual dataport database application connect configure option odbc addo.net authentication type set kerbero host application run belong window domain reason adapter use ticket cache operating system obtain ticket grant ticket tgt</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/access_through_ole_db/access_through_ole_db#access-through-ole-db</field><field name="link_cont">vdp developer access ole db access ole db access ole db</field><field name="cont">access ole db&#182;ole db object link embed database api design microsoft allow access datum variety source uniform manner denodo platform include ole db adapter partner intellisoft provide contact information</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_extensions#developing-extensions</field><field name="link_cont">vdp developer develop extension develop extension develop extension</field><field name="cont">develop extensions&#182;the follow section explain develop extension api denodo extension develop custom filter custom function store procedure custom wrapper develop extension debug follow instruction article debug denodo custom extension eclipse denodo knowledge base</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/developing_custom_functions#developing-custom-functions</field><field name="link_cont">vdp developer develop extension develop custom function develop custom function develop custom function</field><field name="cont">develop custom functions&#182;custom function allow user extend set function available virtual dataport custom function implement java class include jar file add virtual dataport section import extension administration guide custom function way function like max min sum etc.virtual dataport allow create condition aggregation custom function function different java class possible group single jar file virtual dataport installation directory &lt; denodo_home&gt;/samples vdp customfunction example custom function readme file directory explain compile use example develop custom function import virtual dataport read article debug denodo custom extension eclipse denodo knowledge base learn debug strongly recommend develop custom function java annotation section create custom function annotation possible develop follow certain convention section create custom function convention custom function access feature provide denodo platform rule custom function follow work properly function allow jar contain function server load jar custom function store jar add remove upload remove jar server function signature signature represent different method java class define custom function function arity n parameter signature repeat n time function stateless store datum execution e.g. use global variable custom function implement stateful work properly certain scenario custom function signature return compound type value register array need additional method compute structure return type way virtual dataport know advance output schema query method need output type depend input value custom function define custom function simple type map directly java object virtual dataport datum object follow table show mapping work java type equivalency java virtual dataport datum types&#182;virtual dataport typejava classblobbyte[]booleanjava.lang booleandate deprecate java.util.calendardecimaljava.math bigdecimaldoublejava.lang doublefloatjava.lang floatintjava.lang integerintervaldaysecondjava.time durationintervalyearmonthjava.time periodlocaldatejava.time localdatelongjava.lang longtextjava.lang stringtimejava.time localtimetimestampjava.time localdatetimetimestamptzjava.time zoneddatetime java.util.calendar parameter custom function primitive int long double etc valid instead use java.lang.integer java.lang long java.long double etc parameter function varargs argument example function1(integer parameter1 string parametern)in virtual dataport function variable number argument custom function rely party library following copy content require jar file jar contain custom function copy content require jar jar copy require jar file directory &lt; denodo_home&gt;/extensions thirdparty lib general advise copy jar file directory sure library interact library denodo platform example copy library apache common directory probably cause malfunction virtual dataport server</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/developing_custom_functions#equivalency-between-java-and-virtual-dataport-data-types</field><field name="link_cont">vdp developer develop extension develop custom function develop custom function equivalency java virtual dataport datum type</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/creating_custom_functions_with_annotations#creating-custom-functions-with-annotations</field><field name="link_cont">vdp developer develop extension develop custom function create custom function annotation create custom function annotation</field><field name="cont">create custom function annotations&#182;a custom function create annotation java class annotation indicate virtual dataport java class contain code custom function method(s contain code virtual dataport run custom function invoke java class contain custom function signature example class define function function1 signature function1(int function1(int text etc.to develop custom function add library &lt; denodo_home&gt;/lib contrib denodo common custom.jar classpath development environment follow step create java class annotate @customelement package com.denodo.common.custom.annotation follow parameter function.type type function value customelementtype vdpfunction function scalar customelementtype vdpaggregatefunction aggregation function add method signature want function example develop custom function function1 signature function1(int function1(int text add methods:@customexecutor public integer method1(integer @customexecutor public integer method2(integ string s type method parameter basic java type i.e. string integer long float etc parameter primitive type method represent signature function annotation @customexecutor package com.denodo.common.custom.annotation runtime server run appropriate method depend parameter pass function example query invoke function function1(int server run code method query invoke function function1(int text server run code second method class number method signature addition method class custom function invoke code class optionally add parameter syntax @customexecutor annotation administration tool use value parameter display signature custom function user e.g. auto completion feature expression editor value syntax parameter take preference value syntax parameter @customparam annotation use want custom function push database add parameter delegationpattern implementation @customexecutor annotation section develop custom function delegate database explain detail develop type function method @customexecutor annotation add annotation @customparam syntax parameter parameter method value syntax parameter give user friendly parameter function signature autocomplete feature administration tool display annotation syntax method display arg1 args2 value parameter ignore annotation @customexecutor method parameter syntax value parameter mandatory @customparam annotation ignore annotation develop custom policy develop aggregation function mark parameter represent aggregation field annotation @customgroup type parameter customgroupvalue grouptype parameter type element group example,@customexecutor public string aggregationfunction @customgroup(name="textfield grouptype = string.class customgroupvalue &lt; string &gt; textfield method annotate @customexecutor meet follow condition add method annotate @customexecutorreturntype return type function array register return type function depend type input parameter section custom function return type detail method develop custom function delegate database&#182;this section explain develop custom function executable virtual dataport server delegate jdbc datum source mean possible instead execute java code custom function server invoke function database add follow parameter annotation(s @customexecutor method(s implement function implementation true mean code function return proper result server execute code function delegate database false mean code custom function valid server execute server return error delegate function database.delegationpattern array delegationpattern annotation represent configuration database function delegate delegationpattern following attribute databasename database support function value correspond value parameter databasename create datasource jdbc statement create jdbc datum source want delegate function to.databaseversion optional array version database support function parameter present mean function delegate version database indicate databasename value array correspond value parameter databaseversion create datasource jdbc statement create jdbc datum source want delegate function to.pattern expression delegate database parameter necessary function different signature database string sort regular expression $ 0 represent parameter pass custom function $ 1 second etc parameter variable number argument varargs use pattern $ 0 $ i]{1 n example signature function f1(integer string param value pattern like pattern="function_in_db($0 $ 1 $ i]{2 n example 2 show define pattern parameter variable number argument pattern parameter use character indicate variable number argument e.g. $ 0 $ i]{1 n character literal noteyou develop custom function delegable database convention describe section create custom function convention annotation examplesexample 1 custom scalar function delegate databaselet develop custom function call max_value return maximum number number microsoft sql server function call maximum_n calculate oracle function call top_n version 10 g 11 g previous version 1 add parameter annotation @customexecutor virtual dataport delegate execution function oracle 10 g 11 g version sql server possible example annotate custom function delegate database&#182;@customelement(type = customelementtype vdpfunction = max_value public class customfunctionmaxnumber @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = maximum_n($0 $ 1 $ 2 @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = top_n($0 $ 1 $ 2 public double max @customparam(name = arg0 double arg0 @customparam(name = arg1 double arg1 @customparam(name = arg2 double arg2 function delegate database e.g. use query base view teradata execution engine execute code @delegationpattern annotation indicate server delegate function sql server version delegate function maximum_3 second @delegationpattern indicate server delegate function version 10 g 11 g oracle function delegate version delegate function top_3 example 2 custom scalar function variable number argument delegate databaselet want develop function variable number argument case define parameter varargs note type parameter example annotate custom function delegate database 2)&#182;@customelement(type = customelementtype vdpfunction = max_value public class customfunctionmaxnumber @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = maximum_n($0 $ i]{1 n @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = top_n($0 $ i]{1 n public double max @customparam(name = value double arg0 function delegate database e.g. use query base view teradata execution engine execute code add type parameter function admit value pattern parameter define function delegate database $ 0 $ i]{1 n mean pass value 2 function server delegate top_n(2 oracle pass parameter 2 3 4 server delegate top_3(2 3 4 oracle example 3 custom aggregation function delegate databasecustom aggregation function delegate database&#182;@customelement(type = customelementtype vdpaggregatefunction = max_aggr_value public class customaggregationfunction @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = aggregation_func_sql_server $ 0 @delegationpattern(databasename = mysql pattern = aggregation_func_mysql $ 0 @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = aggregation_func_oracle $ 0 public string customaggregationfunctionsignature1 @customgroup(name = field grouptype = string.class customgroupvalue &lt; string &gt; textfield  function delegate database e.g. use query tobase view teradata execution engine execute code return null footnotes1sql server oracle function sake example</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/creating_custom_functions_with_annotations#developing-custom-functions-that-can-be-delegated-to-a-database</field><field name="link_cont">vdp developer develop extension develop custom function create custom function annotation develop custom function delegate database</field><field name="cont">develop custom function delegate database&#182;this section explain develop custom function executable virtual dataport server delegate jdbc datum source mean possible instead execute java code custom function server invoke function database add follow parameter annotation(s @customexecutor method(s implement function implementation true mean code function return proper result server execute code function delegate database false mean code custom function valid server execute server return error delegate function database.delegationpattern array delegationpattern annotation represent configuration database function delegate delegationpattern following attribute databasename database support function value correspond value parameter databasename create datasource jdbc statement create jdbc datum source want delegate function to.databaseversion optional array version database support function parameter present mean function delegate version database indicate databasename value array correspond value parameter databaseversion create datasource jdbc statement create jdbc datum source want delegate function to.pattern expression delegate database parameter necessary function different signature database string sort regular expression $ 0 represent parameter pass custom function $ 1 second etc parameter variable number argument varargs use pattern $ 0 $ i]{1 n example signature function f1(integer string param value pattern like pattern="function_in_db($0 $ 1 $ i]{2 n example 2 show define pattern parameter variable number argument pattern parameter use character indicate variable number argument e.g. $ 0 $ i]{1 n character literal noteyou develop custom function delegable database convention describe section create custom function convention annotation examplesexample 1 custom scalar function delegate databaselet develop custom function call max_value return maximum number number microsoft sql server function call maximum_n calculate oracle function call top_n version 10 g 11 g previous version 1 add parameter annotation @customexecutor virtual dataport delegate execution function oracle 10 g 11 g version sql server possible example annotate custom function delegate database&#182;@customelement(type = customelementtype vdpfunction = max_value public class customfunctionmaxnumber @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = maximum_n($0 $ 1 $ 2 @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = top_n($0 $ 1 $ 2 public double max @customparam(name = arg0 double arg0 @customparam(name = arg1 double arg1 @customparam(name = arg2 double arg2 function delegate database e.g. use query base view teradata execution engine execute code @delegationpattern annotation indicate server delegate function sql server version delegate function maximum_3 second @delegationpattern indicate server delegate function version 10 g 11 g oracle function delegate version delegate function top_3 example 2 custom scalar function variable number argument delegate databaselet want develop function variable number argument case define parameter varargs note type parameter example annotate custom function delegate database 2)&#182;@customelement(type = customelementtype vdpfunction = max_value public class customfunctionmaxnumber @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = maximum_n($0 $ i]{1 n @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = top_n($0 $ i]{1 n public double max @customparam(name = value double arg0 function delegate database e.g. use query base view teradata execution engine execute code add type parameter function admit value pattern parameter define function delegate database $ 0 $ i]{1 n mean pass value 2 function server delegate top_n(2 oracle pass parameter 2 3 4 server delegate top_3(2 3 4 oracle example 3 custom aggregation function delegate databasecustom aggregation function delegate database&#182;@customelement(type = customelementtype vdpaggregatefunction = max_aggr_value public class customaggregationfunction @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = aggregation_func_sql_server $ 0 @delegationpattern(databasename = mysql pattern = aggregation_func_mysql $ 0 @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = aggregation_func_oracle $ 0 public string customaggregationfunctionsignature1 @customgroup(name = field grouptype = string.class customgroupvalue &lt; string &gt; textfield  function delegate database e.g. use query tobase view teradata execution engine execute code return null footnotes1sql server oracle function sake example</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/creating_custom_functions_with_annotations#id2</field><field name="link_cont">vdp developer develop extension develop custom function create custom function annotation id2</field><field name="cont">example annotate custom function delegate database&#182;@customelement(type = customelementtype vdpfunction = max_value public class customfunctionmaxnumber @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = maximum_n($0 $ 1 $ 2 @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = top_n($0 $ 1 $ 2 public double max @customparam(name = arg0 double arg0 @customparam(name = arg1 double arg1 @customparam(name = arg2 double arg2 function delegate database e.g. use query base view teradata execution engine execute code </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/creating_custom_functions_with_annotations#id3</field><field name="link_cont">vdp developer develop extension develop custom function create custom function annotation id3</field><field name="cont">example annotate custom function delegate database 2)&#182;@customelement(type = customelementtype vdpfunction = max_value public class customfunctionmaxnumber @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = maximum_n($0 $ i]{1 n @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = top_n($0 $ i]{1 n public double max @customparam(name = value double arg0 function delegate database e.g. use query base view teradata execution engine execute code </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/creating_custom_functions_with_annotations#id4</field><field name="link_cont">vdp developer develop extension develop custom function create custom function annotation id4</field><field name="cont">custom aggregation function delegate database&#182;@customelement(type = customelementtype vdpaggregatefunction = max_aggr_value public class customaggregationfunction @customexecutor(implementation = true delegationpattern = @delegationpattern(databasename = sqlserver pattern = aggregation_func_sql_server $ 0 @delegationpattern(databasename = mysql pattern = aggregation_func_mysql $ 0 @delegationpattern(databasename = oracle databaseversion = 10 g 11 g pattern = aggregation_func_oracle $ 0 public string customaggregationfunctionsignature1 @customgroup(name = field grouptype = string.class customgroupvalue &lt; string &gt; textfield  function delegate database e.g. use query tobase view teradata execution engine execute code return null</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/creating_custom_functions_using_name_conventions#creating-custom-functions-using-name-conventions</field><field name="link_cont">vdp developer develop extension develop custom function create custom function convention create custom function convention</field><field name="cont">create custom function conventions&#182;we recommend develop custom function annotation possible follow certain convention class method order java class recognizable custom function class match following rules:&lt;functionname &gt; vdpfunction condition function &lt; functionname &gt; vdpaggregatefunction aggregation function notethese convention case sensitive mean class like function1vdpfunction function1vdpfunction way java class name concat_samplevdpfunction interpret condition function name concat_sample class name group_concat_samplevdpaggregatefunction aggregate function name group_concat_sample java method implement function signature execute signature associate method extract method parameter example class name concat_samplevdpfunction method execute(valuea string valueb string):stre generate function signature concat_sample(arg1 text arg2 text way define arity n custom function array parameter method i.e. class concat_samplevdpfunction method declare public string execute(string input custom function define method name executereturntype parameter associated execute method return type function array register return type function depend type input parameter section custom function return type detail method</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/compound_types#compound-types</field><field name="link_cont">vdp developer develop extension develop custom function compound type compound type</field><field name="cont">compound types&#182;in custom function compound type compound value represent follow java class register com.denodo.common.custom.element customrecordtype represent type register field value register method getpropertie return collection type pair element collection hold type field register class object return method gettype interface customrecordtype property depend type field type field basic method return java.lang class long.class integer.clas string.clas etc type field register method return customrecordtype object type field array method return customarraytype object.com.denodo.common.custom.element customrecordvalue represent value register field method getpropertie return collection value pair register element collection hold value field register class object return method getvalue interface customrecordvalue property depend type field type value basic method return basic java object java.lang.string java.lang.integer java.lang.string etc type field register method return customrecordvalue object type field array method return customarrayvalue object array com.denodo.common.custom.element customarraytype represent data type array field value array hold type instance customrecordtype type element array array array registers)com.denodo.common.custom.element customarrayvalue represent value array hold list customrecordvalue objects.com.denodo.common.custom.element customgroupvalue represent list value come non aggregation field aggregation function class customelementsutil provide method create array register type value</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/custom_function_return_type#custom-function-return-type</field><field name="link_cont">vdp developer develop extension develop custom function custom function return type custom function return type</field><field name="cont">custom function return type&#182;the custom function return type array register return type depend input value implement additional method return type function base parameter function function signature meet condition additional method signature custom function develop java annotation additional method annotate customexecutorreturntype develop convention method executereturntype additional method meet rule number parameter execute method parameter additional method type equivalent respective parameter execute method execute return basic java type additional method return basic java class example execute return string object additional method return java.lang.string.class execute return customrecordvalue object additional method return customrecordtype object execute return customarrayvalue object additional method return customarraytype object table equivalency java virtual dataport datum type know type return parameter virtual dataport parameter execute customrecordvalue type parameter additional method customrecordtype parameter execute customarrayvalue type parameter additional method customarraytype return type compound datum type type create virtual dataport exist return type type create random runtime time function invoke virtual dataport execute additional method know return type function follow section contain example implement additional method function use annotation function use convention function annotation return type depend input&#182;implementation function split split string match give regular expression return array substring example function annotation return type depend input&#182;public class splitvdpfunction private static final string string_field = string public customarrayvalue execute(string regex string value value = = null || regex = = null return null string result = value.split(regex linkedhashmap &lt; string object &gt; result = new linkedhashmap &lt; string object&gt;(1 list &lt; customrecordvalue &gt; arrayvalue = new arraylist &lt; customrecordvalue&gt;(result.length string string result results.put(string_field string customrecordvalue recordvalue = customelementsutil.createcustomrecordvalue(result arrayvalues.add(recordvalue return customelementsutil.createcustomarrayvalue(arrayvalue public customarraytype executereturntype(string regex string value linkedhashmap &lt; string object &gt; prop = new linkedhashmap &lt; string object &gt; props.put(string_field string.class customrecordtype record = customelementsutil.createcustomrecordtype(prop customarraytype array = customelementsutil.createcustomarraytype(record return array aggregation function annotations&#182;the following function return value non group field group example aggregation function annotations&#182;@customelement type = customelementtype vdpaggregatefunction name="first_record public class firstrecordfunction @customexecutor public customrecordvalue execute @customgroup(grouptype = customrecordvalue.class name="record customgroupvalue &lt; customrecordvalue &gt; record if(record = = null return null if(records.size = = 0 return null return records.getvalue(0 @customexecutorreturntype public customrecordtype executereturntype customrecordtype recordtype return recordtype example aggregation function annotations&#182;@customelement(type = customelementtype vdpaggregatefunction name="function_f1 public class firstrecordfunction @customexecutor public long execute @customgroup(grouptype = long.class name="value customgroupvalue &lt; long &gt; record return @customexecutorreturntype public class executereturntype(long value return long.class</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/custom_function_return_type#function-without-annotations-with-return-type-depending-on-the-input</field><field name="link_cont">vdp developer develop extension develop custom function custom function return type function annotation return type depend input</field><field name="cont">function annotation return type depend input&#182;implementation function split split string match give regular expression return array substring example function annotation return type depend input&#182;public class splitvdpfunction private static final string string_field = string public customarrayvalue execute(string regex string value value = = null || regex = = null return null string result = value.split(regex linkedhashmap &lt; string object &gt; result = new linkedhashmap &lt; string object&gt;(1 list &lt; customrecordvalue &gt; arrayvalue = new arraylist &lt; customrecordvalue&gt;(result.length string string result results.put(string_field string customrecordvalue recordvalue = customelementsutil.createcustomrecordvalue(result arrayvalues.add(recordvalue return customelementsutil.createcustomarrayvalue(arrayvalue public customarraytype executereturntype(string regex string value linkedhashmap &lt; string object &gt; prop = new linkedhashmap &lt; string object &gt; props.put(string_field string.class customrecordtype record = customelementsutil.createcustomrecordtype(prop customarraytype array = customelementsutil.createcustomarraytype(record return array</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/custom_function_return_type#id1</field><field name="link_cont">vdp developer develop extension develop custom function custom function return type id1</field><field name="cont">example function annotation return type depend input&#182;public class splitvdpfunction private static final string string_field = string public customarrayvalue execute(string regex string value value = = null || regex = = null return null string result = value.split(regex linkedhashmap &lt; string object &gt; result = new linkedhashmap &lt; string object&gt;(1 list &lt; customrecordvalue &gt; arrayvalue = new arraylist &lt; customrecordvalue&gt;(result.length string string result results.put(string_field string customrecordvalue recordvalue = customelementsutil.createcustomrecordvalue(result arrayvalues.add(recordvalue return customelementsutil.createcustomarrayvalue(arrayvalue public customarraytype executereturntype(string regex string value linkedhashmap &lt; string object &gt; prop = new linkedhashmap &lt; string object &gt; props.put(string_field string.class customrecordtype record = customelementsutil.createcustomrecordtype(prop customarraytype array = customelementsutil.createcustomarraytype(record return array</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/custom_function_return_type#aggregation-function-using-annotations</field><field name="link_cont">vdp developer develop extension develop custom function custom function return type aggregation function annotation</field><field name="cont">aggregation function annotations&#182;the following function return value non group field group example aggregation function annotations&#182;@customelement type = customelementtype vdpaggregatefunction name="first_record public class firstrecordfunction @customexecutor public customrecordvalue execute @customgroup(grouptype = customrecordvalue.class name="record customgroupvalue &lt; customrecordvalue &gt; record if(record = = null return null if(records.size = = 0 return null return records.getvalue(0 @customexecutorreturntype public customrecordtype executereturntype customrecordtype recordtype return recordtype example aggregation function annotations&#182;@customelement(type = customelementtype vdpaggregatefunction name="function_f1 public class firstrecordfunction @customexecutor public long execute @customgroup(grouptype = long.class name="value customgroupvalue &lt; long &gt; record return @customexecutorreturntype public class executereturntype(long value return long.class</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/custom_function_return_type#id2</field><field name="link_cont">vdp developer develop extension develop custom function custom function return type id2</field><field name="cont">example aggregation function annotations&#182;@customelement type = customelementtype vdpaggregatefunction name="first_record public class firstrecordfunction @customexecutor public customrecordvalue execute @customgroup(grouptype = customrecordvalue.class name="record customgroupvalue &lt; customrecordvalue &gt; record if(record = = null return null if(records.size = = 0 return null return records.getvalue(0 @customexecutorreturntype public customrecordtype executereturntype customrecordtype recordtype return recordtype</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/custom_function_return_type#id3</field><field name="link_cont">vdp developer develop extension develop custom function custom function return type id3</field><field name="cont">example aggregation function annotations&#182;@customelement(type = customelementtype vdpaggregatefunction name="function_f1 public class firstrecordfunction @customexecutor public long execute @customgroup(grouptype = long.class name="value customgroupvalue &lt; long &gt; record return @customexecutorreturntype public class executereturntype(long value return long.class</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/getting_information_about_the_context_of_the_query#getting-information-about-the-context-of-the-query</field><field name="link_cont">vdp developer develop extension develop custom function get information context query get information context query</field><field name="cont">get information context query&#182;invoke method customelementsutil.getquerycontext obtain instance class querycontext class provide method obtain user execute query use function set role grant user denodo database user connect execute query use function</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_functions/dealing_with_datetime_and_interval_types#dealing-with-datetime-and-interval-types</field><field name="link_cont">vdp developer develop extension develop custom function deal datetime interval type deal datetime interval type</field><field name="cont">deal datetime interval types&#182;this section explain develop custom function input and/or output parameter datetime type table mapping datum type denodo java class type denodojava class package java.timelocaldatejava.time localdatetimejava.time localtimetimestampjava.time localdatetimetimestamptzjava.time zoneddatetime java.util.calendar intervalyearmonthjava.time periodintervaldaysecondjava.time durationfor example build custom function input parameter type intervalyearmonth class input parameter java.time period return timestamptz function return zoneddatetime calendar find implementation function signatures:@customelement(type = customelementtype vdpfunction = my_custom_function public class mycustomfunction @customexecutor signature 1 input parameter zoneddatetime integer execution engine consider type input parameter timestamptz int respectively return zoneddatetime execution engine convert timestamptz public zoneddatetime execute(@customparam(name = input zoneddatetime input @customparam(name = increment integer increment input = = null || increment = = null return null return input.plushours(increment @customexecutor signature 2 input parameter duration long execution engine consider type input parameter intervaldaysecond long respectively return duration object execution engine convert intervaldaysecond public duration execute(@customparam(name = input duration input @customparam(name = increment long increment input = = null || increment = = null return null return input.plushours(increment receive locale query add parameter type java.util locale annotate @customlocale execution inject local receive locale query example,@customexecutor public zoneddatetime execute(@customparam(name = input zoneddatetime input @customparam(name = increment integer increment @customlocale locale locale previous version class calendar map type date deprecate start denodo 7.0 class calendar map timestamptz want map calendar date execute following command vql shell restart server set com.denodo.vdb.compatibility.datetime.custom.mapcalendartodatetype = true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/developing_stored_procedures#developing-java-stored-procedures</field><field name="link_cont">vdp developer develop extension develop store procedure develop store procedure develop java store procedure</field><field name="cont">develop java store procedures&#182;virtual dataport provide api develop custom store procedure java develop store procedure import virtual dataport server section import java store procedure administration guide explain denodo platform provide example store procedure source code locate &lt; denodo_home&gt;/samples vdp storedprocedure readme file path contain instruction compile install develop store procedure import virtual dataport read article debug denodo custom extension eclipse denodo knowledge base learn debug class interface develop store procedure locate package com.denodo.vdb.engine.storedprocedurethis section describe briefly use main class javadoc documentation api detail class method create store procedure create new java class extend com.denodo.vdb.engine.storedprocedure abstractstoredprocedurenoteevery time store procedure invoke execution engine create instance class class attribute store state procedure execution number process row query process result set override following method public string getname method return store procedure return null public string getdescription()this method return description store procedure return null public storedprocedureparameter getparameter method invoke time procedure invoke return array input output parameter store procedure parameter represent storedprocedureparameter object storedprocedureparameter object specify type direction input and/or output nullability accept null value parameter parameter compound type array storedprocedureparameter object specify describe field method return null input output parameter return array example definition parameter store procedure compound field contain method getparameter store procedure follow parameter input parameter type textan output parameter array register register field field1 text field2 int)definition parameter store procedure compound fields&#182;public storedprocedureparameter getparameter return new storedprocedureparameter new storedprocedureparameter("parameter1 type varchar storedprocedureparameter.direction_in new storedprocedureparameter("compound_field type array storedprocedureparameter direction_out true new storedprocedureparameter new storedprocedureparameter("field1 type varchar storedprocedureparameter.direction_out new storedprocedureparameter("field2 type integer storedprocedureparameter.direction_out public void docall(object inputvalue execution engine invoke method procedure call procedure return result invoke method getprocedureresultset():storedprocedureresultset superclass obtain reference list row procedure return invoke method addrow storedprocedureresultset row want return example let procedure single output parameter call compound_field define definition parameter store procedure compound field follow code snippet build row add result set store procedure build row compound type&#182;@override protect void docall(object inputvalue throw synchronizeexception storedprocedureexception object row = new object[1 list &lt; struct &gt; compoundfield = new arraylist &lt; struct&gt;(values.size list &lt; string &gt; fieldsname = arrays.aslist("field1 field2 value generate map.entry &lt; string integer &gt; value values.entryset list structvalue = arrays.aslist(value.getkey value.getvalue struct struct = super.createstruct(fieldsname structvalue compoundfield.add(struct row[0 = createarray(compoundfield type struct getprocedureresultset().addrow(row optionally override follow method public void initialize(databaseenvironment environment execution engine invoke method time query execute store procedure method overridden perform initialization task class databaseenvironment provide method useful execution procedure execute query method executequery executeupdate signature method parameter object parametervalue method indicate parameter vql statement placeholder pass value array cancel query execute store procedure execute this:((databaseenvironmentimpl this.environment).cancelqueries()execute vql command method executevqlcommand signature method parameter string databasename indicate database command execute strongly advise execute command modify metadata production server obtain reference store procedure invoke lookupprocedure obtain reference function invoke lookupfunction create new transaction invoke createtransaction add store procedure current transaction invoke jointransaction write message server log invoke log obtain value server property invoke getdatabaseproperty property request current_us user current user current_database current database obtain reference databaseenvironment method invoke super.getenvironment public boolean stop()the execution engine invoke method query involve store procedure cancel class abstractstoredprocedure provide default implementation method return false task execute procedure cancel override method cancel procedure open connection system open file etc close resource method method return true procedure guarantee finish method invoke procedure finish invoke procedure return false procedure overwrite method execution engine try interrupt execution procedure query start overwrite method mandatory recommend public void prepare()the execution engine invoke method begin transaction involve procedure public void commit()the execution engine invoke method confirm current transaction public void rollback()the execution engine invoke method undo current transaction public boolean casesensitiveparameters()if input output parameter define store procedure case sensitive override method return true public void log(level message)log message virtual dataport logging system message add log category class procedure i.e. class procedure com.acme.procedure1 message add category com.acme.procedure1 log category enable message log &lt; denodo_home&gt;/logs vdp vdp.log enable log category modify &lt; denodo_home&gt;/conf vdp log4j.xml invoke logcontroller store procedure section configure log engine administration guide abstractstoredprocedure provide useful method static java.sql struct createstruct(collection value int type method create struct sql type object invoke method create register element example store procedure build row compound type static java.sql array createarray(collection value int type method return array invoke method create array element element list type java.sql struct create invoke method createstruct example store procedure build row compound type</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/developing_stored_procedures#definition-of-the-parameters-of-a-stored-procedure-with-compound-fields</field><field name="link_cont">vdp developer develop extension develop store procedure develop store procedure definition parameter store procedure compound field</field><field name="cont">definition parameter store procedure compound fields&#182;public storedprocedureparameter getparameter return new storedprocedureparameter new storedprocedureparameter("parameter1 type varchar storedprocedureparameter.direction_in new storedprocedureparameter("compound_field type array storedprocedureparameter direction_out true new storedprocedureparameter new storedprocedureparameter("field1 type varchar storedprocedureparameter.direction_out new storedprocedureparameter("field2 type integer storedprocedureparameter.direction_out</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/developing_stored_procedures#stored-procedures-building-a-row-of-a-compound-type</field><field name="link_cont">vdp developer develop extension develop store procedure develop store procedure store procedure build row compound type</field><field name="cont">store procedure build row compound type&#182;@override protect void docall(object inputvalue throw synchronizeexception storedprocedureexception object row = new object[1 list &lt; struct &gt; compoundfield = new arraylist &lt; struct&gt;(values.size list &lt; string &gt; fieldsname = arrays.aslist("field1 field2 value generate map.entry &lt; string integer &gt; value values.entryset list structvalue = arrays.aslist(value.getkey value.getvalue struct struct = super.createstruct(fieldsname structvalue compoundfield.add(struct row[0 = createarray(compoundfield type struct getprocedureresultset().addrow(row</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/using_datetime_values_in_denodo_stored_procedures#using-datetime-values-in-denodo-stored-procedures</field><field name="link_cont">vdp developer develop extension develop store procedure datetime value denodo store procedure datetime value denodo store procedure</field><field name="cont">datetime value denodo store procedures&#182;this section explain develop stored procedure input and/or output parameter datetime type develop store procedure main class procedure override method getparameter define output schema procedure method return array storedprocedureparameter object object represent input parameter output second parameter constructor class storedprocedureparameter parameter type value parameter constant class java.sql type table display mapping denodo data type constant class java.sql type pass constructor storedprocedureparameter denodo data type class java object store procedure return denodo datum typeconstant class java.sql typesjava class input parametersjava class output valueslocaldatetype datejava.sql datejava.time localdate java.sql datetimetype timejava.sql timejava.time localtime java.sql timetimestamptype timestampjava.sql timestampjava.time localdatetime java.sql timestamptimestamptztype timestamp_with_timezonejava.sql timestampjava.time offsetdatetime java.sql timestampintervalyearmonthjdbctypeutil interval_year_monthjava.time periodjava.time periodintervaldaysecondjdbctypeutil interval_day_secondjava.time durationjava.time durationjdbctypeutil = com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type.util jdbctypeutilfor example want input parameter type time value parameter type type time runtime procedure execute execution engine invoke method docall(object inputvalue procedure java class object array inputvalue depend value type declare constructor storedprocedureparameter @override public storedprocedureparameter getparameter return new storedprocedureparameter input parameter type localdate new storedprocedureparameter("date_field type date storedprocedureparameter.direction_in input parameter type timestamp new storedprocedureparameter("timestamp_field type timestamp storedprocedureparameter.direction_in input parameter type timestamptz new storedprocedureparameter("timestamptz_field type timestamp_with_timezone storedprocedureparameter.direction_in input parameter type time new storedprocedureparameter("time_field type time storedprocedureparameter.direction_in input output parameter type interval_day_second new storedprocedureparameter("intervaldaysecond_field jdbctypeutil.interval_day_second storedprocedureparameter.direction_inout output parameter type interval_year_month new storedprocedureparameter("intervalyearmonth_field jdbctypeutil.interval_year_month storedprocedureparameter.direction_out listing show sample implementation docall method invoke execution engine run procedure example docall()&#182;public void docall(object inputvalue date sqldate = date inputvalues[0 //types date localdate localdate = sqldate.tolocaldate timestamp sqltimestamp = timestamp inputvalues[1 //types timestamp localdatetime localdatetime = sqltimestamp.tolocaldatetime timestamp sqltimestamptz = timestamp inputvalues[2 //types timestamp_with_timezone offsetdatetime offsetdatetime = sqltimestamptz.toinstant().atoffset(zoneoffset.utc time sqltime = time inputvalues[3 //types time localtime localtime = sqltime.tolocaltime duration d = duration inputvalues[4 jdbctypeutil interval_day_second period p = period inputvalues[5 jdbctypeutil.interval_year_month datetime value procedure return object package java.sql java.time listing procedure return row equivalent row generate object package java.sql second object package java.time public void docall(object inputvalue add row java.sql object getprocedureresultset().addrow(new object date.valueof("2017 10 11 timestamp.valueof("2015 03 08 01:59:59 new timestamp(sdf.parse("2015 03 08 01:59:59 +01:00").gettime time.valueof("21:15:45 duration.ofhours(65).plusminutes(23 period.ofmonths(25 add row java.time object getprocedureresultset().addrow(new object localdate.parse("2017 10 11 localdatetime.parse("2015 03 08t01:59:59 offsetdatetime.parse("2015 03 08t01:59:59 + 01:00 localtime.parse("21:15:45 duration.ofhours(65).plusminutes(23 period.ofmonths(25 compatibility store procedure previous versions&#182;in previous version constant class java.sql type map different datum type denodo.type date start version 7.0 map localdateprevious version map date deprecated)type timestamp start version 7.0 map timestampprevious version map date deprecated)type time start version 7.0 map timeprevious version map longif develop store procedure rely object declare procedure token use_denodo_6_0_type_mapping example create procedure testnewtypesprocedure2 classname='com.denodo.vdb.test testnewtypesprocedure classpath= use_denodo_6_0_type_mapping = true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/using_datetime_values_in_denodo_stored_procedures#id1</field><field name="link_cont">vdp developer develop extension develop store procedure datetime value denodo store procedure id1</field><field name="cont">example docall()&#182;public void docall(object inputvalue date sqldate = date inputvalues[0 //types date localdate localdate = sqldate.tolocaldate timestamp sqltimestamp = timestamp inputvalues[1 //types timestamp localdatetime localdatetime = sqltimestamp.tolocaldatetime timestamp sqltimestamptz = timestamp inputvalues[2 //types timestamp_with_timezone offsetdatetime offsetdatetime = sqltimestamptz.toinstant().atoffset(zoneoffset.utc time sqltime = time inputvalues[3 //types time localtime localtime = sqltime.tolocaltime duration d = duration inputvalues[4 jdbctypeutil interval_day_second period p = period inputvalues[5 jdbctypeutil.interval_year_month</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/using_datetime_values_in_denodo_stored_procedures#compatibility-with-stored-procedures-of-previous-versions</field><field name="link_cont">vdp developer develop extension develop store procedure datetime value denodo store procedure compatibility store procedure previous version</field><field name="cont">compatibility store procedure previous versions&#182;in previous version constant class java.sql type map different datum type denodo.type date start version 7.0 map localdateprevious version map date deprecated)type timestamp start version 7.0 map timestampprevious version map date deprecated)type time start version 7.0 map timeprevious version map longif develop store procedure rely object declare procedure token use_denodo_6_0_type_mapping example create procedure testnewtypesprocedure2 classname='com.denodo.vdb.test testnewtypesprocedure classpath= use_denodo_6_0_type_mapping = true</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_stored_procedures/required_libraries_to_develop_stored_procedures#required-libraries-to-develop-stored-procedures</field><field name="link_cont">vdp developer develop extension develop store procedure require library develop store procedure require library develop store procedure</field><field name="cont">require library develop store procedures&#182;to develop store procedure add follow jar file classpath environment:&lt;denodo_home&gt;/lib vdp server core denodo vdp server.jar &lt; denodo_home&gt;/lib vdp client core denodo vdp parser.jaryou want add library apache commons lang library &lt; denodo_home&gt;/lib contrib commons lang.jar apache common io &lt; denodo_home&gt;/lib contrib commons io.jar classpath project contain helper utility ease development procedure deploy procedure need import include content present classpath virtual dataport server store procedure rely party library follow step import party jar file virtual dataport create new store procedure administration tool select jar procedure external jar copy content require jar jar contain store procedure copy content require jar jar</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/developing_custom_wrappers#developing-custom-wrappers</field><field name="link_cont">vdp developer develop extension develop custom wrapper develop custom wrapper develop custom wrapper</field><field name="cont">develop custom wrappers&#182;virtual dataport provide api develop custom wrapper api create connector query data source support virtual dataport create new custom wrapper call custom datum source extend java abstract class abstractcustomwrapper com.denodo.vdb.engine.customwrapper abstract class provide default implementation interface customwrapper com.denodo.vdb.engine.customwrapper implement interface customwrapper follow section explain extend abstractcustomwrapper class virtual dataport include sample custom wrapper retrieve datum salesforce account example &lt; denodo_home&gt;/samples vdp customwrapper readme file directory explain compile install use custom wrapper develop custom wrapper import virtual dataport read article debug denodo custom extension eclipse denodo knowledge base learn debug</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/required_libraries_to_develop_custom_wrappers#required-libraries-to-develop-custom-wrappers</field><field name="link_cont">vdp developer develop extension develop custom wrapper require library develop custom wrapper require library develop custom wrapper</field><field name="cont">require library develop custom wrappers&#182;to develop custom wrapper virtual dataport add follow jar file classpath environment:&lt;denodo_home&gt;/lib vdp server core denodo vdp server.jar &lt; denodo_home&gt;/lib vdp client core denodo vdp parser.jaryou want add library apache commons lang library &lt; denodo_home&gt;/lib contrib commons lang.jar apache common io &lt; denodo_home&gt;/lib contrib commons io.jar classpath project contain helper utility ease development procedure deploy wrapper need import include content present classpath virtual dataport server custom wrapper rely party library follow step import party jar file virtual dataport create new custom datum source administration tool select jar custom wrapper external jar copy content require jar jar contain custom wrapper copy content require jar jar</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/extending_abstractcustomwrapper#extending-abstractcustomwrapper</field><field name="link_cont">vdp developer develop extension develop custom wrapper extend abstractcustomwrapper extend abstractcustomwrapper</field><field name="cont">extend abstractcustomwrapper&#182;the simple way create new custom wrapper implement follow method abstract class com.denodo.vdb.engine.customwrapper abstractcustomwrapper public customwrapperschemaparameter getschemaparameters(map &lt; string string &gt; inputvalue method return output schema custom wrapper schema datum obtain query wrapper develop custom wrapper output schema depend value input parameter implement method getinputparameter section override abstractcustomwrapper define input parameter wrapper parameter inputvalue contain value parameter output schema represent array customwrapperschemaparameter object represent field schema customwrapperschemaparameter type property mandatoriness nullability etc optional array customwrapperschemaparameter case represent field compound customwrapperschemaparameter specify source type property field return wrapper section source type property administration guide explain define property beneficial performance query public void run customwrapperconditionholder condition list &lt; customwrapperfieldexpression &gt; projectedfield customwrapperresult result map &lt; string string &gt; inputvalues)virtual dataport invoke method user query wrapper depend wrapper configuration section configure custom wrapper condition projectedfield argument take account condition explain section deal condition parameter encapsulate condition list project field query wrapper inputvalue contain input parameter wrapper contain textual representation value contain information type method getinputparametervalue(string return instance customwrapperinputparametervalue provide information parameter value type usually implementation method run involve analyze pass condition project field input value query wrapper datum source return retrieve datum virtual dataport invoke method addrow result argument receive array object array pass addrow contain series object match list project field specify run method type object match schema define method getschemaparameterssee javadoc method getparameterclass class customwrapperschemaparameter check appropriate java class customwrapperschemaparameter accord type obtain schema current execution custom wrapper invoke method getschema object customwrapperresult pass parameter method run schema return method getschemaparameter custom wrapper invoke method useful custom wrapper output i.e. method getschemaparameter return change depend input parameter wrapper implement method create custom wrapper scenario need override method abstractcustomwrapper class access advanced feature section list method default behavior useful method abstractcustomwrapper like log(int level string logmessage log information server log file getcustomwrapperplan access execution plan add information trace section update custom wrapper plan</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/overriding_abstractcustomwrapper#overriding-abstractcustomwrapper</field><field name="link_cont">vdp developer develop extension develop custom wrapper override abstractcustomwrapper override abstractcustomwrapper</field><field name="cont">override abstractcustomwrapper&#182;the following method overridden extend abstractcustomwrapper public customwrapperinputparameter getinputparameter method define series input parameter accept custom wrapper represent array object customwrapperinputparameter default implementation method return array example implementation method getinputparameter show example implementation method customwrapperinputparameter object follow property parameter mandatory true provide parameter query wrapper false parameter optional environment dependent true parameter consider environment dependent mean vql wrapper export file option export environment specific property separately value parameter property value false value parameter include vql file description description parameter administration tool description tooltip custom datum source wizard.type type input parameter instantiate object class customwrapperinputparametertype invoke appropriate method customwrapperinputparametertypefactory class factory following method booleantype create boolean parameter integertype longtype floattype doubletype create number parameter stringtype longstringtype create normal long text parameters.enumstringtype create enumeration parameter input parameter type value enumeration administration tool display drop list user select valid value hiddenstringtype create text parameter contain sensitive information write virtual dataport log display administration tool administration tool hide value type parameter routetype create parameter store path file administration tool provide wizard build valid route type parameter parameter consider environment dependent regardless value flag environment dependent logintype passwordtype custom wrapper input parameter create logintype create passwordtype administration tool allow user enable pass credential create base view wrapper case user query base view value parameter credential user execute query example implementation method getinputparameters&#182;@override public customwrapperinputparameter getinputparameter return new customwrapperinputparameter new customwrapperinputparameter(string_param mandatory parameter type string true true customwrapperinputparametertypefactory stringtype new customwrapperinputparameter(boolean_param mandatory parameter type boolean false + default value true true customwrapperinputparametertypefactory booleantype(false new customwrapperinputparameter(integer_param optional parameter type integer false true customwrapperinputparametertypefactory integertype new customwrapperinputparameter(route_param optional parameter type route false true customwrapperinputparametertypefactory routetype(routetype.value public customwrapperconfiguration getconfiguration()this method define custom wrapper configuration detail configure custom wrapper give section configure custom wrapper default implementation method return instance customwrapperconfiguration available configuration parameter set default value public boolean stop()the execution engine invoke method query involve custom wrapper cancel class abstractcustomwrapper provide default implementation method return false task execute wrapper cancel override method cancel wrapper open connection system open file etc close resource method method return true wrapper guarantee finish method invoke wrapper finish invoke wrapper return false wrapper overwrite method execution engine try interrupt execution overwrite method mandatory recommend custom wrapper provide support insert delete update operation implement override appropriate method custom wrapper automatically configure virtual dataport know insert delete update capability follow method overridden provide support idu operation public int insert(map &lt; customwrapperfieldexpression object &gt; insertvalue map &lt; string string &gt; inputvalue throw customwrapperexceptionthis method define custom wrapper insert datum associated datum source wrapper input parameter value pass argument necessary datum insert provide map customwrapperfieldexpression object customwrapperfieldexpression optional list sub field case field compound method getstringrepresentation customwrapperfieldexpression provide default text version field field elaborate like myfield.myarray[10].myinteger example represent compound field myfield array type sub field myarray sub field myinteger method return number successfully insert value default implementation return 0 public int delete(customwrapperconditionholder condition map &lt; string string &gt; inputvalue throw customwrapperexceptionthis method define custom wrapper delete datum associated datum source deletion condition input parameter value pass argument section deal condition detail deal condition number successfully delete value return default implementation method return 0 public int update(map &lt; customwrapperfieldexpression object &gt; updatevalue customwrapperconditionholder condition map &lt; string string &gt; inputvalue throw customwrapperexceptionthis method define custom wrapper update datum associated datum source update condition update value input parameter value provide argument section deal condition detail deal condition explanation insert method section detail update value number successfully update value return default implementation method return 0 custom wrapper provide support distributed transaction implement override appropriate method custom wrapper automatically configure virtual dataport know transactional capability follow method overridden custom wrapper support distribute transaction public void prepare()this method define custom wrapper perform prepare operation context distribute transaction default implementation public void commit()this method define custom wrapper perform commit operation context distribute transaction default implementation public void rollback()this method define custom wrapper perform rollback operation context distribute transaction default implementation</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/overriding_abstractcustomwrapper#example-implementation-of-the-method-getinputparameters</field><field name="link_cont">vdp developer develop extension develop custom wrapper override abstractcustomwrapper example implementation method getinputparameter</field><field name="cont">example implementation method getinputparameters&#182;@override public customwrapperinputparameter getinputparameter return new customwrapperinputparameter new customwrapperinputparameter(string_param mandatory parameter type string true true customwrapperinputparametertypefactory stringtype new customwrapperinputparameter(boolean_param mandatory parameter type boolean false + default value true true customwrapperinputparametertypefactory booleantype(false new customwrapperinputparameter(integer_param optional parameter type integer false true customwrapperinputparametertypefactory integertype new customwrapperinputparameter(route_param optional parameter type route false true customwrapperinputparametertypefactory routetype(routetype.value</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/dealing_with_conditions#dealing-with-conditions</field><field name="link_cont">vdp developer develop extension develop custom wrapper deal condition deal condition</field><field name="cont">deal conditions&#182;condition pass custom wrapper argument run delete update method section extend abstractcustomwrapper override abstractcustomwrapper come encapsulate instance customwrapperconditionholder object class contain version condition pass custom wrapper simplified version available call getconditionmap method version consist association customwrapperfieldexpression object example condition map like field1 100 field2 foo mean condition pass custom wrapper field1 = 100 field2 = foo condition available map match pattern field_1 = value field_n = value case getconditionmap method return null conversion map force call getconditionmap(boolean force method pass true value force account case returned map equivalent original condition customwrappercondition instance version available call getcomplexcondition method customwrappercondition superclass type condition support custom wrapper customwrappersimplecondition represent simple condition hold left expression customwrapperexpression object operator right expression array customwrapperexpression object right expression store array usually contain expression customwrapperandcondition represent series condition join operator hold list customwrappercondition object customwrapperorcondition represent series condition join operator hold list customwrappercondition object customwrappernotcondition represent negated condition hold customwrappercondition customwrapperexpression superclass type expression support custom wrapper customwrapperfieldexpression common type expression condition leave section override abstractcustomwrapper details.customwrappersimpleexpression kind expression type type define java.sql.type value.customwrapperfunctionexpression represent function parameter type expression optional modifier distinct list parameter instance customwrapperfunctionparameter property aggregation function customwrapperfunctionparameter contain list customwrapperexpressions.customwrapperconditionexpression represent condition parameter case function contain customwrappercondition.customwrapperarrayexpression contain list customwrapperexpression kind.customwrapperregisterexpression contain list customwrapperexpression kind</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/dealing_with_the_order_by_clause#dealing-with-the-order-by-clause</field><field name="link_cont">vdp developer develop extension develop custom wrapper deal order clause deal order clause</field><field name="cont">deal order clause&#182; custom wrapper declare customwrapperconfiguration support order delegation section configure custom wrapper developer invoke method getorderbyexpression obtain expression order clause delegate custom wrapper method return list customwrapperorderbyexpression object following attribute field field row sort by.order order asc desc sorting</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/configuring_a_custom_wrapper#configuring-a-custom-wrapper</field><field name="link_cont">vdp developer develop extension develop custom wrapper configure custom wrapper configure custom wrapper</field><field name="cont">configure custom wrapper&#182;a custom wrapper configure getconfiguration method method return instance customwrapperconfiguration class encapsulate follow configuration parameter delegateprojection true default define custom wrapper deal project field query delegateorcondition false default define custom wrapper deal condition f1 = 1 f1 = 2 sql.delegatenotcondition false default define custom wrapper deal condition f1 = 1 sql.delegatearrayliteral false default define custom wrapper deal condition contain array my_int_array = row 1 row 2 delegateregisterliteral false default define custom wrapper deal condition contain register my_register = row 1 delegateleftliteral false default define custom wrapper deal condition literal left 100 = field).delegaterightfield false default define custom wrapper deal condition field right field1 = field2).delegaterightliteral true default define custom wrapper deal condition literal right field1 = 100 delegateorderby false default define custom wrapper deal order expression allowedoperator default array contain operator =) define operator support condition pass custom wrapper javadoc method setallowedoperator class customwrapperconfiguration list possible operator value property obtain define mean appropriate getter setter</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/updating_the_custom_wrapper_plan#updating-the-custom-wrapper-plan</field><field name="link_cont">vdp developer develop extension develop custom wrapper update custom wrapper plan update custom wrapper plan</field><field name="cont">update custom wrapper plan&#182;the method getcustomwrapperplan return customwrapperplan object represent current wrapper execution plan object allow add information wrapper plan display execution trace add information wrapper plan invoke method addplanentry(string title string entry example custom wrapper query database useful add wrapper plan information query execute database</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/dealing_with_datetime_and_interval_types#dealing-with-datetime-and-interval-types</field><field name="link_cont">vdp developer develop extension develop custom wrapper deal datetime interval type deal datetime interval type</field><field name="cont">deal datetime interval types&#182;this section explain develop custom wrapper return datetime value develop custom wrapper main class wrapper override method getschemaparameters(map &lt; string string &gt; inputvalue define output schema custom wrapper method return array customwrapperschemaparameter object second parameter constructor class customwrapperschemaparameter parameter type value parameter constant class java.sql type table display mapping denodo data type constant class java.sql type pass constructor customwrapperschemaparameter denodo data type class java object custom wrapper return denodo datum typeconstant class java.sql typesjava classlocaldatetype datejava.time localdatetimetype timejava.time localtimetimestamptype timestampjava.time localdatetimetimestamptztype timestamp_with_timezonejava.time offsetdatetimeintervaldaysecondjdbctypeutil interval_day_secondjava.time durationintervalyearmonthjdbctypeutil interval_year_monthjava.time periodjdbctypeutil = com.denodo.vdb.vdbinterface.common.clientresult.vo.descriptions.type.util jdbctypeutildefinition parameter custom wrapper datetime fields&#182; public customwrapperschemaparameter getschemaparameter map &lt; string string &gt; inputvalue return new customwrapperschemaparameter new customwrapperschemaparameter("date_field types.date new customwrapperschemaparameter("timestamp_field types.timestamp new customwrapperschemaparameter("timestamptz_field types.timestamp_with_timezone new customwrapperschemaparameter("time_field types.time new customwrapperschemaparameter("intervalyear_month jdbctypeutil.interval_year_month new customwrapperschemaparameter("intervalday_second jdbctypeutil.interval_day_second code note java object return custom wrapper appropriate one accord table example method getschemaparameter field date_field create constant type date table type parameter correspond type localdate object result java.time localdate.run method custom wrapper return datetime values.&#182;void run(customwrapperconditionholder condition list &lt; customwrapperfieldexpression &gt; projectedfield customwrapperresult result map &lt; string string &gt; inputvalue throw customwrapperexception result.addrow(new object localdate.parse("2017 10 11 localdatetime.parse("2015 03 08t01:59:59 offsetdatetime.parse("2015 03 08t01:59:59 + 01:00 localtime.parse("21:15:45 duration.ofhours(65).plusminutes(23 period.ofmonths(25 projectedfield result.addrow(new object sdf.parse("2017 10 11 sdf.parse("2015 03 08 01:59:59 sdf.parse("2015 03 08 01:59:59 +01:00 sdf.parse("21:15:45 duration.ofhours(65).plusminutes(23 period.ofmonths(25 projectedfield backward compatibility custom wrapper return java.util date object type localdate timestamp timestamptz time return type object support future major version denodo</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/dealing_with_datetime_and_interval_types#id1</field><field name="link_cont">vdp developer develop extension develop custom wrapper deal datetime interval type id1</field><field name="cont">definition parameter custom wrapper datetime fields&#182;public customwrapperschemaparameter getschemaparameter map &lt; string string &gt; inputvalue return new customwrapperschemaparameter new customwrapperschemaparameter("date_field types.date new customwrapperschemaparameter("timestamp_field types.timestamp new customwrapperschemaparameter("timestamptz_field types.timestamp_with_timezone new customwrapperschemaparameter("time_field types.time new customwrapperschemaparameter("intervalyear_month jdbctypeutil.interval_year_month new customwrapperschemaparameter("intervalday_second jdbctypeutil.interval_day_second</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_wrappers/dealing_with_datetime_and_interval_types#id2</field><field name="link_cont">vdp developer develop extension develop custom wrapper deal datetime interval type id2</field><field name="cont">run method custom wrapper return datetime values.&#182;void run(customwrapperconditionholder condition list &lt; customwrapperfieldexpression &gt; projectedfield customwrapperresult result map &lt; string string &gt; inputvalue throw customwrapperexception result.addrow(new object localdate.parse("2017 10 11 localdatetime.parse("2015 03 08t01:59:59 offsetdatetime.parse("2015 03 08t01:59:59 + 01:00 localtime.parse("21:15:45 duration.ofhours(65).plusminutes(23 period.ofmonths(25 projectedfield result.addrow(new object sdf.parse("2017 10 11 sdf.parse("2015 03 08 01:59:59 sdf.parse("2015 03 08 01:59:59 +01:00 sdf.parse("21:15:45 duration.ofhours(65).plusminutes(23 period.ofmonths(25 projectedfield</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_input_filters/developing_custom_input_filters#developing-custom-input-filters</field><field name="link_cont">vdp developer develop extension develop custom input filter develop custom input filter develop custom input filter</field><field name="cont">develop custom input filters&#182;when create df json xml datum source select input filter preprocesse datum retrieve source execution engine process provide box input filter virtual dataport provide java api allow develop filter preprocess datum way need virtual dataport include sample custom filter read datum source replace character example folder &lt; denodo_home&gt;/samples vdp customconnectionfilter readme file directory explain compile install use custom filter develop custom filter import virtual dataport read article debug denodo custom extension eclipse denodo knowledge base learn debug</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_input_filters/required_libraries_to_develop_custom_filters#required-libraries-to-develop-custom-filters</field><field name="link_cont">vdp developer develop extension develop custom input filter require library develop custom filter require library develop custom filter</field><field name="cont">require library develop custom filters&#182;to develop custom filter add follow jar file classpath environment:&lt;denodo_home&gt;/lib contrib denodo common connection util.jar &lt; denodo_home&gt;/lib contrib denodo common util.jarif custom filter rely party library follow step import party jar file virtual dataport import new custom filter administration tool select jar custom filter external jar copy content require jar jar contain store procedure copy content require jar jar</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/developing_extensions/developing_custom_input_filters/developing_custom_filters#developing-custom-filters</field><field name="link_cont">vdp developer develop extension develop custom input filter develop custom filter develop custom filter</field><field name="cont">develop custom filters&#182;to develop custom filter create new class extend class customconnectionfilter com.denodo.parser.connection.filter package class implement method execute(inputstream is):inputstream custom connection filter input parameter useful want behavior custom filter easily customizable retrieve parameter enter user assign filter data source invoke method getparameters():map &lt; string object &gt; execute method folder &lt; denodo_home&gt;/samples vdp customconnectionfilter contain example custom filter develop custom filter generate jar import virtual dataport section import extension administration guide</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/custom_policies/custom_policies#custom-view-policies</field><field name="link_cont">vdp developer custom policy custom policy custom view policy</field><field name="cont">custom view policies&#182;custom view policy query interceptor invoke virtual dataport server execute query view similar row restriction benefit customize user query view custom view policy assign policy follow action reject query accept query restriction accept query impose restriction limit row return query add filter condition etc.to select action custom view policy access parameter query context decide proceed query user want executethe user privilegesa jmx connection server policy use access virtual dataport datum jmx custom view policy reusable mean following assign custom policy view user role use global security policy easily apply view user etc define configuration parameter policy assign user role view customize behavior parameter thank behavior policy customize depend user role assign example develop policy limit number query view user role execute time number parameter policy way set limit assign policy role developer limit role application user query view user custom view policy assign view policy evaluate following way custom view policy apply user execute query administrator administrator database user role serveradmin user role custom view policy assign view server evaluate policy policy reject query query reject user role assign role role assign evaluation custom view policy perform group role group form custom policy assign directly role group custom view policy directly assign user group reject query policy group reject query group accept query policy group accept query query accept group accept query example let user role r1 r2 user policy assign view v p1 p2 role r1 user policy assign view v p3 p4 role r2 policy assign view v p5 p6 user query view v virtual dataport evaluate policy p1 p1 accept query evaluate p2 p2 accept query server evaluate policy execute query p1 reject query server evaluate policy user begin evaluate policy role r1 p3 p4 p3 accept query evaluate p4 p4 accept query server evaluate policy execute query p3 reject query server evaluate policy role r1 begin evaluate policy role r2 p5 p6 p5 accept query server evaluate p6 p6 accept query server execute query p5 reject query server execute query</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/custom_policies/developing_a_custom_policy#developing-a-custom-view-policy</field><field name="link_cont">vdp developer custom policy develop custom policy develop custom view policy</field><field name="cont">develop custom view policy&#182;a custom view policy java class annotation mark class custom view policy indicate method server execute intercept query execute time custom policy execute server create new instance class java class static attribute value execution policy develop custom view policy add &lt; denodo_home&gt;/lib contrib denodo common custom.jar classpath project virtual dataport api javadoc provide documentation class annotation api sample custom view policy directory &lt; denodo_home&gt;/sample vdp custompolicies/.this custom view policy limit number concurrent query user role execute view store procedure custom view policy input parameter call limit set maximum number concurrent query user role execute readme file directory explain compile example import virtual dataport develop custom view policy import virtual dataport read article debug denodo custom extension eclipse denodo knowledge base learn debug develop custom view policy create java class like import com.denodo.common.custom.annotation import com.denodo.common.custom.policy @customelement(name = my_new_custom_policy type = customelementtype vdpcustompolicy public class mydenodocustompolicy @customcontext customrestrictionpolicycontext context @customexecutor public customrestrictionpolicyvalue execute @customparam(name = parameter1 mandatory = false string inputparameter  custom view policy accept query involve view policy assign return new customrestrictionpolicyvalue(customrestrictionpolicytype accept attribute @customelement custom view policy attribute context obtain information context query query virtual dataport receive getquery field involve query list field select group have clause getfieldsinquery user account execute query getcurrentusername list effective role user account execute query getcurrentuserrole role grant directly user one grant role user user user agent connection execute query getcurrentuseragent database query execute getcurrentdatabasename different database view belong example connect database db1 execute select db2.customer method return db1 user role custom view policy assign getpolicycredentialsname getpolicycredentialstype method return policy assign user role view store procedure custom view policy assign getelementtype getelementname database element custom view policy assign getelementdatabase collection assign tag element getelementtag map assign tag field element getfieldstag property query invoke getproperty obtain value property setproperty change available property constant define customrestrictionpolicycontext class i18n_property swap_property etc extra authentication information provide authentication mechanism getadditionalauthenticationinformation().provide jmx connection virtual dataport server custom view policy use retrieve datum jmx getjmxconnection jmx interface denodo provide information current status server allow modify behavior policy base load denodo server number concurrent query etc.to log message invoke method log message log method redirect log category com.denodo.vdb.catalog.view customrestrictionpolicycontextimpl check log category enable isloglevelenable list option javadoc class customrestrictionpolicycontextnotethe custom view policy mechanism initialize attribute context right invoke method execute attribute null try access constructor class add parameter custom view policy add parameter method execute annotate @customparam(name = &lt; parameter_name &gt; mandatory = false annotation parameter administration tool use value display information custom view policy user mandatory boolean value indicate parameter mandatory later assign policy user role view provide value input parameter policy java class method annotate @customexecutor example execute method execution engine load custom view policy execution query execute method mark annotation return customrestrictionpolicyvalue object accept query return return new customrestrictionpolicyvalue(customrestrictionpolicytype.accept);to reject query return return new customrestrictionpolicyvalue(customrestrictionpolicytype.reject);to add condition query return string condition = title &lt; &gt; chief executive officer return new customrestrictionpolicyvalue customrestrictionpolicytype.accept_with_filter customrestrictionpolicyfiltertype reject_row condition null);in example execution engine add condition title &lt; &gt; chief executive officer query execute user add condition query field list field query return following field consider query clause use field select group have string condition = title &lt; &gt; chief executive officer set &lt; string &gt; sensitivefield = new hashset&lt;&gt;(arrays.aslist("salary bonus return new customrestrictionpolicyvalue(customrestrictionpolicytype accept_with_filter customrestrictionpolicyfiltertype reject_row_if_any_sensitive_fields_use condition sensitivefields);in example query use field salary and/or bonus condition title &lt; &gt; chief executive officer add query query use field condition add query add condition query field list field query return following field consider query clause use field select group have string condition = title &lt; &gt; chief executive officer set &lt; string &gt; sensitivefield = new hashset&lt;&gt;(arrays.aslist("salary bonus return new customrestrictionpolicyvalue(customrestrictionpolicytype accept_with_filter customrestrictionpolicyfiltertype reject_row_if_all_sensitive_fields_use condition sensitivefield example query use field salary bonus condition title &lt; &gt; chief executive officer add query query use field condition add query note example use constant reject_row_if_all_sensitive_fields_use previous example use reject_row_if_any_sensitive_fields_use mask value list field row verify certain condition field query return follow string condition = title &lt; &gt; chief executive officer set &lt; string &gt; sensitivefield = new hashset&lt;&gt;(arrays.aslist("salary bonus return new customrestrictionpolicyvalue(customrestrictionpolicytype accept_with_filter customrestrictionpolicyfiltertype mask_sensitive_fields_if_any_use condition sensitivefields);to mask field value set null example query use field salary and/or bonus field list sensitivefield salary bonus set null row verify condition example row field title chief executive officer i.e. meet condition field salary bonus null query use field field mask mask value list field row verify condition field query return follow string condition = title &lt; &gt; chief executive officer set &lt; string &gt; sensitivefield = new hashset&lt;&gt;(arrays.aslist("salary bonus return new customrestrictionpolicyvalue(customrestrictionpolicytype accept_with_filter customrestrictionpolicyfiltertype mask_sensitive_fields_if_all_use condition sensitivefields);to mask field value set null example query use field salary bonus field list sensitivefield salary bonus set null row verify condition example row field title chief executive officer i.e. meet condition field salary bonus null query use field condition add query field mask mask value field row result query i.e. option mask_sensitive_fields_if_all_use mask_sensitive_fields_if_any_use use condition evaluate false example 1 null string condition = 1 null set &lt; string &gt; sensitivefield = new hashset&lt;&gt;(arrays.aslist("salary bonus return new customrestrictionpolicyvalue(customrestrictionpolicytype accept_with_filter customrestrictionpolicyfiltertype mask_sensitive_fields_if_any_use condition sensitivefields);in example query use field salary and/or bonus field salary bonus bet set null row mask value previous example different masking use constructor receive default masking expression map masking configuration field example mask salary default behavior bonus 0 value string condition = 1 null map &lt; string custommaskingexpression &gt; sensitivefield = new linkedhashmap &lt; &gt; sensitivefields.put("salary custommaskingexpression.default sensitivefields.put("bonus custommaskingexpression.set_0 return new customrestrictionpolicyvalue(customrestrictionpolicytype accept_with_filter customrestrictionpolicyfiltertype mask_sensitive_fields_if_any_use condition custommaskingexpression.redact sensitivefields);in example query use field salary and/or bonus field salary set result redact expression column type bonus bet set 0 row input parameter custom view policy datetime value check section deal datetime interval type custom function rule manage input parameter custom view policy custom function</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/appendix#appendix</field><field name="link_cont">vdp developer appendix appendix appendix</field><field name="cont">appendix&#182;list appendix include document output schema list commandoutput schema desc commandserror code return virtual dataportcompile denodo odbc driverpre requisite compile odbc driver linuxcompile odbc driver standard method)compile odbc driver obtain forwardable ticketstroubleshooting compilation denodo odbc driver</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/output_schema_of_the_list_command/output_schema_of_the_list_command#output-schema-of-the-list-command</field><field name="link_cont">vdp developer appendix output schema list command output schema list command output schema list command</field><field name="cont">output schema list command&#182;this section list output list command execute jdbc odbc client notewhen command execute vql shell administration tool return information debug purpose change future output schema list command list wrapper list datasource column commandslist jar return column jar_name functions_type function value column functions_type function null jar contain custom function output contain row type function jar functions_type indicate type function condition aggregate function name function contain jar list function custom contain column type syntax command return row signature function type column indicate function aggregation function condition function list role contain column description role column contain list role grant role list database info contain column description set column database configuration datum</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/output_schema_of_the_desc_commands/output_schema_of_the_desc_commands#output-schema-of-the-desc-commands</field><field name="link_cont">vdp developer appendix output schema desc command output schema desc command output schema desc command</field><field name="cont">output schema desc commands&#182;there way describe object jdbc client desc vql statement return vql statement create element example:-- obtain vql view dependency desc vql view incident obtain vql jdbc datum source desc vql datasource jdbc ds_jdbc_phone_inc;the section describe catalog element vql guide list modifier desc vql statement desc statement return information element structured way table list output desc command execute jdbc odbc client command execute vql shell administration tool return information debug purpose change future output command include password security purpose notewhen execute command vql shell administration tool instead jdbc client return information debug purpose change update denodo platform output schema desc command depend parameters&#182;statementcolumn resultdesc database &lt; database &gt; namedescriptiondesc datasource custom &lt; datum source &gt; nameclass nameclasspathjarsdesc datasource df &lt; datum source &gt; namebegin delimiterend delimitercolumn delimiterend line delimiterheader patterntuple patterndata routedesc datasource essbase &lt; datum source &gt; namedatabase versionuriuser namedesc datasource jdbc &lt; datum source &gt; namedatabase uridriver class nameuser nameclasspathdatabase namedatabase versionpe queryinitial sizemax activedesc datasource json &lt; datum source &gt; namedata routedesc datasource ldap &lt; datum source &gt; nameurilogindesc datasource odbc &lt; datum source &gt; namedsndatabase uridriver class nameuser nameclasspathdatabase namedatabase versionpe queryinitial sizemax activedesc datasource olap &lt; datum source &gt; namedatabase namedatabase versionxmla uriuser namemax activeinitial sizedesc datasource salesforce &lt; datum source &gt; namedatabase namebase urlapi versiondesc datasource sapbwbapi &lt; datum source &gt; namesystem namehost nameclient idsystem numberuser nameread block sizedesc datasource saperp &lt; datum source &gt; namesystem namehost nameclient idsystem numberuser namedesc datasource ws &lt; datum source &gt; namewsdl routeauthentication type = authentication1 = http basic authentication2 = http digest authentication3 = ntlm authentication10 = wss basic authentication11 = wss digest authenticationauthentication userproxy host proxy portproxy userdesc datasource xml &lt; datum source &gt; namedata routeschema routedtd routedesc map simple &lt; map &gt; desc map i18n &lt; map &gt; keyvalue(one row entry map)desc procedure &lt; procedure &gt; nametype parameter type)direction = input parameter output parameter desc role &lt; role &gt; descriptionrole role assign role role row assign command return row role assign role desc sessiondatabaseuseri18nactivetransaction true connection start transaction false desc type &lt; type &gt; fieldtype type complex return row component type simple e.g. text type desc user &lt; user &gt; namedescriptionadmin true user administrator false desc view &lt; view &gt; fieldnamefieldtype row field view fieldtypecodefieldprecisionfielddecimalsfieldradixisprimarykeyisnotnullisuniqueisautoincrementisgeneratedcolumnthe field fieldtypecode fieldprecision fielddecimal fieldradix value source type property field view value correspond property sourcetypeid sourcetypesize sourcetypedecimal sourcetyperadix respectively create table view statement create view property section view schema base view administration guide section jdbc wrapper vql guide desc soap | rest webservice &lt; &gt; wsnamewstypesoperationtype 1 = select 10 = insert 11 = update 12 = deleteoperationnamefieldnamefieldtypefielddirection input output parameter statement return row parameter web service desc wrapper custom &lt; wrapper &gt; nametype = customdata source nameparametersoutput schemadesc wrapper df &lt; wrapper &gt; nametype = dfdata source nameoutput schemadesc wrapper essbase &lt; wrapper &gt; nametype = esbasedata source nameserver nameapplication namecube namemdx sentenceoutput schemadesc wrapper itp &lt; wrapper &gt; nametype = itpcreation datemaintenanceoldsequencesubstitutionsmodel contentscannersoutput schemadesc wrapper  jdbc | odbc &lt; wrapper &gt; nametype = jdbc odbcdata source namerelation namesql sentencealiasesoutput schemadesc wrapper json &lt; wrapper &gt; nametype = jsondata source nametuple rootoutput schemadesc wrapper ldap &lt; wrapper &gt; nametype = ldapdata source nameobject classesrecursive searchldap expressionoutput schemadesc wrapper olap &lt; wrapper &gt; nametype = olapdata source namecatalog nameschema namecube namemdx sentenceoutput schemadesc wrapper salesforce &lt; wrapper &gt; nametype = salesforcedata source databasedata source nameobject namesoql sentenceoutput schemadesc wrapper sapbwbapi &lt; wrapper &gt; nametype = sapbwbapischema namecube namemdx sentenceoutput schemadesc wrapper saperp &lt; wrapper &gt; nametype = saperpschema namebapi nameoutput schemadesc wrapper ws &lt; wrapper &gt; nametype = wsdata source nameservice nameport nameoperation nameinput messageoutput messageoutput schemadesc wrapper xml &lt; wrapper &gt; nametype = xmldata source nametuple rootoutput schema</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/output_schema_of_the_desc_commands/output_schema_of_the_desc_commands#output-schema-of-the-desc-command-depending-on-its-parameters</field><field name="link_cont">vdp developer appendix output schema desc command output schema desc command output schema desc command depend parameter</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/error_codes_returned_by_virtual_dataport/error_codes_returned_by_virtual_dataport#error-codes-returned-by-virtual-dataport</field><field name="link_cont">vdp developer appendix error code return virtual dataport error code return virtual dataport error code return virtual dataport</field><field name="cont">error code return virtual dataport&#182;the follow table list error code return jdbc api virtual dataport error code return denodo jdbc api&#182;error typeerror codesmeaningauthentication20212223range 600 700the server authenticate user usually mean credential user valid user privilege connect database user try connect ldap authenticate database error establish connection ldap server parsing119range 1100 1199there error parse query usually mean clause query misspell parameter miss connectionrange 10000 19999the server open connection data source happen source case jdbc data source jdbc driver load error create instance custom wrapper etc security1112range 20000 29999the user privilege execute request example user read privilege try execute insert query compute capabilities29range 30000 39999there error create view prepare execution plan query schema view query calculate e.g. query try project field exist restriction source query meet e.g. query provide value mandatory field metadata management5810171824range 40000 49999there error loading store metadata object datum source wrapper view etc happen object new object valid etc execution4671314151625range 50000 59999there error execution query</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/error_codes_returned_by_virtual_dataport/error_codes_returned_by_virtual_dataport#error-codes-returned-by-the-denodo-jdbc-api</field><field name="link_cont">vdp developer appendix error code return virtual dataport error code return virtual dataport error code return denodo jdbc api</field><field name="cont"> </field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/compile_denodo_odbc_driver/compile_denodo_odbc_driver#compile-the-denodo-odbc-driver</field><field name="link_cont">vdp developer appendix compile denodo odbc driver compile denodo odbc driver compile denodo odbc driver</field><field name="cont">compile denodo odbc driver&#182;denodo provide denodo odbc driver window linux compatible driver manager unixodbc iodbc denodo include source code driver case need use driver unixor use driver manager unixodbc iodbc section explain compile denodo odbc driver pre requisite compile odbc driver linux&#182;the denodo odbc driver depend follow package version gccunixodbc version &gt; = 2.2.14unixodbc devel version &gt; = 2.2.14 linux distribution call unixodbc dev openssl devel linux distribution call libssl dev need package want odbc driver support kerberos authentication postgresql devel version &gt; = 9.x linux distribution call postgresql server dev-9.5 curl version &gt; = 7.71.1 execute curl -v verify version have)noteif need connect denodo server kerbero authentication jdbc datum source denodo use pass session credential install package postgresql devel manually build later compile odbc driver check package instal host compile driver linux distribution use rpm packaging system e.g. red hat centos etc.):check package list instal execute yum list instal &lt; package &gt; example yum list instal gcc postgresql devel unixodbc unixodbc devel openssl develyou likeinstalle package gcc.x86_64 4.8.2 16.2.el7_0 openssl devel.x86_64 1:1.0.1e-60.el7 postgresql devel.x86_64 9.2.18 1.el7 unixodbc.x86_64 2.3.1 11.el7 unixodbc devel.x86_64 2.3.1 11.el7check package instal version package meet requirement package list mean install install package execute command yum install &lt; package &gt; example sudo yum install openssl develif return package available mean particular distribution package name differently case search package command yum list available &lt; package &gt; example yum list available openssl devel note parameter include asterisk pass pattern exact package come copy install yum install &lt; package &gt; linux distribution base debian packaging system like ubuntu check package list instal execute apt list --installe &lt; package &gt; example apt list --installe gcc postgresql server dev-9.5 unixodbc unixodbc dev libssl devyou likeliste gcc trusty 4:4.8.2 1ubuntu6 amd64 instal libssl dev trusty update trusty security 1.0.1f-1ubuntu2.22 amd64 instal postgresql server dev-9.5 trusty update 9.5.14 0ubuntu0.14.04 amd64 instal unixodbc trusty 2.2.14p2 5ubuntu5 amd64 instal unixodbc dev trusty 2.2.14p2 5ubuntu5 amd64 installed]check package instal version package meet requirement package list mean install note package name different one list talk rpm base distribution reason debian base distribution package name different package instal install command apt install &lt; package &gt; example sudo apt install unixodbcif return unable locate package &lt; package &gt; mean particular distribution package name differently case search package command apt list &lt; package &gt; example apt list unixodbc*note parameter include asterisk pass pattern exact package come copy install apt install &lt; package &gt; noteif privilege execute sudo type su press enter provide root password root user duration session compile odbc driver standard method)&#182;this section explain compile denodo odbc driver open command line execute command notice denodo odbc driver compile client machine go noteif need connect denodo server kerbero authentication jdbc datum source denodo use pass session credential follow instruction section instead section compile odbc driver obtain forwardable ticket important line replace &lt; denodo_odbc_home &gt; path directory contain denodo-vdp-odbcdriver-linux.tar.gz file  file obtain &lt; denodo_home&gt;/tool client driver odbc machine denodo server instal export denodo_odbc_home=&lt;denodo_odbc_home &gt; cd $ denodo_odbc_home build denodoodbc driver tar -xzf denodo-vdp-odbcdriver-linux.tar.gz cd denodo vdp odbcdriver linux src denodo pgsqlodbc ./configure --prefix=$denodo_odbc_home dist install driver compile locate &lt; denodo_odbc_home&gt;/dist lib ./configure fail miss dependency section troubleshoot compilation denodo odbc driver example ./configure fail error configure error odbc_config find require unixodbc build compile odbc driver obtain forwardable tickets&#182;this section explain compile denodo odbc driver obtain forwardable kerbero ticket necessary need use kerbero authentication jdbc datum source denodo use pass session credential able use driver login password authentication need feature follow step section notedure follow process system need patch command available connect client machine driver go open command line execute command important line replace &lt; denodo_odbc_home &gt; path directory contain denodo-vdp-odbcdriver-linux.tar.gz file  file obtain &lt; denodo_home&gt;/tool client driver odbc machine denodo server instal export denodo_odbc_home=&lt;denodo_odbc_home &gt; cd $ denodo_odbc_home tar -xzf denodo-vdp-odbcdriver-linux.tar.gz cd denodo vdp odbcdriver linux src download source code postgresql wget https://ftp.postgresql.org/pub/source/v9.5.14/postgresql-9.5.14.tar.gz tar -xzf postgresql-9.5.14.tar.gz file denodo-vdp-odbcdriver-linux.tar.gz include patch modify libpq library postgresql kerbero authentication work denodo cd postgresql-9.5.14 patch ./src interface libpq fe- auth.c ./libpq.patch build libpq library include postgresql ./configure --with krb srvnam = http --with openssl --without readline --prefix=$denodo_odbc_home dist postgresql install build denodoodbc driver cd $ denodo_odbc_home denodo vdp odbcdriver linux src denodo pgsqlodbc ./configure --with libpq=$denodo_odbc_home dist postgresql bin pg_config --prefix=$denodo_odbc_home dist install move libpq denodoodbc driver cd $ denodo_odbc_home dist cp postgresql lib libpq.so.5 lib driver compile locate &lt; denodo_odbc_home&gt;/dist lib recompile library libpq locate directory notefor system able find dependent library libpq.so load denodo odbc driver need add path recompile libpq.so.5 environment variable ld_library_path libpath ./configure fail miss dependency section example ./configure fail error configure error odbc_config find require unixodbc build troubleshoot compilation denodo odbc driver&#182;if find problem compilation denodo odbc driver try following check package require denodo odbc driver instal include version correct try compile manually package unixodbc postgresql devel execute follow command compile libpq module postgresql devel library important line replace &lt; denodo_odbc_home &gt; path directory contain denodo-vdp-odbcdriver-linux.tar.gz file  file obtain &lt; denodo_home&gt;/tool client driver odbc machine denodo server instal export denodo_odbc_home=&lt;denodo_odbc_home &gt; cd $ denodo_odbc_home download build libpq include postgresql wget https://ftp.postgresql.org/pub/source/v9.5.14/postgresql-9.5.14.tar.gz tar -xzf postgresql-9.5.14.tar.gz cd postgresql-9.5.14 ./configure --with krb srvnam = http --with openssl --without readline --prefix=$denodo_odbc_home dist postgresql installcompile unixodbccd $ denodo_odbc_home download build unixodbc wget http://www.unixodbc.org/unixodbc-2.3.4.tar.gz tar -xzf unixodbc-2.3.4.tar.gz cd unixodbc-2.3.4 ./configure installcompile denodo odbc driver libpq library compile abovecd $ denodo_odbc_home build denodoodbc driver tar -xzf denodo-vdp-odbcdriver-linux.tar.gz cd $ denodo_odbc_home denodo vdp odbcdriver linux src denodo pgsqlodbc ./configure --with libpq=$denodo_odbc_home dist postgresql bin pg_config --prefix=$denodo_odbc_home dist installif command fail driver &lt; denodo_odbc_home&gt;/dist lib</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/compile_denodo_odbc_driver/compile_denodo_odbc_driver#pre-requisites-to-compile-the-odbc-driver-on-linux</field><field name="link_cont">vdp developer appendix compile denodo odbc driver compile denodo odbc driver pre requisite compile odbc driver linux</field><field name="cont">pre requisite compile odbc driver linux&#182;the denodo odbc driver depend follow package version gccunixodbc version &gt; = 2.2.14unixodbc devel version &gt; = 2.2.14 linux distribution call unixodbc dev openssl devel linux distribution call libssl dev need package want odbc driver support kerberos authentication postgresql devel version &gt; = 9.x linux distribution call postgresql server dev-9.5 curl version &gt; = 7.71.1 execute curl -v verify version have)noteif need connect denodo server kerbero authentication jdbc datum source denodo use pass session credential install package postgresql devel manually build later compile odbc driver check package instal host compile driver linux distribution use rpm packaging system e.g. red hat centos etc.):check package list instal execute yum list instal &lt; package &gt; example yum list instal gcc postgresql devel unixodbc unixodbc devel openssl develyou likeinstalle package gcc.x86_64 4.8.2 16.2.el7_0 openssl devel.x86_64 1:1.0.1e-60.el7 postgresql devel.x86_64 9.2.18 1.el7 unixodbc.x86_64 2.3.1 11.el7 unixodbc devel.x86_64 2.3.1 11.el7check package instal version package meet requirement package list mean install install package execute command yum install &lt; package &gt; example sudo yum install openssl develif return package available mean particular distribution package name differently case search package command yum list available &lt; package &gt; example yum list available openssl devel note parameter include asterisk pass pattern exact package come copy install yum install &lt; package &gt; linux distribution base debian packaging system like ubuntu check package list instal execute apt list --installe &lt; package &gt; example apt list --installe gcc postgresql server dev-9.5 unixodbc unixodbc dev libssl devyou likeliste gcc trusty 4:4.8.2 1ubuntu6 amd64 instal libssl dev trusty update trusty security 1.0.1f-1ubuntu2.22 amd64 instal postgresql server dev-9.5 trusty update 9.5.14 0ubuntu0.14.04 amd64 instal unixodbc trusty 2.2.14p2 5ubuntu5 amd64 instal unixodbc dev trusty 2.2.14p2 5ubuntu5 amd64 installed]check package instal version package meet requirement package list mean install note package name different one list talk rpm base distribution reason debian base distribution package name different package instal install command apt install &lt; package &gt; example sudo apt install unixodbcif return unable locate package &lt; package &gt; mean particular distribution package name differently case search package command apt list &lt; package &gt; example apt list unixodbc*note parameter include asterisk pass pattern exact package come copy install apt install &lt; package &gt; noteif privilege execute sudo type su press enter provide root password root user duration session</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/compile_denodo_odbc_driver/compile_denodo_odbc_driver#compile-the-odbc-driver-standard-method</field><field name="link_cont">vdp developer appendix compile denodo odbc driver compile denodo odbc driver compile odbc driver standard method</field><field name="cont">compile odbc driver standard method)&#182;this section explain compile denodo odbc driver open command line execute command notice denodo odbc driver compile client machine go noteif need connect denodo server kerbero authentication jdbc datum source denodo use pass session credential follow instruction section instead section compile odbc driver obtain forwardable ticket important line replace &lt; denodo_odbc_home &gt; path directory contain denodo-vdp-odbcdriver-linux.tar.gz file  file obtain &lt; denodo_home&gt;/tool client driver odbc machine denodo server instal export denodo_odbc_home=&lt;denodo_odbc_home &gt; cd $ denodo_odbc_home build denodoodbc driver tar -xzf denodo-vdp-odbcdriver-linux.tar.gz cd denodo vdp odbcdriver linux src denodo pgsqlodbc ./configure --prefix=$denodo_odbc_home dist install driver compile locate &lt; denodo_odbc_home&gt;/dist lib ./configure fail miss dependency section troubleshoot compilation denodo odbc driver example ./configure fail error configure error odbc_config find require unixodbc build</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/compile_denodo_odbc_driver/compile_denodo_odbc_driver#compile-the-odbc-driver-to-obtain-forwardable-tickets</field><field name="link_cont">vdp developer appendix compile denodo odbc driver compile denodo odbc driver compile odbc driver obtain forwardable ticket</field><field name="cont">compile odbc driver obtain forwardable tickets&#182;this section explain compile denodo odbc driver obtain forwardable kerbero ticket necessary need use kerbero authentication jdbc datum source denodo use pass session credential able use driver login password authentication need feature follow step section notedure follow process system need patch command available connect client machine driver go open command line execute command important line replace &lt; denodo_odbc_home &gt; path directory contain denodo-vdp-odbcdriver-linux.tar.gz file  file obtain &lt; denodo_home&gt;/tool client driver odbc machine denodo server instal export denodo_odbc_home=&lt;denodo_odbc_home &gt; cd $ denodo_odbc_home tar -xzf denodo-vdp-odbcdriver-linux.tar.gz cd denodo vdp odbcdriver linux src download source code postgresql wget https://ftp.postgresql.org/pub/source/v9.5.14/postgresql-9.5.14.tar.gz tar -xzf postgresql-9.5.14.tar.gz file denodo-vdp-odbcdriver-linux.tar.gz include patch modify libpq library postgresql kerbero authentication work denodo cd postgresql-9.5.14 patch ./src interface libpq fe- auth.c ./libpq.patch build libpq library include postgresql ./configure --with krb srvnam = http --with openssl --without readline --prefix=$denodo_odbc_home dist postgresql install build denodoodbc driver cd $ denodo_odbc_home denodo vdp odbcdriver linux src denodo pgsqlodbc ./configure --with libpq=$denodo_odbc_home dist postgresql bin pg_config --prefix=$denodo_odbc_home dist install move libpq denodoodbc driver cd $ denodo_odbc_home dist cp postgresql lib libpq.so.5 lib driver compile locate &lt; denodo_odbc_home&gt;/dist lib recompile library libpq locate directory notefor system able find dependent library libpq.so load denodo odbc driver need add path recompile libpq.so.5 environment variable ld_library_path libpath ./configure fail miss dependency section example ./configure fail error configure error odbc_config find require unixodbc build</field></doc><doc><field name="link">
https://community.denodo.com/docs/html/browse/8.0/en/vdp/developer/appendix/compile_denodo_odbc_driver/compile_denodo_odbc_driver#troubleshooting-the-compilation-of-the-denodo-odbc-driver</field><field name="link_cont">vdp developer appendix compile denodo odbc driver compile denodo odbc driver troubleshoot compilation denodo odbc driver</field><field name="cont">troubleshoot compilation denodo odbc driver&#182;if find problem compilation denodo odbc driver try following check package require denodo odbc driver instal include version correct try compile manually package unixodbc postgresql devel execute follow command compile libpq module postgresql devel library important line replace &lt; denodo_odbc_home &gt; path directory contain denodo-vdp-odbcdriver-linux.tar.gz file  file obtain &lt; denodo_home&gt;/tool client driver odbc machine denodo server instal export denodo_odbc_home=&lt;denodo_odbc_home &gt; cd $ denodo_odbc_home download build libpq include postgresql wget https://ftp.postgresql.org/pub/source/v9.5.14/postgresql-9.5.14.tar.gz tar -xzf postgresql-9.5.14.tar.gz cd postgresql-9.5.14 ./configure --with krb srvnam = http --with openssl --without readline --prefix=$denodo_odbc_home dist postgresql installcompile unixodbccd $ denodo_odbc_home download build unixodbc wget http://www.unixodbc.org/unixodbc-2.3.4.tar.gz tar -xzf unixodbc-2.3.4.tar.gz cd unixodbc-2.3.4 ./configure installcompile denodo odbc driver libpq library compile abovecd $ denodo_odbc_home build denodoodbc driver tar -xzf denodo-vdp-odbcdriver-linux.tar.gz cd $ denodo_odbc_home denodo vdp odbcdriver linux src denodo pgsqlodbc ./configure --with libpq=$denodo_odbc_home dist postgresql bin pg_config --prefix=$denodo_odbc_home dist installif command fail driver &lt; denodo_odbc_home&gt;/dist lib</field></doc></add>