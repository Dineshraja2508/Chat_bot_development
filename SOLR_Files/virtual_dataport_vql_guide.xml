<add>
<doc>
 <field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/general_overview_of_virtual_dataport#general-overview-of-virtual-dataport</field><field name="content">
  general overview virtual dataport follow subsection briefly introduce stage involve create information integration application virtual dataport create define datum execute statement
  general overview virtual dataport
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/creating_or_defining_data/creating_or_defining_data#creating-or-defining-data</field><field name="content">
  create define datum section general overview define view relation constitute global schema virtual dataport
  task involve creation administration schemas describe detail subsequent section document
  retrieve datum different type datum source need define datum source hold information connect certain source relational database web service etc
  wrapper extract datum element datum source
  example retrieve datum table database invoke operation web service
  base view represent datum obtain wrapper
  define base view combine create view
  user query new view obtain datum combination datum obtain different source
  follow subsection describe operation
  define base view define datum source wrapper define view global schema
  create define datum
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/creating_or_defining_data/defining_base_views#defining-base-views</field><field name="content">
  define base view source system model series base view
  base view attribute like table relational database
  attribute view data type
  type specific attribute delimit query operator apply certain constraint element type comply
  datum type support virtual dataport organize category normal character string integer float date etc complex array type datum represent multi value datum register represent register type datum
  combine datum type virtual dataport represent hierarchical datum structure like obtain xml file
  addition base view describe query capability search method
  define query execute base view
  necessary datum source e.g. web source web service allow type query datum
  instead present limited interface e.g. operation web service
  base view search method query
  search method compose series 5 uple
  5 uple represent constraint specific query comply execute source search method
  format 5 uple attribute operator obligatoriness multiplicity possible value
  section query capability search method wrapper explain search method
  define base view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/creating_or_defining_data/defining_data_sources_and_wrappers#defining-data-sources-and-wrappers</field><field name="content">
  define datum source wrapper wrapper create assign base relation order able obtain datum specific source
  wrapper provide access datum form base relation source structure manner similar relational database table regard virtual dataport server
  specifically wrapper provide overall view source accord base relation model provide previous section
  process generate wrapper source type jdbc odbc database soap rest web service ldap server xml document delimit text file unstructured information index undertake quickly simply help denodo virtual dataport administration tool
  normally necessary previously create datum source source encapsulate datum access reusable different wrapper act
  wrapper create semi structured web source www fully graphic manner denodo itpilot
  possible create wrapper specific application custom wrapper type
  wish create datum source wrapper directly vql help administration tool section generate wrapper datum source document describe
  general use administration tool strongly recommend task process simple automatic
  wrapper create source need link adequate search method method base relation represent datum system section create base view
  query base relation
  define data source wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/creating_or_defining_data/defining_the_views_of_the_global_schema#defining-the-views-of-the-global-schema</field><field name="content">
  define view global schema base relation define correspond wrapper construct relation global schema define query base relation manner similar define view conventional database
  important highlight define view addition base relation previously define view
  example base relation = title author format price b = title author format price c = title author average_relevance b represent electronic bookshop internet
  c represent source user review book system allow average review specific book search
  imagine want obtain relation global schema r = title author price average_relevance contain book b average review accord c minimum value find price attribute occurrence book find source
  r define follow step create view bookview like union b. create view bookview select union select b create view r join bookview c apply group operation select minimum price book
  create view r select bookview
  title bookview
  author average_relevance min(price minimum bookview join c bookview
  title = c.title bookview
  author = c.author group bookview
  title bookview
  author average_relevance mention base view present limitation query capability express search method
  create view virtual dataport automatically calculate search method base relation statement define view
  allow system know priori specific query answer
  post processing consider query capability source important bear mind virtual dataport server carry post processing operation result obtain say source
  query constraint source possible obtain list capability superset apply post processing
  task carry automatically server
  define view global schema
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/creating_or_defining_data/defining_the_views_of_the_global_schema#post-processing</field><field name="content">
  post processing consider query capability source important bear mind virtual dataport server carry post processing operation result obtain say source
  query constraint source possible obtain list capability superset apply post processing
  task carry automatically server
  post processing
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/general_overview_of_virtual_dataport/executing_statements/executing_statements#executing-statements</field><field name="content">
  execute statement creation stage complete virtual dataport ready accept query and/or update update execute updateable view define sql 92 standard
  detail external application send execute statement virtual database provide developer guide
  section provide general overview statement execution process internal point view
  vql query receive virtual dataport query interpreter start check query capability view involve allow obtain answer query
  query answer user inform
  process continue
  subsequently plan generator create possible execution plan query
  plan normally differ aspect algorithm execute join specific search method select source
  optimizer module responsible obtain cost plan accord different parameter good select
  process task responsible optimally distribute processing virtual dataport server source delegate operation groupby selection condition join union possible
  data transfer network minimize
  stage responsible task choose suitable method implement join operator establish swap disk strategy large result manage use cache module
  section optimize query administration guide detail
  optimum plan select execution engine practice
  execution plan assume execution series sub query express term base relation
  sub query execute wrapper corresponding source
  remarkable virtual dataport capable maximum use parallelism sub query normally execute parallel
  finally execution engine combine result return source accordance specify plan obtain final response query
  important highlight system operate asynchronous manner
  mean result source available system begin process source issue complete response
  considerably speed time obtain tuple final result
  important aspect system capable process partial result i.e. process query source temporarily inaccessible provide result obtain remain source inform client application error
  fundamental aspect optionally mention previously source datum pre loaded server cache
  case system check sub query receive resolve datum contain cache
  case response obtain directly instead query source
  virtual dataport support executing update statement insert update delete view provide update accord standard definition sql-92
  section insert update delete view detail
  execute statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/language_for_defining_and_processing_data_vql#language-for-defining-and-processing-data-vql</field><field name="content">
  language define process datum vql sql structure query language standardize database language support relational database manager available market
  virtual dataport provide language denodo vql denodo virtual query language extend sql require capability distribute information integration environment
  vql like sql compose command clause operator aggregation function
  element combine instruction create update manipulate database
  section describe command clause operator syntax vql
  language define process datum vql
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/unicode_identifiers/unicode_identifiers#element-names-identifiers</field><field name="content">
  element identifi element virtual dataport datum source view web service database etc
  identifi represent element vql statement
  statement represent object quote identifi non quote identifi quote identifi begin end double quotation mark
  example customer 360
  identifi contain character include multibyte character
  non quote identifi surround quote
  non quote identifi meet rule character range  z    z
  follow character range  z  z digit underscore
  non quote identifier reserve word
  quote identifier reserve word advise prevent issue execute query application
  consider maximum length identifier 100 character
  view start underscore
  non quote identifi store low case
  non quote identifi case insensitive
  create view create view customer_360
  virtual dataport store customer_360
  runtime follow query equivalent select customer_360 select customer_360 create object store non quote identifi character lowercase character range  z follow character rage  z digit underscore
  true surround double quote
  example create create view customer360 store customer360 need use double quote refer view
  execute select customer360 database create element
  restriction case insensitive
  create view customer360   customer360
  example create view
  create jdbc datum source df datum source consider different type element
  create element quote identifi query refer element surround double quote
  example select incident option configure server administration section identifi charset control character user use create editing view administration tool design studio
  affect behavior server
  section identifi charset administration guide explain follow difference available char set unicode   restrict change affect user enable disable support quote old version denodo denodo 5.5 early character quote identifi quote ` instead double quote
  quote support maintain backward compatibility
  deprecate advise remove future major version denodo
  example follow statement equivalent create view view space
  create view ` view space `
  element name identifier
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/unicode_identifiers/unicode_identifiers#using-back-quotes</field><field name="content">
  quote old version denodo denodo 5.5 early character quote identifi quote ` instead double quote
  quote support maintain backward compatibility
  deprecate advise remove future major version denodo
  example follow statement equivalent create view view space
  create view ` view space `
  quote
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/object_descriptions/object_descriptions#object-descriptions</field><field name="content">
  object description element database virtual dataport description datum source view field view etc
  create jdbc base view administration tool design studio datum source automatically try obtain description field table view database database capable provide description
  datum source set description field new base view field description underlie database
  type view set description manually
  maximum length description object 4,000 character
  usually add description parameter description
  example example create view description create replace view
  customer360 description
  = view business user need use obtain information customer select
  set description view field useful business user
  data catalog display description business intelligence tool bi tool display
  object description
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/object_descriptions/object_descriptions#id1</field><field name="content">
  example create view description create replace view customer360 description
  = view business user need use obtain information customer select
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types#data-types</field><field name="content">
  datum type virtual dataport catalog include group predefine datum type
  type divide group basic type compound type
  virtual dataport datum type  virtual dataport datum type  =
  blob | boolean | date | decimal | double | float | int | intervaldaysecond | intervalyearmonth | localdate |
  long | text | time | timestamp | timestamptz | xml
  |
   virtual dataport compound datum type 
   virtual dataport compound datum type  = array | register basic datum type support int
  integer number
  maximum value +2 ^ 31 1 2,147,483,647 minimum -2 ^ 31 -2,147,483,648
  long
  long integer number
  maximum value 2 63 1 9,223,372,036,854,775,807 minimum -2 63 -9,223,372,036,854,775,808
  float
  single precision 32 bit ieee 754 float point
  range value explain section float point type format value java language specification
  double
  double precision 64 bit ieee 754 float point
  range value explain section float point type format value java language specification decimal
  sign decimal number arbitrary precision
  boolean
  logical value true false unknown null
  text
  character string date deprecate
  timestamp time zone displacement
  maintain compatibility reason
  localdate
  date time zone year month day time
  time time zone hour minute second millisecond timestamp
  timestamp time zone year month day hour minute second millisecond
  timestamptz
  timestamp time zone displacement intervaldaysecond
  duration period time precision include set contiguous field year month intervalyearmonth
  duration period time precision include year field month field blob
  binary value
  value query condition
  xml
  xml document xml fragment
  datetime type section datum type date timestamp interval explain datetime type detail
  compound type virtual dataport define compound datum type model hierarchical datum datum obtain soap web service xml document
  section define datum type explain define compound type
  compound datum type register
  compound datum internal heterogeneous structure i.e. field datum subdivide type array
  list element register type
  numeric type numeric type int overflow protection
  arithmetic operation involve int value return incorrect value result operation exceed range datum type
  range datum type -2,147,483,648 2,147,483,647
  apply arithmetic operation int value consider convert input value operation long decimal result arithmetic operation exceed range
  example probably follow query return invalid value select amount_in_million
  1000000 avoid issue convert column amount_in_million long
  select cast('long amount_in_million 1000000 note cast apply input value operation amount_in_million
  cast result multiplication solve problem
  type decimal affect arbitrary precision i.e. limit precision
  datum type long float double overflow protection
  range high difficult exceed range
  datum type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types#virtual-dataport-data-types</field><field name="content">
  virtual dataport datum type  virtual dataport datum type  =
  blob | boolean | date | decimal | double | float | int | intervaldaysecond | intervalyearmonth | localdate |
  long | text | time | timestamp | timestamptz | xml
  |
   virtual dataport compound datum type 
   virtual dataport compound datum type  = array | register
  virtual dataport datum type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#data-types-for-dates-timestamps-and-intervals</field><field name="content">
  datum type date timestamp interval virtual dataport datum type hold datetime interval value
  table type denodo description type sql standard localdate date time zone year month day date time time time zone hour minute second fraction second nanosecond precision
  time time zone timestamp timestamp time zone year month day hour minute second fraction second nanosecond precision timestamp
  time zone timestamptz timestamp time zone displacement timestamp time zone intervaldaysecond duration period time precision include set contiguous field year month day time interval intervalyearmonth duration period time precision include year field month field year month interval date deprecate
  timestamp time zone displacement
  similar timestamptz millisecond precision behavior 100 ansi sql compliant
  anymore
  maintain compatibility reason
  n virtual dataport maintain date type previous version backward compatibility
  remove future major version plan stop new development
  type similar type timestamp local timezone oracle
  datum type deprecate introduce great complexity deal time particularly client application datum source run different time zone denodo server
  rule build query deal datetime type  
  follow subsection list rule follow execute query involve datetime field appropriate method define datetime value use appropriate function obtain current datetime convert datetime value datetime value datum type interval arithmetic operator datetime interval value appropriate method define datetime value build datetime literal option use syntax standard type follow value specific format
  function
  method equivalent
  type denodo option build value type example localdate literal date 2018 01 15 function to_localdate('yyyy mm dd 2018 01 15 time literal time 21:45:59 time 21:45:59.999 function to_time('hh mm ss.sss','21:45:59.999 timestamp literal timestamp 2018 01 15 21:45:01 timestamp 2018 01 15 21:45:01.256 function to_timestamp yyyy mm dd hh mm ss.sss
  2018 01 15 21:45:01.256 date deprecate timestamptz
  perspective client type behave way timestamptz literal timestamp time zone 2018 01 15 21:45:01 +02:00 timestamp time zone 2018 01 15 21:45:01.256 +02:00 function to_timestamptz yyyy mm dd hh mm ss.sss xxx 2018 01 15 21:45:01.256 +02:00 interval_year_month literal interval 145 year interval 145 11 year month function function build interval time literal interval 4 5:12:10.222 day second interval 4 5:12 day minute function function build interval use appropriate function obtain current datetime compare datetime value current instant time use appropriate function depend type compare
  function obtain current datetime datum type function use obtain current instant localdate current_date current_date time localtime timestamp localtimestamp localtimestamp timestamptz current_timestamp date deprecate localtimestamp introduce 8.0u20200201
  denodo 8.0 ga update execute cast(current_timestamp timestamp time zone instead
  localtime introduce 8.0u20210715
  denodo 8.0 ga update 8.0u20210209 execute cast(current_timestamp time time zone instead
  convert datetime value datetime value datetime value type convert datetime value type
  table possible conversion different datetime datum type
  datetime datum type conversion localdate time timestamp timestamptz localdate trivial support copy year month day
  set hour minute second zero sv\u2192ts w/o tz\u2192ts w/ tz time support trivial copy date field current_date time field sv sv\u2192ts w/o tz\u2192ts w/ tz timestamp copy date field sv copy time field
  sv trivial tv.utc = sv stzd tv.tz = stzd timestamptz sv \u2192 ts w/o tz\u2192localdate sv\u2192ts w/o tz\u2192time sv.utc + sv.tz trivial sv source value
  tv target value
  utc utc component sv tv source target time zone
  tz time zone displacement sv tv source target time zone stzd sql session default time zone displacement
     \u2192 conversion conceptually step
  example timestamptz   localdate conversion sv \u2192 ts w/o tz\u2192localdate
  mean timestamptz value convert timestamp timestamp   date
  rule conversion implicitly necessary conversion timestamptz need explicitly function cast
  convert timestamp timestamptz time zone add timestamptz value time zone i18n denodo server
  example 2017 10 15 21:45:00 \u2192 2017 10 15 21:45:00 +02:00 timestamp timestamptz
  time zone new value i18n server 2017 01 15 21:15:00 \u2192 2017 01 15 timestamp date remove time component
  2017 10 15 21:45:01 \u2192 21:45:01 timestamp time remove date component
  2017 10 15 21:45:00 +05:00 \u2192 2017 10 15 18:45:00 timestamptz timestamp convert local timestamp subtract difference time zone displacement source value time zone i18n denodo server
  example time zone server +02:00
  2017 10 15 21:45:00 +05:00 \u2192 2017 01 16 timestamptz localdate convert timestamp 2017 10 16 00:45:00 remove time
  example time zone server +08:00
  note example day source value different day target value
  stage conversion timestamptz timestamp time modify accord difference time zone lead change day
  2017 10 15 21:45:00 +05:00 \u2192 18:45:00 timestamptz time convert timestamp 2017 10 15 18:45:00 remove date
  example time zone server +02:00
  2017 01 15 \u2192 2017 01 15 00:00:00 localdate timestamp set time component zero
  2017 01 15 \u2192 2017 01 15 00:00:00 +05:00 localdate timestamptz convert timestamp add time zone i18n server
  example time zone server +05:00
  21:45:01 \u2192 2017 10 15 21:45:01 time timestamp complete date current date denodo server 21:45:00 \u2192 2017 10 15 21:45:00 +02:00 time timestamptz convert timestamp 2017 10 15 21:45:00 add time zone i18n server
  example time zone server +02:00
  datum type interval interval represent period time
  type interval intervalyearmonth duration period time precision include year field month field
  example 145 year interval 145 year 145 year 11 month interval 145 11 year month 145 month interval 145 month intervaldaysecond duration period time precision include set contiguous field year month 4 day 5 hour 12 minute 10 second 222 millisecond interval 4 5:12:10.222 day second 4 day 5 hour 12 minute interval 4 5:12 day minute 11 hour 20 minute interval 11:20 hour minute 10 minute 22 second interval 10:22 minute second 30 second 123 millisecond interval 30.123 second interval value comparable interval type
  arithmetic operator datetime interval value use arithmetic operator perform operation value type datetime interval
  valid operator involve datetime interval operand 1 operator operand
  2 result type datetime datetime long -1 datetime + interval datetime time + time
  long -2 interval + datetime datetime interval + interval interval interval int long interval int long
  interval interval -1 number day  operand 1   operand 2 
  result positive number  operand 1  recent datetime  operand 2 
  result negative number
  -2 millisecond  operand 1   operand 2 
  result positive number  operand 1  high  operand 2 
  result negative number
  datum type date timestamp interval
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#rules-to-build-queries-that-deal-with-datetime-types</field><field name="content">
  rule build query deal datetime type  
  follow subsection list rule follow execute query involve datetime field appropriate method define datetime value use appropriate function obtain current datetime convert datetime value datetime value datum type interval arithmetic operator datetime interval value appropriate method define datetime value build datetime literal option use syntax standard type follow value specific format
  function
  method equivalent
  type denodo option build value type example localdate literal date 2018 01 15 function to_localdate('yyyy mm dd 2018 01 15 time literal time 21:45:59 time 21:45:59.999 function to_time('hh mm ss.sss','21:45:59.999 timestamp literal timestamp 2018 01 15 21:45:01 timestamp 2018 01 15 21:45:01.256 function to_timestamp yyyy mm dd hh mm ss.sss
  2018 01 15 21:45:01.256 date deprecate timestamptz
  perspective client type behave way timestamptz literal timestamp time zone 2018 01 15 21:45:01 +02:00 timestamp time zone 2018 01 15 21:45:01.256 +02:00 function to_timestamptz yyyy mm dd hh mm ss.sss xxx 2018 01 15 21:45:01.256 +02:00 interval_year_month literal interval 145 year interval 145 11 year month function function build interval time literal interval 4 5:12:10.222 day second interval 4 5:12 day minute function function build interval use appropriate function obtain current datetime compare datetime value current instant time use appropriate function depend type compare
  function obtain current datetime datum type function use obtain current instant localdate current_date current_date time localtime timestamp localtimestamp localtimestamp timestamptz current_timestamp date deprecate localtimestamp introduce 8.0u20200201
  denodo 8.0 ga update execute cast(current_timestamp timestamp time zone instead
  localtime introduce 8.0u20210715
  denodo 8.0 ga update 8.0u20210209 execute cast(current_timestamp time time zone instead
  convert datetime value datetime value datetime value type convert datetime value type
  table possible conversion different datetime datum type
  datetime datum type conversion localdate time timestamp timestamptz localdate trivial support copy year month day
  set hour minute second zero sv\u2192ts w/o tz\u2192ts w/ tz time support trivial copy date field current_date time field sv sv\u2192ts w/o tz\u2192ts w/ tz timestamp copy date field sv copy time field
  sv trivial tv.utc = sv stzd tv.tz = stzd timestamptz sv \u2192 ts w/o tz\u2192localdate sv\u2192ts w/o tz\u2192time sv.utc + sv.tz trivial sv source value
  tv target value
  utc utc component sv tv source target time zone
  tz time zone displacement sv tv source target time zone stzd sql session default time zone displacement
     \u2192 conversion conceptually step
  example timestamptz   localdate conversion sv \u2192 ts w/o tz\u2192localdate
  mean timestamptz value convert timestamp timestamp   date
  rule conversion implicitly necessary conversion timestamptz need explicitly function cast
  convert timestamp timestamptz time zone add timestamptz value time zone i18n denodo server
  example 2017 10 15 21:45:00 \u2192 2017 10 15 21:45:00 +02:00 timestamp timestamptz
  time zone new value i18n server 2017 01 15 21:15:00 \u2192 2017 01 15 timestamp date remove time component
  2017 10 15 21:45:01 \u2192 21:45:01 timestamp time remove date component
  2017 10 15 21:45:00 +05:00 \u2192 2017 10 15 18:45:00 timestamptz timestamp convert local timestamp subtract difference time zone displacement source value time zone i18n denodo server
  example time zone server +02:00
  2017 10 15 21:45:00 +05:00 \u2192 2017 01 16 timestamptz localdate convert timestamp 2017 10 16 00:45:00 remove time
  example time zone server +08:00
  note example day source value different day target value
  stage conversion timestamptz timestamp time modify accord difference time zone lead change day
  2017 10 15 21:45:00 +05:00 \u2192 18:45:00 timestamptz time convert timestamp 2017 10 15 18:45:00 remove date
  example time zone server +02:00
  2017 01 15 \u2192 2017 01 15 00:00:00 localdate timestamp set time component zero
  2017 01 15 \u2192 2017 01 15 00:00:00 +05:00 localdate timestamptz convert timestamp add time zone i18n server
  example time zone server +05:00
  21:45:01 \u2192 2017 10 15 21:45:01 time timestamp complete date current date denodo server 21:45:00 \u2192 2017 10 15 21:45:00 +02:00 time timestamptz convert timestamp 2017 10 15 21:45:00 add time zone i18n server
  example time zone server +02:00
  datum type interval interval represent period time
  type interval intervalyearmonth duration period time precision include year field month field
  example 145 year interval 145 year 145 year 11 month interval 145 11 year month 145 month interval 145 month intervaldaysecond duration period time precision include set contiguous field year month 4 day 5 hour 12 minute 10 second 222 millisecond interval 4 5:12:10.222 day second 4 day 5 hour 12 minute interval 4 5:12 day minute 11 hour 20 minute interval 11:20 hour minute 10 minute 22 second interval 10:22 minute second 30 second 123 millisecond interval 30.123 second interval value comparable interval type
  arithmetic operator datetime interval value use arithmetic operator perform operation value type datetime interval
  valid operator involve datetime interval operand 1 operator operand
  2 result type datetime datetime long -1 datetime + interval datetime time + time
  long -2 interval + datetime datetime interval + interval interval interval int long interval int long
  interval interval -1 number day  operand 1   operand 2 
  result positive number  operand 1  recent datetime  operand 2 
  result negative number
  -2 millisecond  operand 1   operand 2 
  result positive number  operand 1  high  operand 2 
  result negative number
  rule build query deal datetime type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#most-appropriate-method-to-define-a-datetime-value</field><field name="content">
  appropriate method define datetime value build datetime literal option use syntax standard type follow value specific format
  function
  method equivalent
  type denodo option build value type example localdate literal date 2018 01 15 function to_localdate('yyyy mm dd 2018 01 15 time literal time 21:45:59 time 21:45:59.999 function to_time('hh mm ss.sss','21:45:59.999 timestamp literal timestamp 2018 01 15 21:45:01 timestamp 2018 01 15 21:45:01.256 function to_timestamp yyyy mm dd hh mm ss.sss
  2018 01 15 21:45:01.256 date deprecate timestamptz
  perspective client type behave way timestamptz literal timestamp time zone 2018 01 15 21:45:01 +02:00 timestamp time zone 2018 01 15 21:45:01.256 +02:00 function to_timestamptz yyyy mm dd hh mm ss.sss xxx 2018 01 15 21:45:01.256 +02:00 interval_year_month literal interval 145 year interval 145 11 year month function function build interval time literal interval 4 5:12:10.222 day second interval 4 5:12 day minute function function build interval
  appropriate method define datetime value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#use-the-appropriate-function-to-obtain-the-current-datetime</field><field name="content">
  use appropriate function obtain current datetime compare datetime value current instant time use appropriate function depend type compare function obtain current datetime datum type function use obtain current instant localdate current_date current_date time localtime timestamp localtimestamp localtimestamp timestamptz current_timestamp date deprecate localtimestamp introduce 8.0u20200201
  denodo 8.0 ga update execute cast(current_timestamp timestamp time zone instead
  localtime introduce 8.0u20210715
  denodo 8.0 ga update 8.0u20210209 execute cast(current_timestamp time time zone instead
  use appropriate function obtain current datetime
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#function-to-obtain-the-current-date-time</field><field name="content">
   
  function obtain current date time
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#converting-a-datetime-value-to-another-datetime-value</field><field name="content">
  convert datetime value datetime value datetime value type convert datetime value type
  table possible conversion different datetime datum type
  datetime datum type conversion localdate time timestamp timestamptz localdate trivial support copy year month day
  set hour minute second zero sv\u2192ts w/o tz\u2192ts w/ tz time support trivial copy date field current_date time field sv sv\u2192ts w/o tz\u2192ts w/ tz timestamp copy date field sv copy time field
  sv trivial tv.utc = sv stzd tv.tz = stzd timestamptz sv \u2192 ts w/o tz\u2192localdate sv\u2192ts w/o tz\u2192time sv.utc + sv.tz trivial sv source value
  tv target value
  utc utc component sv tv source target time zone
  tz time zone displacement sv tv source target time zone stzd sql session default time zone displacement
     \u2192 conversion conceptually step
  example timestamptz   localdate conversion sv \u2192 ts w/o tz\u2192localdate
  mean timestamptz value convert timestamp timestamp   date
  rule conversion implicitly necessary conversion timestamptz need explicitly function cast
  convert timestamp timestamptz time zone add timestamptz value time zone i18n denodo server
  example 2017 10 15 21:45:00 \u2192 2017 10 15 21:45:00 +02:00 timestamp timestamptz
  time zone new value i18n server 2017 01 15 21:15:00 \u2192 2017 01 15 timestamp date remove time component
  2017 10 15 21:45:01 \u2192 21:45:01 timestamp time remove date component
  2017 10 15 21:45:00 +05:00 \u2192 2017 10 15 18:45:00 timestamptz timestamp convert local timestamp subtract difference time zone displacement source value time zone i18n denodo server
  example time zone server +02:00
  2017 10 15 21:45:00 +05:00 \u2192 2017 01 16 timestamptz localdate convert timestamp 2017 10 16 00:45:00 remove time
  example time zone server +08:00
  note example day source value different day target value
  stage conversion timestamptz timestamp time modify accord difference time zone lead change day
  2017 10 15 21:45:00 +05:00 \u2192 18:45:00 timestamptz time convert timestamp 2017 10 15 18:45:00 remove date
  example time zone server +02:00
  2017 01 15 \u2192 2017 01 15 00:00:00 localdate timestamp set time component zero
  2017 01 15 \u2192 2017 01 15 00:00:00 +05:00 localdate timestamptz convert timestamp add time zone i18n server
  example time zone server +05:00
  21:45:01 \u2192 2017 10 15 21:45:01 time timestamp complete date current date denodo server 21:45:00 \u2192 2017 10 15 21:45:00 +02:00 time timestamptz convert timestamp 2017 10 15 21:45:00 add time zone i18n server
  example time zone server +02:00
  convert datetime value datetime value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#id1</field><field name="content">
   
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#data-types-for-intervals</field><field name="content">
  datum type interval interval represent period time
  type interval intervalyearmonth duration period time precision include year field month field
  example 145 year interval 145 year 145 year 11 month interval 145 11 year month 145 month interval 145 month intervaldaysecond duration period time precision include set contiguous field year month 4 day 5 hour 12 minute 10 second 222 millisecond interval 4 5:12:10.222 day second 4 day 5 hour 12 minute interval 4 5:12 day minute 11 hour 20 minute interval 11:20 hour minute 10 minute 22 second interval 10:22 minute second 30 second 123 millisecond interval 30.123 second interval value comparable interval type
  datum type interval
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#arithmetic-operators-for-datetime-and-interval-values</field><field name="content">
  arithmetic operator datetime interval value use arithmetic operator perform operation value type datetime interval
  valid operator involve datetime interval operand 1 operator operand
  2 result type datetime datetime long -1 datetime + interval datetime time + time
  long -2 interval + datetime datetime interval + interval interval interval int long interval int long
  interval interval -1 number day  operand 1   operand 2 
  result positive number  operand 1  recent datetime  operand 2 
  result negative number
  -2 millisecond  operand 1   operand 2 
  result positive number  operand 1  high  operand 2 
  result negative number
  arithmetic operator datetime interval value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/data_types_for_dates_timestamps_and_intervals#id2</field><field name="content">
   
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/data_types/internationalization#internationalization</field><field name="content">
  internationalization virtual dataport integrate datum source different country format output datum format expect country locale
  example virtual dataport display result query specific time zone independent zone datum source e.g. number decimal separator spanish datum extract web service u.s locale
  need internationalization configuration country location datum handle virtual dataport server come represent map type i18n section define map
  virtual dataport include map create common configuration country
  configuration use standard prefix define standard iso-3166 country code
  e.g. spain es_euro great britain gb france fr united states etc
  section manage internationalization configuration describe add new internationalization configuration
  define new i18n map
  lastly important bear mind default format write date float double constant query view establish internationalization configuration
  section manage internationalization configuration information parameter internationalization configuration section describe catalog element know obtain parameter assign certain configuration
  appendix datetime function list function process date value useful express require format
  internationalization
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/statements/statements#statements</field><field name="content">
  statement type statement vql ddl datum definition language statement
  allow create new datum source wrapper view etc
  ddl command create create replace new base view view store procedure wrapper datum source publish web service user etc drop remove element base view view store procedure wrapper datum source publish web service user etc alter
  modify specific property view internationalization configuration cache swap configuration etc
  allow modifying database user permission
  desc description datum type view store procedure map operator wrapper datum source etc list enumerate element catalog datum source view etc
  grant revoke allow establish revoke user permission database store procedure and/or view
  dml datum manipulation language statement
  allow query update datum
  virtual dataport provide follow dml statement select execute query define new view
  insert update delete inserting update delete row view respectively begin commit rollback beginning commit roll transaction respectively
  information section transaction virtual dataport
  execute virtual dataport store procedure
  statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/logical_operators/logical_operators#logical-operators</field><field name="content">
  logical operator logical operator create boolean expression evaluate true false typically clause
  logical operator support logical  
  evaluate condition return true value correct
  logical  
  evaluate condition return true value correct
  logical negation
  apply condition negate value
  logical operator
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/comparison_operators/comparison_operators#comparison-operators</field><field name="content">
  comparison operator comparison operator condition compare expression
  result comparison true false unknown
  important comparison null value return unknown
  query and/or clause row condition return true add result
  behavior define sql standard
  section value logic explain detail
  comparison operator follow  b true b.
   = b true equal b.  b true
  great b.  = b true great equal b. = b true b equal
    b true different b. like b true match
  pattern b. b expression type text include wildcard character percentage represent segment text length include text
  underscore represent character character
  optionally indicate escape clause follow character
  character escape character
  escape character place wildcard character indicate wildcard interpret regular character wildcard
  default value escape character $ dollar
  pattern include character want consider literal wildcard escape prefix escape character
  character indicate escape parameter indicate dollar
  example $ $ example 1
  pattern commerce match string end substre commerce follow character
  example value match pattern commerce1 new commerce2
  example 2 follow query return row view internet_inc summary contain text adsl
  select internet_inc summary like adsl% example 3 obtain row value column discount 30 use condition select discount like 30~% escape ~ escape character ~ indicate percentage character 30 treat wildcard
  regexp_like b true match pattern b. b java regular expression
  want case insensitive comparison use operator regexp_ilike performance use regular expression ignore case i.e. regular expression start
  example consider follow view product
  identifi aj00 product aj17 product b aj1a8 product c pq983 product d pq00 product e query select product identifier regexp_like aj\\d+ return row identifi aj00 product aj17 product b regexp_ilike b true match pattern b ignore case difference
  b java regular expression
  null true null
  null true null
  true true boolean expression true
  false true boolean expression false
  b c true equal expression right b c
  example follow statement select tuple view internet_inc value taxid attribute b78596011 b78596012
  select internet_inc taxid b78596011 b78596012
  b c true great equal b equal c. example follow statement produce result select tuple view internet_inc value iinc_id attribute range 2 4 inclusive
  select internet_inc iinc_id 2 4 ~ evaluation operator return value 0 1 estimate similarity text type operand variety similarity algorithm
  addition operand compare similarity operator receive similarity algorithm use minimum similarity threshold parameter
  similarity character string reach exceed threshold condition assess true
  case assess false
  leave hand text type operand character string compare
  right hand operand list text type element
  element list second character string compare
  second specify minimum similarity threshold value 0 1 optional specify similarity algorithm
  algorithm available similarity function appendix similarity
  example follow query return tuple customername field similarity 0.7 general motors inc string jaro winkler editing distance algorithm string select internet_inc_cname
  customer_name ~ general motor inc','0.7','jarowinkler xmlexist operator execute xquery expression xml query xml value
  return true find match
  operator signature xmlexists(xqueryexpression text value xml
  return true match xqueryexpression value
  xmlexists(xqueryexpression text readxqueryexpressionfromfile boolean value xml
  readxqueryexpressionfromfile true xqueryexpression path file contain xquery expression
  xmlexists(xqueryexpression text readxqueryexpressionfromfile boolean value xml readxmlvaluefromfile
  readxqueryexpressionfromfile true xqueryexpression path file contain xquery expression
  readxmlvaluefromfile true readxmlvaluefromfile path file contain input xml
  comparison operator
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/comparison_operators/comparing_literals#comparing-literals</field><field name="content">
  compare literal comparison text value case sensitive
  compare literal operator =   =  = order clause evaluate join condition involve value type text etc case value account
  compare literal
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/comparison_operators/three-valued_logic#three-valued-logic</field><field name="content">
  value logic virtual dataport fully conformant value logic define sql standard
  value logic define boolean expression return value true false unknown represent null value
  consider follow rule deal null value comparison null value return unknown
  comparison unknown value return unknown
  mean function apply function return unknown return unknown
  condition unknown return false
  mean query and/or clause row condition return true add result
  evaluate value null use operator null null respectively
  use = null   null return true
  example example 1 let execute query
  select view_1
  = b let row view_1 null b 1
  row result = b unknown null
  result evaluate unknown unknown
  row add result query
  example 2 select employee inner join department employee.dept_id = department.id query return employee column dept_id null comparison null return unknown
  example 3 query obtain customer state register
  select customer state null note use operator null
  example 4 query obtain customer state register
  select customer state null note use operator null
  example 5 example query return expect
  select customer state   null query return 0 row
  reason comparison null value evaluate true
  value logic
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/concatenation_operator/concatenation_operator#concatenation-operator</field><field name="content">
  concatenation operator concatenation operator || concatenate character string
  example select last_name || || first_name full_name employee operand null result null
  example row last_name   first_name null value full_name null
  concatenation operator
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/functions_for_conditions_and_derived_attributes/functions_for_conditions_and_derived_attributes#functions-for-conditions-and-derived-attributes</field><field name="content">
  function condition derive attribute derive attribute function generate new attribute schema view apply expression function attribute view constant and/or result evaluate function
  expression function operand condition
  function define identifi list argument turn constant field function
  section function list function syntax example
  addition develop function java virtual dataport api
  section develop custom function developer guide explain
  function condition derive attribute
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/syntax_conventions/syntax_conventions#syntax-conventions</field><field name="content">
  syntax convention follow section document describe different operation execute vql
  notation syntax convention description provide
  language case insensitive
  i.e. create view equivalent create view
   rule  grammar rule
  indicate element syntax specify later
  separator appear e.g.  element definition  indicate representative element follow element define
  = element leave symbol define construct right
  definition rule element bracket optional
  asterisk indicate element specify zero time
  example  search_method_clause  indicate element  search_method_clause  appear zero time
  plus sign + indicate element specify time
  example
   field]+ indicate element  field  appear repeat time require
  element separate character | possibly group brace indicate alternative element
  example basic |  authentication  indicate token basic grammar rule authentication occur position
  commas syntax construction separate element list
  bracket normally serve group expression increase priority
  case require specific syntax statement
  whitespace character space horizontal tab line feed
  identifi  identifi  element catalog
  character identifi number range  z  quote identifi 
  surround double quote e.g. identifi space
  certain word identifier
  definition  reserve word  basic element vql statement
  number  number 
  number combination digit precede symbol include stop decimal separator point optionally exponent real number
  logical value  boolean 
  representation true false logical value
  literal  literal 
  literal sequence character surround single quote
  single quote escape single quote
  operator  operator 
  represent operator system
  basic element vql statement  identifier  =  basic identifier  |  quote identifier   basic identifier  = za z][a za z_0 9 character basic identifi range z z
  follow character range z z digit underscore
   quote identifier  =
  identifi surround double quote contain character
  double quote identifi escape double quote
  e.g. identifier\\with quote
   view identifier  =  identifi database   identifi database  =  element identifi  assume element exist current database
  |  database identifier.view identifi   integer  =
  -][0 9]+  number  =  integer  | 0 9]*\\.[0 9]+)|([0 9]+\\.[0 9
  0 9]*\\.[0 9]+)|([0 9]+\\.[0 9]*)|([0 9]+))([ee][-+][0 9]+
   boolean  = true |
  false  literal  =
  single quote literal escape single quote
  e.g. literal''with quote  operator  =  unary operator  |
   binary operator   operator symbol  = ~!@#^|?=]+  unary operator  = null | null | true | false  binary operator  = = |  identifier  |  operator symbol 
  |
  basic element vql statement reserve word  reserve word  = add | | alter |
  | | | asc | base | | | case | connect | context | create | cross | current_date | current_timestamp
  | custom |
  database | default | desc | df | distinct | drop | exist |
  false |
  fetch | flatten | | | grant | group
  | hash |
  | html |
  | inner | intersect | | jdbc | join | ldap |
  lead | leave | limit |
  localtime | localtimestamp |
  merge |
  minus |
  | natural | nest | nos | | null |
  obl | odbc | |
  | offset |
  | | opt | | order
  | order | privilege
  | read | reverseorder | revoke |
  right | row | select | swap | table |
  | trace |
  trail | true | union | user | | view
  |
  | | | write |
  ws | zero
  syntax convention
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/syntax_conventions/syntax_conventions#basic-elements-of-vql-statements</field><field name="content">
  basic element vql statement  identifier  =  basic identifier  |  quote identifier   basic identifier  = za z][a za z_0 9 character basic identifi range z z
  follow character range z z digit underscore
   quote identifier  =
  identifi surround double quote contain character
  double quote identifi escape double quote
  e.g. identifier\\with quote
   view identifier  =  identifi database   identifi database  =  element identifi  assume element exist current database
  |  database identifier.view identifi   integer  =
  -][0 9]+  number  =  integer  | 0 9]*\\.[0 9]+)|([0 9]+\\.[0 9
  0 9]*\\.[0 9]+)|([0 9]+\\.[0 9]*)|([0 9]+))([ee][-+][0 9]+
   boolean  = true |
  false  literal  =
  single quote literal escape single quote
  e.g. literal''with quote  operator  =  unary operator  |
   binary operator   operator symbol  = ~!@#^|?=]+  unary operator  = null | null | true | false  binary operator  = = |  identifier  |  operator symbol 
  |
  
  basic element vql statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/syntax_conventions/syntax_conventions#basic-elements-of-vql-statements-reserved-words</field><field name="content">
  basic element vql statement reserve word  reserve word  = add | | alter |
  | | | asc | base | | | case | connect | context | create | cross | current_date | current_timestamp
  | custom |
  database | default | desc | df | distinct | drop | exist |
  false |
  fetch | flatten | | | grant | group
  | hash |
  | html |
  | inner | intersect | | jdbc | join | ldap |
  lead | leave | limit |
  localtime | localtimestamp |
  merge |
  minus |
  | natural | nest | nos | | null |
  obl | odbc | |
  | offset |
  | | opt | | order
  | order | privilege
  | read | reverseorder | revoke |
  right | row | select | swap | table |
  | trace |
  trail | true | union | user | | view
  |
  | | | write |
  ws | zero
  basic element vql statement reserve word
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/syntax_conventions/syntax_of_functions_and_condition_values#syntax-of-functions-and-condition-values</field><field name="content">
  syntax function condition value mention manual different type function virtual dataport aggregation function function condition create derive attribute
  list syntax function
  rule form function  field  =  identifier[.identifier 
  |  identifier[.identifier]'['integer 
   compound field 
  |  identifier[.identifier])[compound field 
   compound field  = .identifier 
  |  integer   funcsymbol 
  = \\+\\-\\*\\/\\%]+  value  = null |  field  |
   number  |  boolean  |
   literal  |  function  |
   value   funcsymbol 
   value  |  value 
  |  rowvalue  |  rowvalue 
   rowvalue 
  | case  value   compare_value value 
   result value   compare_value value   result value 
   result
  value 
  end | case  condition   result value   condition   result value 
   result value 
  end  condition  =  condition   condition  |  condition   condition  |  condition  |
   condition 
  |  boolean  |
   value   unary operator  |
   value  
  binary operator   value 
   value 
  
  |  value  
  binary operator   value   value 
  |  value   value   value  |  value   value   value 
  |  value  like  value  escape  escape character literal 
  |  value   value   value  |
   value   value   value 
  |  value  like  value  escape  escape character literal 
  |  value 
  regexp_like  value  |
   value  regexp_ilike
   value  |  value  xmlexist  xquery expression text   value xml 
  | xmlexist  xquery expression text   readxqueryexpressionfromfile boolean   value xml 
  |  value 
   rowvalue  = row  value 
   value 
   function  =  identifier   function modifier 
   function parameter 
   function parameter 
   function parameter  = |  value  |  value   value   function modifier  = | distinct  unary operator 
  = basic element vql statement  binary operator  = basic element vql statement define syntax function use follow element element  field  define syntax specify attribute view base view
  note attribute compound type section management compound value detailed description compound type
   value  element define syntax parameter function
  attribute number boolean literal constant
  possible create compound value row constructor section condition compound value
  parameter function new function
  addition  value  allow infix notation specify function  value   funcsymbol 
   value  rule
  function element define identifi follow list parameter bracket separate comma
  parameter function single value  value  element multivalued  value  element square bracket separate comma
  syntax explain early common type function exist virtual dataport
  peculiarity exist particular function type
  peculiarity exist mention section manual corresponding function type
  finally important remember format represent date type constant field datum type internationalization characteristic query view base relation set internationalization configuration
  section manage internationalization configuration information different internationalization configuration parameter section describe catalog element find consult parameter assign specific internationalization configuration
  syntax function condition value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/syntax_conventions/syntax_of_functions_and_condition_values#rules-for-forming-functions</field><field name="content">
  rule form function  field  =  identifier[.identifier 
  |  identifier[.identifier]'['integer 
   compound field 
  |  identifier[.identifier])[compound field 
   compound field  = .identifier 
  |  integer   funcsymbol 
  = \\+\\-\\*\\/\\%]+  value  = null |  field  |
   number  |  boolean  |
   literal  |  function  |
   value   funcsymbol 
   value  |  value 
  |  rowvalue  |  rowvalue 
   rowvalue 
  | case  value   compare_value value 
   result value   compare_value value   result value 
   result
  value 
  end | case  condition   result value   condition   result value 
   result value 
  end  condition  =  condition   condition  |  condition   condition  |  condition  |
   condition 
  |  boolean  |
   value   unary operator  |
   value  
  binary operator   value 
   value 
  
  |  value  
  binary operator   value   value 
  |  value   value   value  |  value   value   value 
  |  value  like  value  escape  escape character literal 
  |  value   value   value  |
   value   value   value 
  |  value  like  value  escape  escape character literal 
  |  value 
  regexp_like  value  |
   value  regexp_ilike
   value  |  value  xmlexist  xquery expression text   value xml 
  | xmlexist  xquery expression text   readxqueryexpressionfromfile boolean   value xml 
  |  value 
   rowvalue  = row  value 
   value 
   function  =  identifier   function modifier 
   function parameter 
   function parameter 
   function parameter  = |  value  |  value   value   function modifier  = | distinct
  rule form function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/language_for_defining_and_processing_data_vql/comments/comments#comments</field><field name="content">
  comment add comment vql statement
  type comment single line comment begin comment hyphen hash
  rest line comment
  multiline comment begin comment slash asterisk end asterisk slash
  type comment span multiple line
  comment
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/functions#functions</field><field name="content">
  function function similar operator manipulate data item return result
  function differ operator format argument
  format enable function operate zero argument function(argument 1 argument 2
  type function single row function function return single row row query table view
  numeric function text function datetime function xml functions json function conversion function function aggregate function analytic function
  function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#aggregation-functions</field><field name="content">
  aggregation function aggregate function return single result row group row result
  usually use aggregation function select clause query group clause
  query execution engine split row group apply aggregation function group
  function return row group
  query group clause execution engine apply aggregation function row return row
  aggregation function input parameter precede modifier distinct
  modifier affect semantic certain aggregation function apply tuple group different value field question
  aggregation function avg count group_concat list max median min nest stdev stdevp sum var varp avg description avg function return average non null value field table
  value field null function return null
  syntax avg  expression  double expression
  require
  type expression int long float double decimal
  example example 1 consider follow view item item price 3.45 b 9.99 c 4.99 select avg(price average_price item average_price 6.1433333333333335 example
  2 consider follow view items_2 item price 3.45 b 9.99 c 4.99 d null select avg(price average_price items_2
  average_price 6.1433333333333335 count description count function return number tuple result selection operation
  parameter return number tuple
  parameter field return number non null value applicable type field
  function query group clause case
  syntax count  count parameter 
   count parameter  =  field identifi  | count parameter
  require
  field
  example consider follow view item
  item price 3.45 b 9.99 c 4.99 d null example 1 select count item count 4 example 2 select count(price item count 3 description
  function return value field group value
  function ignore distinct modifier
  syntax  field identifier  field
  require
  field view
  example consider follow view v b group1 group1
  group1 null group2 example
  1 select first(b v example 2 select first(b v group group1 group2 group_concat description
  group_concat function return group string concatenation field field value group
  syntax group_concat distinct |  field identifier  group_concat  row separator text 
   field separator text 
   field identifier 
   field identifier 
  group_concat  ignore null boolean   row separator text   field separator text   field identifier 
   field identifier  ignore null
  optional
  true field field row null group_concat ignore field row
  false row ignore null value treat character
  default value true
  row separator
  optional
  literal separate value row
  default value field separator
  optional
  literal separate value field row
  default value whitespace
  field
  require
  field contain value concatenate
  example consider follow view v b c group1 1 group1
  2 group1 null group2 4 example 1 select group_concat c v group group_concat group1 group2 example 2 select group_concat b c v group group_concat group1 1;one:2;two group2 4 field b null row group_concat ignore field row
  ignore value
  example 3 select group_concat(false b c v group
  group_concat group1 1;one:2;two:;three group2
  parameter ignorenull false group_concat ignore value field c row value field b row null
  case null value treat like character
     description function return value field group value
  function ignore distinct modifier
  syntax  field identifier  field
  require
  field view
  example consider follow view v b group1 group1
  group1 null group2 example
  1 select last(b v example 2 select last(b v group group1 null group2 list description list function return array value specify field
  behavior function nest section nest invoke single field argument
  syntax list  field identifier  field
  require
  field view
  example consider follow view v b group1 group1
  group1 null group2 example
  1 select list(b v list array null example 2 select list(b v group list group1 array null group2 array max description
  max function return high value field group value
  function ignore distinct modifier
  syntax max  expression  expression
  require
  expression type date deprecate type intervaldaysecond intervalyearmonth text time timestamp timestamptz numeric datum type
  return type type input expression
  field text type function compare unicode value character value
  example consider follow view v b c group1 1 virtual dataport group1 2 datum catalog group1
  null itpilot group2 4 denodo example 1 select max(b v max 4 example 2 select max(b v group max group1 2 group2 4 example 3 select max(c v max denodo example result denodo letter high unicode value value
  d = 100 v = 86 etc median description median function return middle number field group value average middle number group number value
  function account null value calculate result
  function ignore modifier distinct
  syntax median  expression  expression
  require
  expression type date deprecate type time timestamp timestamptz numeric datum type
  example consider follow view employee d first_name start_date salary 01
  jason 25 jul-96 1234.56 02 alison 21 mar-76 6661.78 03 james 12 dec-78 6544.78 04 celia 24 oct-82 2344.78 05 robert 24 oct-82 2334.78 05 jason 30 jul-87 2224.50 example 1 select median(salary median(start_date employee median(salary median(start_date 2339.78 1983 06 05 example 2 select first_name median(salary median(start_date employee group first_name first_name median(salary median(start_date alison 6661.78 1976 03 21 celia 2344.78 1982 10 24 jame 6544.78 1978 12 12 jason 1729.53 1992 01 26 robert 2334.78 1984 01 15 min description
  min function return low value field group value
  function ignore distinct modifier
  syntax min  expression  expression
  require
  expression type date deprecate type intervaldaysecond intervalyearmonth text time timestamp timestamptz numeric datum type
  field text type function compare unicode value character value
  example consider follow view v b c group1 1 virtual dataport group1 2 datum catalog group1
  null itpilot group2 4 denodo example 1 select min(b v min 1 example 2 select min(b v group min group1 1 group2 4 example 3 select min(c v min data catalog example result datum catalog letter low unicode value value d = 68 d
  = 100 v = 86 etc nest description nest function return array value select field
  result inverse result flatten view section flatten view flatten datum structure information flatten view
  syntax nest  field identifier 
   field identifi  array nest field
  field
  equivalent pass field view function
  example consider view v int_sample text_sample register_sample 1 register hello 1 b register hello good bye 2 c register string
  string select int_sample nest(text_sample register_sample
  nest_sample v group
  int_sample int_sample nest_sample 1 array register hello b register hello good bye 2 array c register string string stdev description stdev function return sample standard deviation group value
  function account null value calculate result
  syntax stdev  expression  decimal expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region stdev(revenue revenue group
  region region stdev south 37709.24377832752 northeast 29016.36924794922 stdevp description
  stdevp function return population standard deviation group value
  function account null value calculate result
  syntax stdevp  expression  decimal expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region stdevp(revenue revenue group region region stdevp south 30789.46861437455 northeast 23691.76628188695 sum description
  sum function return sum non null value field group value
  syntax sum  expression  expression
  require
  numeric datum type
  return type type input expression
  example consider follow view v b group1 1 group1 2 group1 null group2 4 example 1 select sum(b v sum 7 example 2 select sum(b v group sum group1 3 group2 4 var description
  var function return sample variance group value
  function account null value calculate result
  syntax var  expression  decimal expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region var(revenue revenue group region region var south 1.4219870663333333e9 northeast 8.419496843333333e8 varp description varp function return population variance group value
  function account null value calculate result
  syntax varp  expression  double expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region varp(revenue revenue group region region varp south 9.479913775555555e8 northeast 5.612997895555555e8
  aggregation function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#avg</field><field name="content">
  avg description avg function return average non null value field table
  value field null function return null
  syntax avg  expression  double expression
  require
  type expression int long float double decimal
  example example 1 consider follow view item item price 3.45 b 9.99 c 4.99 select avg(price average_price item average_price 6.1433333333333335 example
  2 consider follow view items_2 item price 3.45 b 9.99 c 4.99 d null select avg(price average_price items_2 average_price 6.1433333333333335
  avg
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#count</field><field name="content">
  count description count function return number tuple result selection operation
  parameter return number tuple
  parameter field return number non null value applicable type field
  function query group clause case
  syntax count  count parameter 
   count parameter  =  field identifi  | count parameter
  require
  field
  example consider follow view item
  item price 3.45 b 9.99 c 4.99 d null example 1 select count item count 4 example 2 select count(price item count 3
  count
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#first</field><field name="content">
     description function return value field group value
  function ignore distinct modifier
  syntax  field identifier  field
  require
  field view
  example consider follow view v b group1 group1
  group1 null group2 example
  1 select first(b v example 2 select first(b v group group1 group2
  
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#group-concat</field><field name="content">
  group_concat description group_concat function return group string concatenation field field value group
  syntax group_concat distinct |  field identifier  group_concat  row separator text 
   field separator text 
   field identifier 
   field identifier 
  group_concat  ignore null boolean   row separator text   field separator text   field identifier 
   field identifier  ignore null
  optional
  true field field row null group_concat ignore field row
  false row ignore null value treat character
  default value true
  row separator
  optional
  literal separate value row
  default value field separator
  optional
  literal separate value field row
  default value whitespace
  field
  require
  field contain value concatenate
  example consider follow view v b c group1 1 group1
  2 group1 null group2 4 example 1 select group_concat c v group group_concat group1 group2 example 2 select group_concat b c v group group_concat group1 1;one:2;two group2 4 field b null row group_concat ignore field row
  ignore value
  example 3 select group_concat(false b c v group
  group_concat group1 1;one:2;two:;three group2
  parameter ignorenull false group_concat ignore value field c row value field b row null
  case null value treat like character
  group concat
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#last</field><field name="content">
     description function return value field group value
  function ignore distinct modifier
  syntax  field identifier  field
  require
  field view
  example consider follow view v b group1 group1
  group1 null group2 example
  1 select last(b v example 2 select last(b v group group1 null
  group2
  
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#list</field><field name="content">
  list description list function return array value specify field
  behavior function nest section nest invoke single field argument
  syntax list  field identifier  field
  require
  field view
  example consider follow view v b group1 group1
  group1 null group2 example
  1 select list(b v list array null example 2 select list(b v group list group1 array null group2 array
  list
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#max</field><field name="content">
  max description max function return high value field group value
  function ignore distinct modifier
  syntax max  expression  expression
  require
  expression type date deprecate type intervaldaysecond intervalyearmonth text time timestamp timestamptz numeric datum type
  return type type input expression
  field text type function compare unicode value character value
  example consider follow view v b c group1 1 virtual dataport group1 2 datum catalog group1
  null itpilot group2 4 denodo example 1 select max(b v max 4 example 2 select max(b v group max group1 2 group2 4 example 3 select max(c v max denodo example result denodo letter high unicode value value
  d = 100 v = 86 etc
  max
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#median</field><field name="content">
  median description median function return middle number field group value average middle number group number value
  function account null value calculate result
  function ignore modifier distinct
  syntax median  expression  expression
  require
  expression type date deprecate type time timestamp timestamptz numeric datum type
  example consider follow view employee d first_name start_date salary 01
  jason 25 jul-96 1234.56 02 alison 21 mar-76 6661.78 03 james 12 dec-78 6544.78 04 celia 24 oct-82 2344.78 05 robert 24 oct-82 2334.78 05 jason 30 jul-87 2224.50 example 1 select median(salary median(start_date employee median(salary median(start_date 2339.78 1983 06 05 example 2 select first_name median(salary median(start_date employee group first_name first_name median(salary median(start_date alison 6661.78 1976 03 21 celia 2344.78 1982 10 24 jame 6544.78 1978 12 12 jason 1729.53 1992 01 26 robert 2334.78 1984 01 15
  median
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#min</field><field name="content">
  min description min function return low value field group value
  function ignore distinct modifier
  syntax min  expression  expression
  require
  expression type date deprecate type intervaldaysecond intervalyearmonth text time timestamp timestamptz numeric datum type
  field text type function compare unicode value character value
  example consider follow view v b c group1 1 virtual dataport group1 2 datum catalog group1
  null itpilot group2 4 denodo example 1 select min(b v min 1 example 2 select min(b v group min group1 1 group2 4 example 3 select min(c v min data catalog example result datum catalog letter low unicode value value d = 68 d
  = 100 v = 86 etc
  min
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#nest</field><field name="content">
  nest description nest function return array value select field
  result inverse result flatten view section flatten view flatten datum structure information flatten view
  syntax nest  field identifier 
   field identifi  array nest field
  field
  equivalent pass field view function
  example consider view v int_sample text_sample register_sample 1 register hello 1 b register hello good bye 2 c register string
  string select int_sample nest(text_sample register_sample
  nest_sample v group
  int_sample int_sample nest_sample 1 array register hello b register hello good bye 2 array c register string string
  nest
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#stdev</field><field name="content">
  stdev description stdev function return sample standard deviation group value
  function account null value calculate result
  syntax stdev  expression  decimal expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region stdev(revenue revenue group region region stdev south 37709.24377832752 northeast 29016.36924794922
  stdev
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#stdevp</field><field name="content">
  stdevp description stdevp function return population standard deviation group value
  function account null value calculate result
  syntax stdevp  expression  decimal expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region stdevp(revenue revenue group region region stdevp south 30789.46861437455 northeast 23691.76628188695
  stdevp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#sum</field><field name="content">
  sum description sum function return sum non null value field group value
  syntax sum  expression  expression
  require
  numeric datum type
  return type type input expression
  example consider follow view v b group1 1 group1 2 group1 null group2 4 example 1 select sum(b v sum 7 example 2 select sum(b v group sum group1 3 group2 4
  sum
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#var</field><field name="content">
  var description var function return sample variance group value
  function account null value calculate result
  syntax var  expression  decimal expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region var(revenue revenue group
  region region
  var south 1.4219870663333333e9 northeast 8.419496843333333e8
  var
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/aggregation_functions/aggregation_functions#varp</field><field name="content">
  varp description varp function return population variance group value
  function account null value calculate result
  syntax varp  expression  double expression
  require
  numeric datum type
  example consider view sales_by_region region state revenue south alabama 53168 south missisipi 5681 south tennessee 80166 northeast new york 12945 northeast pennsylvania 69284 northeast new hampshire 53168 select region varp(revenue revenue group region region varp south 9.479913775555555e8 northeast 5.612997895555555e8
  varp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#analytic-functions</field><field name="content">
  analytic function analytic function know window function function result row derive window frame row
  function similar aggregation function calculate aggregate value base group row
  difference aggregation function return value group row analytic function return row group
  important virtual dataport delegate function database execute
  query use function delegate database query fail
  workaround execute analytic function
  analytic function support virtual dataport avg count cume_dist dense_rank first_value lag last_value lead listagg max min ntile percentile_cont percentile_disc percent_rank rank row_number sum workaround execute analytic function analytic function syntax common analytic function common syntax  clause  =  window partition clause 
   window order clause 
   windowing_frame_clause 
   window partition clause  = partition
   expression   window order clause  = order  expression  asc | desc  window_frame_clause  =  window frame unit   window_frame_preceding  |  window_frame_between   window frame unit  = row | range  window_frame_between  =  window_frame_bound   window_frame_bound   window frame bind  =  window_frame_preceding  |
   window_frame_followe   window frame precede  = unbounded precede |
   unsigned_value_specification 
  precede | current row  window frame follow  = unbounded follow |  unsigned_value_specification  follow | current row  unsigned value specification  =  unsigned integer literal  avg description avg function return average expression partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax avg  expression 
   window partition clause 
   window order clause 
   window_frame_clause  number  expression  expression calculate average
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  count description count function return number row return query
  important virtual dataport push function oracle snowflake sql server sap hana database execute
  query use function push database query fail
  workaround execute analytic function
  syntax count |  expression 
   window partition clause 
   window order clause  number  expression  indicate expression instead function return number row expression null
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  cume_dist description cume_dist function return cumulative distribution current row regard row partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax cume_dist  window partition clause 
  
   window order clause  number  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  dense_rank description
  dense_rank function return rank row window partition row base order set  window order clause 
  row group sort order clause function return number row start 1
  function return value row equal value null value consider equal
  function dense_rank rank rank row_number row_number similarity
  difference dense_rank skip rank rank
  value return row_number unique
  rank dense_rank return value equal row
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax dense_rank  window partition clause 
   window order clause  numeric  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  first_value description first_value function return value table partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax first_value  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  lag description lag function return value expression offset current row window
  use lead function section lead obtain value offset
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax lag  expression   offset number 
   default value type input expression 
   window partition clause 
   window order clause   type input expression  expression expression evaluate offset number great 0 indicate lag
  present offset 1 previous row
  default value value return offset outside bind partition
  example offset 1 function return default value row partition
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  last_value description last_value function return value table partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax last_value  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  lead description lead function return value expression offset current row window
  use lag function section lag obtain value offset
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax lead  expression   offset number 
   default value type input expression 
   window partition clause 
   window order clause   type input expression  expression expression evaluate offset number great 0 indicate lead
  present offset 1 follow row
  default value value return offset outside bind partition
  example offset 1 function return default value row partition
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  listagg description listagg function order datum group specify clause order
  concatenate value measure column
  separate value delimiter expression
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax listagg  measure expression   delimiter expression text 
  group  window order clause 
   window partition clause  text measure expression expression
  delimiter expression string separate measure value
  want separator value string
   window order clause  analytic function common syntax
   window partition clause  analytic function common syntax
  return text value
  max description max function return maximum value expression window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax max  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  min description min function return minimum value expression window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax min  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  ntile description ntile function divide order datum set partition number subset window bucket subset number 1  value 
  example  value  4 row partition assign number 1 4
  partition contain 40 row 10 assign 1 10 assign 2
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax ntile  value 
   window partition clause 
   window order clause   number   value  number subset
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  percentile_cont description percentile_cont function return row value fall specify percentile value partition window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax percentile_cont  percentile number 
  group  window order clause 
   window partition clause  percentile number 0 1  window order clause  analytic function common syntax
   window partition clause  analytic function common syntax
  percentile_disc description percentile_disc function return row value fall specify percentile value partition window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax percentile_dist  percentile number 
  group  window order clause 
   window partition clause  percentile number 0 1  window order clause  analytic function common syntax
   window partition clause  analytic function common syntax
  percent_rank description
  percent_rank function return rank row relative group value window
  similar cume_dist use rank value row count numerator
  return value 0 1 important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax percent_rank
   window partition clause 
   window order clause  number  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  rank description rank function return rank row window partition row base order set  window order clause 
  row group sort order clause function return number row start 1
  function return value row equal value null consider equal comparison
  function dense_rank dense_rank rank row_number row_number similarity
  difference dense_rank skip rank rank
  value return row_number unique
  rank dense_rank return value equal row
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax rank  window partition clause 
   window order clause  numeric  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  row_number description row_number function return rank row window partition row base order set  window order clause 
  row group sort order clause function return number row start 1
  function return value row equal value null consider equal comparison
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  function dense_rank dense_rank rank rank row_number similarity
  difference dense_rank skip rank rank
  value return row_number unique
  rank dense_rank return value equal row
  syntax row_number  window partition clause 
   window order clause  numeric  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  example select key block row_number order key row_number row_number
  partition block order key row_number_with_partition rank partition block order rank dense_rank partition block order
  dense_rank
  view order block key key block row_number row_number_with partition rank dense_rank 1 1 1 1 1 1 1 2 1 1 2 2 1 1 3 2 1 3 3 3 2 4 2 1 4 4 3 2 5 2 1 5 5 3 2 6 4 1 6 6 6 3 7 5 2 7 1 1 1 9 7 2 8 2 2 2 10 8 2 9 3 3 3 11 9 2 10 4 4 4 sum description sum function return sum expression group window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax sum  expression 
   window partition clause 
   window order clause 
   window_frame_clause  number  expression  numeric expression
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  workaround execute analytic function virtual dataport delegate analytic function database execute
  query include analytic function execution engine delegate database support query fail immediately
  common scenario occur underlie datum source query support analytic function
  example datum source rest api excel file etc
  execution engine delegate function database support
  example query apply analytic function datum come different datum source
  scenario use data movement optimization transfer datum database support analytic function parameter datamovementplan context clause example select region.r_name nation.n_name sum(order.o_totalprice rank partition region.r_name order sum(order.o_totalprice desc order inner join customer order.o_custkey = customer.c_custkey inner join nation customer.c_nationkey = nation.n_nationkey inner join region nation.n_regionkey = region.r_regionkey region.r_regionkey  0 group region.r_name nation.n_name context(datamovementplan = order jdbc admin.vdpcachedatasource customer jdbc admin.vdpcachedatasource nation jdbc admin.vdpcachedatasource region jdbc admin.vdpcachedatasource example clause datamovementplan instruct execution engine datum view involve query cache database admin.vdpcachedatasource execute analytic function
  optimizer try delegate condition function source database reduce datum transfer source cache database
  example sql query execute source obtain datum region include condition r_regionkey  0 datum source support condition
  add context clause query execute party tool e.g. business intelligence tool create view clause query new view
  example create view rank_best_selling_nation_within_region select region.r_name nation.n_name sum(order.o_totalprice rank partition region.r_name
  order sum(order.o_totalprice desc order inner join customer order.o_custkey = customer.c_custkey inner join nation customer.c_nationkey =
  nation.n_nationkey inner join region nation.n_regionkey = region.r_regionkey
  region.r_regionkey  0 group region.r_name nation.n_name context(datamovementplan = order jdbc admin.vdpcachedatasource customer jdbc admin.vdpcachedatasource nation jdbc admin.vdpcachedatasource region jdbc admin.vdpcachedatasource
  analytic function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#analytic-functions-common-syntax</field><field name="content">
  analytic function common syntax  clause  =  window partition clause 
   window order clause 
   windowing_frame_clause 
   window partition clause  = partition
   expression   window order clause  = order  expression  asc | desc  window_frame_clause  =  window frame unit   window_frame_preceding  |  window_frame_between   window frame unit  = row | range  window_frame_between  =  window_frame_bound   window_frame_bound   window frame bind  =  window_frame_preceding  |
   window_frame_followe   window frame precede  = unbounded precede |
   unsigned_value_specification 
  precede | current row  window frame follow  = unbounded follow |  unsigned_value_specification  follow | current row  unsigned value specification  =  unsigned integer literal 
  analytic function common syntax
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#avg</field><field name="content">
  avg description avg function return average expression partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax avg  expression 
   window partition clause 
   window order clause 
   window_frame_clause  number  expression  expression calculate average
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  avg
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#count</field><field name="content">
  count description count function return number row return query
  important virtual dataport push function oracle snowflake sql server sap hana database execute
  query use function push database query fail
  workaround execute analytic function
  syntax count |  expression 
   window partition clause 
   window order clause  number  expression  indicate expression instead function return number row expression null
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  count
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#cume-dist</field><field name="content">
  cume_dist description cume_dist function return cumulative distribution current row regard row partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax cume_dist  window partition clause 
  
   window order clause  number  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  cume dist
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#dense-rank</field><field name="content">
  dense_rank description
  dense_rank function return rank row window partition row base order set  window order clause 
  row group sort order clause function return number row start 1
  function return value row equal value null value consider equal
  function dense_rank rank rank row_number row_number similarity
  difference dense_rank skip rank rank
  value return row_number unique
  rank dense_rank return value equal row
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax dense_rank  window partition clause 
   window order clause  numeric  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  dense rank
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#first-value</field><field name="content">
  first_value description first_value function return value table partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax first_value  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#lag</field><field name="content">
  lag description lag function return value expression offset current row window
  use lead function section lead obtain value offset
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax lag  expression   offset number 
   default value type input expression 
   window partition clause 
   window order clause   type input expression  expression expression evaluate offset number great 0 indicate lag
  present offset 1 previous row
  default value value return offset outside bind partition
  example offset 1 function return default value row partition
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  lag
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#last-value</field><field name="content">
  last_value description last_value function return value table partition
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax last_value  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#lead</field><field name="content">
  lead description lead function return value expression offset current row window
  use lag function section lag obtain value offset
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax lead  expression   offset number 
   default value type input expression 
   window partition clause 
   window order clause   type input expression  expression expression evaluate offset number great 0 indicate lead
  present offset 1 follow row
  default value value return offset outside bind partition
  example offset 1 function return default value row partition
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  lead
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#listagg</field><field name="content">
  listagg description listagg function order datum group specify clause order
  concatenate value measure column
  separate value delimiter expression
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax listagg  measure expression   delimiter expression text 
  group  window order clause 
   window partition clause  text measure expression expression
  delimiter expression string separate measure value
  want separator value string
   window order clause  analytic function common syntax
   window partition clause  analytic function common syntax
  return text value
  listagg
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#max</field><field name="content">
  max description max function return maximum value expression window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax max  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  max
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#min</field><field name="content">
  min description min function return minimum value expression window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax min  expression 
   window partition clause 
   window order clause 
   window_frame_clause   type input expression   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  min
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#ntile</field><field name="content">
  ntile description ntile function divide order datum set partition number subset window bucket subset number 1  value 
  example  value  4 row partition assign number 1 4
  partition contain 40 row 10 assign 1 10 assign 2
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax ntile  value 
   window partition clause 
   window order clause   number   value  number subset
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  ntile
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#percentile-cont</field><field name="content">
  percentile_cont description percentile_cont function return row value fall specify percentile value partition window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax percentile_cont  percentile number 
  group  window order clause 
   window partition clause  percentile number 0 1  window order clause  analytic function common syntax
   window partition clause  analytic function common syntax
  percentile cont
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#percentile-disc</field><field name="content">
  percentile_disc description percentile_disc function return row value fall specify percentile value partition window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax percentile_dist  percentile number 
  group  window order clause 
   window partition clause  percentile number 0 1  window order clause  analytic function common syntax
   window partition clause  analytic function common syntax
  percentile disc
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#percent-rank</field><field name="content">
  percent_rank description percent_rank function return rank row relative group value window
  similar cume_dist use rank value row count numerator
  return value 0 1 important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax percent_rank
   window partition clause 
   window order clause  number  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  percent rank
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#rank</field><field name="content">
  rank description rank function return rank row window partition row base order set  window order clause 
  row group sort order clause function return number row start 1
  function return value row equal value null consider equal comparison
  function dense_rank dense_rank rank row_number row_number similarity
  difference dense_rank skip rank rank
  value return row_number unique
  rank dense_rank return value equal row
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax rank  window partition clause 
   window order clause  numeric  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  rank
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#row-number</field><field name="content">
  row_number description row_number function return rank row window partition row base order set  window order clause 
  row group sort order clause function return number row start 1
  function return value row equal value null consider equal comparison
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  function dense_rank dense_rank rank rank row_number similarity
  difference dense_rank skip rank rank
  value return row_number unique
  rank dense_rank return value equal row
  syntax row_number  window partition clause 
   window order clause  numeric  window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
  example select key block row_number order key row_number row_number
  partition block order key row_number_with_partition rank partition block order rank dense_rank partition block order
  dense_rank
  view order block key key block row_number row_number_with partition rank dense_rank 1 1 1 1 1 1 1 2 1 1 2 2 1 1 3 2 1 3 3 3 2 4 2 1 4 4 3 2 5 2 1 5 5 3 2 6 4 1 6 6 6 3 7 5 2 7 1 1 1 9 7 2 8 2 2 2 10 8 2 9 3 3 3 11 9 2 10 4 4 4
  row number
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#sum</field><field name="content">
  sum description sum function return sum expression group window
  important virtual dataport push function database execute
  query use function push database query fail
  workaround execute analytic function
  syntax sum  expression 
   window partition clause 
   window order clause 
   window_frame_clause  number  expression  numeric expression
   window partition clause  analytic function common syntax
   window order clause  analytic function common syntax
   window_frame_clause  analytic function common syntax
  sum
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#workaround-to-execute-analytic-functions</field><field name="content">
  workaround execute analytic function virtual dataport delegate analytic function database execute
  query include analytic function execution engine delegate database support query fail immediately
  common scenario occur underlie datum source query support analytic function
  example datum source rest api excel file etc
  execution engine delegate function database support
  example query apply analytic function datum come different datum source
  scenario use data movement optimization transfer datum database support analytic function parameter datamovementplan context clause example select region.r_name nation.n_name sum(order.o_totalprice rank partition region.r_name order sum(order.o_totalprice desc order inner join customer order.o_custkey = customer.c_custkey inner join nation customer.c_nationkey = nation.n_nationkey inner join region nation.n_regionkey = region.r_regionkey region.r_regionkey  0 group region.r_name nation.n_name context(datamovementplan = order jdbc admin.vdpcachedatasource customer jdbc admin.vdpcachedatasource nation jdbc admin.vdpcachedatasource region jdbc admin.vdpcachedatasource example clause datamovementplan instruct execution engine datum view involve query cache database admin.vdpcachedatasource execute analytic function
  optimizer try delegate condition function source database reduce datum transfer source cache database
  example sql query execute source obtain datum region include condition r_regionkey  0 datum source support condition
  add context clause query execute party tool e.g. business intelligence tool create view clause query new view
  example create view rank_best_selling_nation_within_region select region.r_name nation.n_name sum(order.o_totalprice rank partition region.r_name
  order sum(order.o_totalprice desc order inner join customer order.o_custkey = customer.c_custkey inner join nation customer.c_nationkey =
  nation.n_nationkey inner join region nation.n_regionkey = region.r_regionkey
  region.r_regionkey  0 group region.r_name nation.n_name context(datamovementplan = order jdbc admin.vdpcachedatasource customer jdbc admin.vdpcachedatasource nation jdbc admin.vdpcachedatasource region jdbc admin.vdpcachedatasource
  workaround execute analytic function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/analytic_functions/analytic_functions#id1</field><field name="content">
  example select region.r_name nation.n_name sum(order.o_totalprice rank partition region.r_name
  order sum(order.o_totalprice desc order inner join customer order.o_custkey = customer.c_custkey inner join nation customer.c_nationkey =
  nation.n_nationkey inner join region nation.n_regionkey = region.r_regionkey
  region.r_regionkey  0 group region.r_name nation.n_name context(datamovementplan = order jdbc admin.vdpcachedatasource customer jdbc admin.vdpcachedatasource nation jdbc admin.vdpcachedatasource region jdbc admin.vdpcachedatasource
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#conversion-functions</field><field name="content">
  conversion function conversion function transform value datum type
  conversion function array_to_stre cast createtypefromxml register array_to_stre description
  array_to_stre function convert array field string contain element array separate character
  function signature
  array surround brace   array contain array surround brace
  array contain register surround parenthesis 
  second signature user indicate character surround array inner register array
  syntax array_to_stre  separator text   array value array  text array_to_stre  separator text   array begin delimiter text   array end delimiter text   register begin delimiter text   register end delimiter text   array value array  text separator
  character separate element array
  array begin delimiter
  character place array inner array
  array end delimiter
  character place array inner array
  register begin delimiter
  character place inner register field
  register end delimiter
  character place inner register field
  example consider view v field info
  info array register subfield message register_sample
  register_sample field type register subfield key value
  info message register_sample key value virtual dataport virtual datum access layer 1 data federation 2 itpilot web integration 3 web automation 4 scheduler job scheduling 5 example 1 select array_to_stre info v
  array_to_stre virtual dataport virtual datum access layer,(1,one datum federation,(2,two itpilot web integration,(3,three web automation,(4,four scheduler job scheduling,(5,five example 2 select array_to_string
  |- -| info v array_to_stre virtual dataport virtual datum access layer |- 1 -| datum federation |- 2 -| itpilot web integration |- 3 -| web automation |- 4 -| scheduler job scheduling |- 5 -| cast description cast function convert datum datum type
  syntax 1 cast  vdp data type text   value expression  vdp data type
  require
  datum type want value convert
  value virtual dataport type value
  require
  value convert
  follow table possible type conversion
  column output type contain possible value parameter vdp data type
  type conversion permit cast function input value type type parameter value
  output type possible value vdp data type depend type input value array array text blob blob text int long float double boolean boolean text date deprecate localdate timestamp timestamptz time long date deprecate text int long float double decimal text int long float double double text int long float double float text int long float double boolean int text date deprecate localdate timestamp timestamptz long localdate text int long float double long xml register register array blob boolean decimal double float int localdate long register text time timestamp timestamptz xml date deprecate text text date deprecate timestamp timestamptz time long time text date deprecate localdate timestamp timestamptz time long timestamp text date deprecate localdate timestamp timestamptz time long timestamptz text blob xml register array xml cast boolean value integer return 1 true 0 false
  syntax 2 cast  value expression 
   sql type text  value
  require
  value convert
  sql type
  require
  ansi sql type want value convert
  type conversion ansi sql type virtual dataport type sql type virtual dataport type bit n blob bit vary n blob bool boolean bytea blob char n text character n text character vary n text date localdate decimal double decimal n double decimal n m double double precision
  double float float float4 float float8 double int2 int int4 int int8 long integer int nchar n text numeric double numeric n double numeric n m double nvarchar n text real float smallint int text text timestamp timestamp timestamp time zone timestamptz timestamptz timestamptz time time timetz time varbit blob varchar text varchar max text varchar n text remark remark 1 function cast truncate output convert value text condition meet specify sql type length target datum type
  e.g. varchar(20
  length low length input value
  example cast denodo varchar(2 return de target type specify length low length input value
  remark 2 cast boolean integer true map 1 false 0
  example example 1 select cast('blob hello
  text_to_blob_cast cast('boolean true
  text_to_boolean_cast cast('boolean 500000 long_to_boolean_cast cast('boolean 0 long_to_boolean_cast_zero cast('double 5 + 5 int_to_double_cast dual text_to blob_cast text_to boolean_cast long_to boolean_cast long_to boolean_cast int_to double_cast binary datum 5 byte true true false 10.0 example 2 consider view v column register_sample type register
  register field str type array
  register_sample str r1 r2 hello | world 3 3.70 select cast('xml register_sample v  xml version=\1.0 encoding=\utf-8 
   register   r19/r1   r21.1/r2   str  string/str   str  string here/str   /register  example 3 consider view v column array_sample type array
  array array_sample array
  array_sample str r1 r2 denodo platform 40 52.0 enterprise datum | virtualization 60 72.0 select cast('xml array_sample v  xml version=\1.0 encoding=\utf-8 
   array 
   item 
   r140/r1   r252.0/r2   str  denodo/str   str 
  platform/str   /item   item  
  r160/r1   r272.0/r2   str  enterprise/str   str  data/str   str  virtualization/str   /item   /array
   example 4 select cast('hello bit varying(20
  text_to_blob_cast cast(5 + 5 varchar(1
  int_to_text_cast cast('10 numeric text_to_int_cast dual text_to_blob cast int_to_text cast text_to_int cast binary datum 5 byte 1 10.0 note value second column truncate 10 5 + 5 1
  reason sql type indicate cast function varchar(1 maximum length 1
  cast(5 + 5 varchar(2 value second column 10
  createtypefromxml description createtypefromxml function create register array type xml datum
  type create correctly return new type
  function usually cast
  section convert xml datum virtual dataport compound type explain
  note function deprecate remove future version denodo platform
  instead create xml datum source route type variable pass xml document datum source
  syntax createtypefromxml  new type text   xml value:{xml|text  text new type
  require
  new type
  xml value
  require
  sample xml template create new type
  type value xml text
  example example 1 create new register type select createtypefromxml('bookstore_xml_type  bookstore   book category=\cooking   title lang=\en\everyday italian/title   author  giada de laurentiis/author   year2005/year   price30.00/price   /book   book category=\children   title lang=\en\harry potter/title   author  j k. rowling/author   year2005/year   price29.99/price   /book   /bookstore  dual example 2 create new array type select createtypefromxml('title_type  title   title lang=\en\xquery kick start/title   title lang=\en\learne xml/title   /title  dual register description register function create register value field view
  syntax register  field type 
   field type  register field
  field
  example consider view v int_sample text_sample register_sample 1 register hello 1 b register hello good bye 2 c register string string select register(int_sample text_sample register_sample register_sample v register_sample register 1 register hello register 1 b register hello good bye register 2 c register string string
  conversion function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#array-to-string</field><field name="content">
  array_to_stre description
  array_to_stre function convert array field string contain element array separate character
  function signature
  array surround brace   array contain array surround brace
  array contain register surround parenthesis 
  second signature user indicate character surround array inner register array
  syntax array_to_stre  separator text   array value array  text array_to_stre  separator text   array begin delimiter text   array end delimiter text   register begin delimiter text   register end delimiter text   array value array  text separator
  character separate element array
  array begin delimiter
  character place array inner array
  array end delimiter
  character place array inner array
  register begin delimiter
  character place inner register field
  register end delimiter
  character place inner register field
  example consider view v field info
  info array register subfield message register_sample
  register_sample field type register subfield key value
  info message register_sample key value virtual dataport virtual datum access layer 1 data federation 2 itpilot web integration 3 web automation 4 scheduler job scheduling 5 example 1 select array_to_stre info v
  array_to_stre virtual dataport virtual datum access layer,(1,one datum federation,(2,two itpilot web integration,(3,three web automation,(4,four scheduler job scheduling,(5,five example 2 select array_to_string
  |- -| info v array_to_stre virtual dataport virtual datum access layer |- 1 -| datum federation |- 2 -| itpilot web integration |- 3 -| web automation |- 4 -| scheduler job scheduling |- 5 -|
  array string
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#cast</field><field name="content">
  cast description cast function convert datum datum type
  syntax 1 cast  vdp data type text   value expression  vdp data type
  require
  datum type want value convert
  value virtual dataport type value
  require
  value convert
  follow table possible type conversion
  column output type contain possible value parameter vdp data type
  type conversion permit cast function input value type type parameter value
  output type possible value vdp data type depend type input value array array text blob blob text int long float double boolean boolean text date deprecate localdate timestamp timestamptz time long date deprecate text int long float double decimal text int long float double double text int long float double float text int long float double boolean int text date deprecate localdate timestamp timestamptz long localdate text int long float double long xml register register array blob boolean decimal double float int localdate long register text time timestamp timestamptz xml date deprecate text text date deprecate timestamp timestamptz time long time text date deprecate localdate timestamp timestamptz time long timestamp text date deprecate localdate timestamp timestamptz time long timestamptz text blob xml register array xml cast boolean value integer return 1 true 0 false
  syntax 2 cast  value expression 
   sql type text  value
  require
  value convert
  sql type
  require
  ansi sql type want value convert
  type conversion ansi sql type virtual dataport type sql type virtual dataport type bit n blob bit vary n blob bool boolean bytea blob char n text character n text character vary n text date localdate decimal double decimal n double decimal n m double double precision
  double float float float4 float float8 double int2 int int4 int int8 long integer int nchar n text numeric double numeric n double numeric n m double nvarchar n text real float smallint int text text timestamp timestamp timestamp time zone timestamptz timestamptz timestamptz time time timetz time varbit blob varchar text varchar max text varchar n text remark remark 1 function cast truncate output convert value text condition meet specify sql type length target datum type
  e.g. varchar(20
  length low length input value
  example cast denodo varchar(2 return de target type specify length low length input value
  remark 2 cast boolean integer true map 1 false 0
  example example 1 select cast('blob hello
  text_to_blob_cast cast('boolean true
  text_to_boolean_cast cast('boolean 500000 long_to_boolean_cast cast('boolean 0 long_to_boolean_cast_zero cast('double 5 + 5 int_to_double_cast dual text_to blob_cast text_to boolean_cast long_to boolean_cast long_to boolean_cast int_to double_cast binary datum 5 byte true true false 10.0 example 2 consider view v column register_sample type register
  register field str type array
  register_sample str r1 r2 hello | world 3 3.70 select cast('xml register_sample v  xml version=\1.0 encoding=\utf-8 
   register   r19/r1   r21.1/r2   str  string/str   str  string here/str   /register  example 3 consider view v column array_sample type array
  array array_sample array
  array_sample str r1 r2 denodo platform 40 52.0 enterprise datum | virtualization 60 72.0 select cast('xml array_sample v  xml version=\1.0 encoding=\utf-8 
   array 
   item 
   r140/r1   r252.0/r2   str  denodo/str   str 
  platform/str   /item   item  
  r160/r1   r272.0/r2   str  enterprise/str   str  data/str   str  virtualization/str   /item   /array
   example 4 select cast('hello bit varying(20
  text_to_blob_cast cast(5 + 5 varchar(1
  int_to_text_cast cast('10 numeric text_to_int_cast dual text_to_blob cast int_to_text cast text_to_int cast binary datum 5 byte 1 10.0 note value second column truncate 10 5 + 5 1
  reason sql type indicate cast function varchar(1 maximum length 1
  cast(5 + 5 varchar(2 value second column 10
  cast
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#type-conversions-permitted-with-the-cast-function</field><field name="content">
   
  type conversion permit cast function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#type-conversion-from-ansi-sql-types-and-virtual-dataport-types</field><field name="content">
   
  type conversion ansi sql type virtual dataport type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#createtypefromxml</field><field name="content">
  createtypefromxml description createtypefromxml function create register array type xml datum
  type create correctly return new type
  function usually cast
  section convert xml datum virtual dataport compound type explain
  note function deprecate remove future version denodo platform
  instead create xml datum source route type variable pass xml document datum source
  syntax createtypefromxml  new type text   xml value:{xml|text  text new type
  require
  new type
  xml value
  require
  sample xml template create new type
  type value xml text
  example example 1 create new register type select createtypefromxml('bookstore_xml_type  bookstore   book category=\cooking   title lang=\en\everyday italian/title   author  giada de laurentiis/author   year2005/year   price30.00/price   /book   book category=\children   title lang=\en\harry potter/title   author  j k. rowling/author   year2005/year   price29.99/price   /book   /bookstore  dual example 2 create new array type select createtypefromxml('title_type  title   title lang=\en\xquery kick start/title   title lang=\en\learne xml/title   /titles  dual
  createtypefromxml
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/conversion_functions/conversion_functions#register</field><field name="content">
  register description register function create register value field view
  syntax register  field type 
   field type  register field
  field
  example consider view v int_sample text_sample register_sample 1 register hello 1 b register hello good bye 2 c register string string select register(int_sample text_sample register_sample register_sample v register_sample register 1 register hello register 1 b register hello good bye register 2 c register string string
  register
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#datetime-functions</field><field name="content">
  datetime function datetime function manipulate value type intervaldaysecond intervalyearmonth localdate time timestamp timestamptz date deprecate
  execution engine evaluate function return current datetime query
  function current_date localtimestamp current_timestamp localtime
  note query use function twice occurrence delegate database evaluate denodo result function exactly
  datetime function addday addhour addminute addmonth addsecond addweek addyear current_date current_timestamp extract firstdayofmonth firstdayofweek formatdate getday
  getdayofweek getdayofyear getdaysbetween gethour getmillisecond getminute getmonth getmonthsbetween getquarter getsecond gettimeinmillis getweek getyear lastdayofmonth lastdayofweek localtime localtimestamp max min nextweekday previousweekday subtract to_date to_localdate to_time to_timestamp to_timestamptz trunc addday  
  description addday function return datetime pass parameter field day roll increment negative specify
  syntax addday  value intervaldaysecond   increment  intervaldaysecond addday  value localdate   increment  localdate addday  value timestamp   increment  timestamp addday  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addday  value date   increment  date value
  require
  datetime expression increment
  require
  increase field day
  number negative field decrease
  type expression int long
  example select time addday(time 8) v time addday 2020 06 29 19:19:41 2020 07 07 19:19:41 2020 12 31 22:59:56 2021 01 08 22:59:56 addhour description addhour function return datetime pass parameter field hour roll increment negative specify
  syntax addhour  value intervaldaysecond   increment  intervaldaysecond addhour  value time   increment  time addhour  value timestamp   increment  timestamp addhour  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addday  value date   increment  date value
  require
  datetime expression increment
  require
  increase field hour
  number negative field decrease
  type expression int long
  example select time addhour(time -2 v time addhour 2019 06 29 19:19:41 2019 06 29 17:19:41 2020 06 30 01:00:00 2020 06 29 23:00:00 addminute description addminute function return datetime pass parameter field minute roll increment negative specify
  syntax addminute  value intervaldaysecond   increment  intervaldaysecond addminute  value time   increment  time addminute  value timestamp   increment  timestamp addminute  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addminute  value date   increment  date value
  require
  datetime expression increment
  require
  increase field minute
  number negative field decrease
  type expression int long
  example select time addminute(time 10 v time addminute 2022 10 18 19:19:41 2022 10 18 19:29:41 2019 06 30 23:59:00 2019 07 01 00:09:00 addmonth description
  addmonth function return datetime pass parameter field month roll increment negative specify
  syntax addmonth  value intervalyearmonth   increment  intervalyearmonth addmonth  value localdate   increment  localdate addmonth  value timestamp   increment  timestamp addmonth  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addmonth  value date increment int  date value
  require
  datetime expression increment
  require
  increase field month
  number negative field decrease
  type expression int long
  example select time addmonth(time -12 v time addmonth 2020 06 29 19:19:41 2019 06 29 19:19:41 2021 01 08 22:59:56 2020 01 08 22:59:56 addsecond description addsecond function return datetime pass parameter field second roll increment negative specify
  syntax addsecond  value intervaldaysecond   increment  intervaldaysecond addsecond  value time   increment  time addsecond  value timestamp   increment  timestamp addsecond  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addsecond  value date   increment  date value
  require
  datetime expression increment
  require
  increase field second
  number negative field decrease
  type expression int long
  example select time addsecond(time 5 v time addsecond 2019 01 29 19:19:41 2019 01 29 19:19:46 2020 06 30 22:59:56 2020 06 30 23:00:01 addweek description
  addweek function return datetime pass parameter field week roll increment negative specify
  roll multiple 7 day
  syntax addweek  value intervaldaysecond   increment  intervaldaysecond addweek  value localdate   increment  localdate addweek  value timestamp   increment  timestamp addweek  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addweek  value date   increment  date value
  require
  datetime field increment
  require
  number time increase field day 7 day
  number negative field decrease
  0 return value unmodifie
  type expression int long
  example select time addweek(time -2 v time addweek 2019 06 29 19:19:41 2019 06 15 19:19:41 2021 01 08 22:59:56 2020 12 25 22:59:56 date roll 2 week
  roll instead roll parameter increment negative number
  addyear description addyear function return datetime pass parameter field year roll increment negative specify
  syntax addweek  value intervalyearmonth   increment  intervalyearmonth addweek  value localdate   increment  localdate addweek  value timestamp   increment  timestamp addweek  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addweek  value date   increment  date value
  require
  datetime field increment
  require
  increase field year
  number negative field decrease
  type expression int long
  example select time addyear(time 7 v time addyear 2020 01 29 19:19:41 2027 01 29 19:19:41 2021 07 28 22:59:56 2028 07 28 22:59:56 current_date description
  current_date function return localdate value represent current date
  syntax current_date localdate current_date localdate invoke function bracket
  follow example
  example select current_date current_date_1 current_date
  current_date_2 current_date_1 current_date_2 2022 10 18 2022 10 18 current_timestamp description current_timestamp function return current timestamp time zone value type timestamptz
  function invoke parenthesis
  use current_timestamp current_timestamp
  obtain current instant time different type e.g. localdate time table function obtain current datetime
  need time zone component recommend localtimestamp instead delegable database current_timestamp database support type timestamp time zone virtual dataport delegate function current_timestamp database
  syntax current_timestamp timestamptz example select current_timestamp date_and_time_now dual date_and_time_now oct 18 2022 10:03:12.186 05:00 extract description extract function extract year month day hour minute second datetime value
  syntax extract  field   value  field
  require
  follow value year return year date month return month date day return day date hour return hour date minute return minute date second return second date millisecond return millisecond date quarter return quarter date
  quarter 1 4 week return week number year
  week year 1 dow return day week sunday 0 saturday 6 doy return day year
  day year 1 value require
  datetime expression
  example example 1 select time extract(year time
  year view time year 2021 06 25 19:19:41 2021 2019 01 31 22:59:56 2019 query extract year column field result
  example 2 select sale_date sale_date extract(addday(current_date 1
  next_day view sale_date next_day 2020 06 30 1 2021 01 01 2 query extract hour datetime value return expression
  firstdayofmonth description firstdayofmonth function return datetime pass parameter field day roll day month
  datetime pass parameter day month return parameter unchanged
  syntax firstdayofmonth  value localdate  localdate firstdayofmonth  value timestamp  timestamp firstdayofmonth  value timestamptz  timestamptz deprecate signature use date deprecate type firstdayofmonth  value date  date value
  require
  example select sale_date firstdayofmonth(sale_date v sale_date firstdayofmonth 2019 06 29 19:19:41 2019 06 01 19:19:41 2021 01 08 22:59:56 2021 01 01 22:59:56 2021 01 01 22:59:56 2021 01 01 22:59:56 firstdayofweek description
  firstdayofweek function return datetime pass parameter field day roll day week
  datetime pass parameter day week return parameter unchanged
  day week depend locale view query
  example locale us_pst u.s pacific standard time zone day week sunday es_euro spain time zone day week monday
  function delegate database result depend underlie database
  i18n view advanced dialog view
  section internationalization configuration administration guide
  syntax firstdayofweek  value localdate  localdate firstdayofweek  value timestamp  timestamp firstdayofweek  value timestamptz  timestamptz deprecate signature use date deprecate type firstdayofweek  value date  date value
  require
  example select time firstdayofweek(time v time firstdayofweek wednesday jun 29 2005 19:19:41 monday jun 27 2005 19:19:41 monday jan 10 2011 22:59:56 monday jan 10 2011 22:59:56 second row day day week output function input
  formatdate description formatdate function return string contain datetime type format pattern
  function rely date time format system java
  java date time pattern virtual dataport list date time pattern java
  syntax formatdate  datetime pattern text   datetime   i18n text  text datetime pattern
  require
  pattern format datetime pass second parameter section date time pattern string information date pattern format
  order delegate function database execution engine translate pattern equivalent underlie database
  database support pattern execution engine execute function instead delegate database datetime
  require
  datetime value format
  type expression localdate time timestamp timestamptz date i18n
  optional
  internationalization configuration
  date_pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language return element
  value parameter i18n map server
  e.g. us_pst us_est gb de etc
  example example 1 select date formatdate('yyyy
  mm.dd g hh mm ss date format_date v date format_date jun 29 2005 19:19:41 2005.06.29 ad 19:19:41 jan 8 2011 22:59:56 2011.01.08 ad 22:59:56 text single quote interpret copy output
  note date_pattern contain single quote surround single quote escape quote single quote like select formatdate('yyyy
  mm.dd g hh mm ss current_timestamp
  example 2 select date formatdate('h mm date format_date v date format_date jun 29 2005 19:19:41 7:19 pm jan 8 2011 22:59:56 22:59 pm example
  3 select date formatdate('yymmddhhmmss date format_date v date format_date jun 29 2005 19:19:41 050629191941 jan 8 2011 22:59:56 110108225956 example 4 select date formatdate('mmmm eeee dd yyyy date us_pst
  format_date v date format_date jun 29 2005 19:19:41 june wednesday 29 2005 jan 8 2011 22:59:56 january saturday 8 2011 example 5 select date formatdate('mmmm eeee dd yyyy date de
  format_date v date format_date jun 29 2005 19:19:41 juni mittwoch 29 2005 jan 8 2011 22:59:56 januar samstag 08 2011 difference example 4 5 parameter i18n
  example 4 parameter us_pst function return day week month english
  example 5 i18n de function return value german
  getday description getday function return day field datetime
  function return long datum type range 1 31
  syntax getday  value intervaldaysecond  long getday  value localdate  long getday  value timestamp  long getday  value timestamptz  long deprecate signature use date deprecate type getday  value date  long value
  require
  datetime retrieve day
  example select date getday(date day v date day jun 29 2005 19:19:41 29 jan 8 2011 22:59:56 8 getdayofweek description
  getdayofweek function return number day week datetime
  day week 1 day 7
  day week depend locale view query
  example locale us_pst u.s pacific standard time zone day week sunday es_euro spain time zone day week monday
  function delegate database result depend underlie database
  e.g. oracle 11 g consider day week monday
  i18n view advanced dialog view
  section internationalization configuration administration guide
  syntax getdayofweek  value localdate  long getdayofweek  value timestamp  long getdayofweek  value timestamptz  long deprecate signature use date deprecate type getdayofweek  value date  long value
  require
  example example 1 select current_date today getdayofweek(current_date today getdayofweek 2020 12 07 2 example 2 select current_date today getdayofweek(current_date context('i18n = es_euro today getdayofweek 2020 12 07 1 difference example 1 example 2 i18n query set context clause
  add i18n parameter context query use i18n view
  getdayofyear description getdayofyear function return number day year datetime
  day year 1
  syntax getdayofyear  value localdate  long getdayofyear  value timestamp  long getdayofyear  value timestamptz  long deprecate signature use date deprecate type getdayofyear  value date  long value
  require
  example select to_localdate('dd mm yyyy 01 01 2018
  localdate getdayofyear to_localdate('dd mm yyyy 01 01 2013
  day localdate day jan 1 2018 1 getdaysbetween description getdaysbetween function return number day date
  return 0 date represent day
  return positive number parameter
  return negative number second parameter
  syntax getdaysbetween  value 1 localdate   value 2 localdate  long getdaysbetween  value 1 timestamp   value 2 timestamp  long getdaysbetween  value 1 timestamp   value 2 timestamptz  long deprecate signature use date deprecate type getdaysbetween  value date  long value 1
  require value 2
  require
  example select date1 date2 getdaysbetween(date1 date2 view date1 date2 getdaysbetween jan 1 2013 0:00:00 jan 2 2013 0:00:00 1 jan 1 2013 0:00:00 dec 31 2013 0:00:00 364 gethour description
  gethour function return hour field datetime
  function return long datum type range 0 12:00 a.m. 23 11:00 p.m.
  syntax gethour  value intervaldaysecond  long gethour  value time  long gethour  value timestamp  long gethour  value timestamptz  long deprecate signature use date deprecate type gethour  value date  long value
  require
  datetime retrieve hour
  example select date gethour(date hour v date hour jun 29 2005 19:20:41 19 getmillisecond getmillisecond function return millisecond field datetime
  syntax getmillisecond  value intervaldaysecond  long getmillisecond  value time  long getmillisecond  value timestamp  long getmillisecond  value timestamptz  long deprecate signature use date deprecate type getmillisecond  value date  long value
  require
  getminute description getminute function return minute field datetime
  function return value type long range 0 59
  syntax getminute  value intervaldaysecond  long getminute  value time  long getminute  value timestamp  long getminute  value timestamptz  long deprecate signature use date deprecate type getminute  value date  long value
  require
  datetime retrieve minute
  example select date getminute(date minute v date minute jun 29 2005 19:20:41 20 getmonth description
  getmonth function return number month year datetime
  function return long datum type range 1 january 12 december
  syntax getmonth  value intervalyearmonth  long getmonth  value localdate  long getmonth  value timestamp  long getmonth  value timestamptz  long deprecate signature use date deprecate type getmonth  value date  long datetime
  require
  datetime retrieve number month
  example select date getmonth(date month v date month jun 29 2005 19:20:41 6 getmonthsbetween description getmonthsbetween function return number month datetime
  return 0 datetime represent month
  return positive number parameter
  return negative number second parameter
  syntax getmonthsbetween  value 1 localdate   value 2 localdate  long getmonthsbetween  value 1 timestamp   value 2 timestamp  long getmonthsbetween  value 1 timestamptz   value 2 timestamptz  long deprecate signature use date deprecate type getmonthsbetween  value 1 date   value 2 date  long value 1
  require value 1
  require
  example select date1 date2 getmonthsbetween(date1 date2
  date1 date2 getmonthsbetween jan 1 2013 0:00:00 feb 1 2013 0:00:00 1 jan 1 2013 0:00:00 dec 31 2013 0:00:00 11 jan 1 2013 0:00:00 jan 15 2013 0:00:00 0 getquarter description getquarter function return quarter year datetime
  result range 1 4 1 quarter year january march 2 second april june etc
  syntax getquarter  value localdate  long getquarter  value timestamp  long getquarter  value timestamptz  long deprecate signature use date deprecate type getquarter  value date  long datetime
  require
  datetime want retrieve quarter
  example select date getquarter(date quarter v date quarter jun 29 2015 19:20:41 2 mar 1 2015 00:00:00 1 getsecond description
  getsecond function return second field datetime
  function return value type long range 0 59
  syntax getsecond  value intervaldaysecond  long getsecond  value time  long getsecond  value timestamp  long getsecond  value timestamptz  long deprecate signature use date deprecate type getsecond  value date  long value
  require
  datetime retrieve second
  example select date getsecond(date second v date second jun 29 2005 19:20:41 41 gettimeinmillis description
  gettimeinmillis function return number millisecond january 1 1970 00:00:00 gmt datetime pass parameter
  return negative number datetime prior 1970
  syntax gettimeinmillis  value localdate  long gettimeinmillis  value timestamp  long gettimeinmillis  value timestamptz  long deprecate signature use date deprecate type gettimeinmilli  value date  long value
  require
  example select date gettimeinmillis(date millisecond v date millisecond jun 29 2005 19:20:41 1120098041000 getweek description
  getweek function return week year datetime
  week year 1
  define standard iso8601 week year 4 day year
  result definition depend year day 1 year consider belong previous year
  syntax getweek  value localdate  long getweek  value timestamp  long getweek  value timestamptz  long deprecate signature use date deprecate type getweek  value date  long value
  require
  datetime want retrieve week year
  example select date getweek(date week v date week jan 01 2016 00:00:00 53 jan 10 2016 00:00:00 1 jan 11 2016 00:00:00 2 getyear description
  getyear function return year field datetime
  syntax getyear  value intervalyearmonth  long getyear  value localdate  long getyear  value timestamp  long getyear  value timestamptz  long deprecate signature use date deprecate type getyear  value date  long value
  require
  datetime retrieve year
  example select date getyear(date year dual date year jun 29 2005 19:20:41 2005 lastdayofmonth description lastdayofmonth function return datetime pass parameter field day roll day month
  date pass parameter day month return parameter unchanged
  syntax lastdayofmonth  value localdate  localdate lastdayofmonth  value timestamp  timestamp lastdayofmonth  value timestamptz  timestamptz deprecate signature use date deprecate type lastdayofmonth  value date  date value
  require
  example select time lastdayofmonth(time v time lastdayofmonth jun 30 2005 19:19:41 jun 30 2005 19:19:41 feb 12 2011 22:59:56 feb 28 2011 22:59:56 row day day month output function input
  lastdayofweek description lastdayofweek function return datetime pass parameter field day roll day week
  datetime pass parameter day week return parameter unchanged
  day week depend locale view query
  example locale us_pst u.s pacific standard time zone day week saturday es_euro spain time zone day week sunday
  function delegate database result depend underlie database
  i18n view advanced dialog view
  section internationalization configuration administration guide
  syntax lastdayofweek  value localdate  localdate lastdayofweek  value timestamp  timestamp lastdayofweek  value timestamptz  timestamptz deprecate signature use date deprecate type lastdayofweek  value date  date value
  require
  example select time lastdayofweek(time v time lastdayofweek thursday jun 30 2005 19:19:41 sunday jul 03 2005 19:19:41
  saturday dec 31 2011 22:59:56 sunday jan 1 2012 22:59:56 sunday jul 03 2005 19:19:41 sunday jul 03 2005 19:19:41 localtime description
  localtime function return value type time represent current time query time zone
  obtain current instant time different type e.g. localdate time etc table function obtain current datetime
  function invoke parenthesis
  use localtime localtime
  syntax localtime date example select localtime time_now dual time_now 04:20:00.687 localtimestamp description localtimestamp function return value type timestamp represent current date time query time zone
  obtain current instant time different type e.g. localdate time etc table function obtain current datetime
  function invoke parenthesis
  use localtimestamp localtimestamp
  syntax localtimestamp timestamp example select localtimestamp date_and_time_now dual date_and_time_now 2022 10 18 04:20:00.000 max appendix max
  min appendix min
  nextweekday description nextweekday function return datetime field day roll day week indicate parameter weekday
  parameter datetime represent day weekday function roll date day week
  day week sunday = 0 monday = 1 tuesday = 2 syntax nextweekday  value localdate   week day int  localdate nextweekday  value timestamp   week day int  timestamp nextweekday  value timestamptz   week day int  timestamptz deprecate signature use date deprecate type nextweekday  value date   week day int  date value
  require
  datetime expression
  week day
  require
  day week datetime roll
  example select time nextweekday(time 3 v time nextweekday thursday jun 30 2005 19:19:41 wednesday jul 6 2005 19:19:41 monday feb 7 2011 22:59:56 feb d 9 2011 22:59:56 wednesday feb 9 2011 9:37:02 wednesday feb 16 2011 9:37:02 description
  function return value type timestamptz represent current timestamp time zone
  equivalent current_timestamp
  current_timestamp function sql standard
  previousweekday description previousweekday function return datetime field day roll day week indicate parameter weekday
  parameter datetime represent day weekday function roll datetime day previous week
  day week sunday = 0 monday = 1 tuesday = 2 syntax previousweekday  value localdate   week day int  localdate previousweekday  value timestamp   week day int  timestamp previousweekday  value timestamptz   week day int  timestamptz deprecate signature use date deprecate type previousweekday  value date   week day int  date value
  require
  datetime expression
  week day
  require
  day week datetime roll
  example select time previousweekday(time 2 v time previousweekday thursday jun 30 2005 19:19:41 tuesday jun 28 2005 19:19:41 monday feb 7 2011 22:59:56 tuesday feb 1 2011 22:59:56 tuesday jan 4 2011 9:37:02 tuesday dec 28 2010 9:37:02 subtract subtract
  to_date description to_date function convert text value contain datetime specific format value type date represent date
  important avoid function new project deprecate remove major version denodo
  deprecate input parameter type date deprecate
  instead use to_localdate to_time to_timestamp to_timestamptz
  datetime value function section datum type date timestamp interval vql guide
  section feature deprecate denodo platform 8.0 list feature deprecate
  syntax to_date  date pattern text   value text 
   i18n text 
   timestamp boolean  date date pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain date follow pattern parameter datepattern
  i18n
  optional
  internationalization configuration
  date pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de i18n database de
  value parameter i18n map server
  e.g. us_pst us_est gb de etc timestamp
  optional
  false function set 0 field represent time hour minute second millisecond
  pass true parameter pass
  example example 1 select to_date('m dd yyyy hh mm ss 3 05 2020 21:17:05 dual to_date 2020 03 05 21:17:05 08:00 example 2 select to_date yyyymmddhhmmss 20200701102030 dual to_date 2020 07 01 10:20:30 07:00 example 3 select to_date('yyyy mm dd''t''hh mm ss.sss 2020 07 04t12:08:56.235 dual to_date 2020 07 04 12:08:56.235 07:00 example 4 select to_date('yyyy mm dd''t''hh mm ss.sss 2020 07 04t12:08:56.235 false dual to_date 2020 07 04 00:00:00 07:00 note example 3 4 define java class java.text
  simpledataformat date pattern literal surround single quote
  example t.
  single quote special character virtual dataport literal escape single quote
  date pattern example 3 4 contain t
  example 5 select date_stre to_date('mmmm eeee dd yyyy date_string de v date_stre to_date juni mittwoch 29 2019 2019 06 29 00:00:00 07:00 januar samstag 08 2021 2021 01 08 00:00:00 08:00
  example parameter i18n de function expect month mmm day week eeee date_stre german
  to_localdate description to_localdate function convert text value contain datetime specific format value type localdate represent datetime
  syntax to_localdate  localdate pattern text   value text 
   language text  localdate localdate pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain localdate follow pattern parameter localdate pattern
  language
  optional
  internationalization configuration
  localdate pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select to_localdate yyyymmdd 20200701 dual to_localdate 2020 07 01 example 2 select to_localdate('m dd yyyy hh mm ss 3 05 2020 21:17:05 dual to_localdate 2020 03 05 example 3 select to_localdate('yyyy mm dd''t''hh mm ss.sss 2020 07 04t12:08:56.235 dual to_localdate 2020 07 04 note define java class java.text
  simpledataformat date pattern literal surround single quote
  example t. single quote special character virtual dataport literal escape single quote
  date pattern contain t
  example 4 select date_stre to_localdate('mmmm eeee dd yyyy date_string de v date_string to_localdate juni mittwoch 29 2005 d jun 29 2005 januar samstag 08 2011 sit jan 08 2011
  example parameter language de function expect month mmm day week eeee date_stre german
  to_time description to_time function convert text value contain datetime specific format value type time represent time datetime
  syntax to_time  time pattern text   value text 
   language text  time time pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain datetime follow pattern parameter time pattern
  language
  optional
  internationalization configuration
  time pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select to_time hhmmss 102030 dual to_time 10:20:30 example 2
  select to_time('m dd yyyy hh mm ss 3 05 2010 21:17:05 dual to_time 21:17:05 example
  3 select to_time('yyyy mm dd''t''hh mm ss.sss 2001 07 04t12:08:56.235 dual to_time 12:08:56.235 note define java class java.text
  simpledataformat date pattern literal surround single quote
  example t. single quote special character virtual dataport literal escape single quote
  date pattern contain t
  to_timestamp description to_timestamp function convert text value contain datetime specific format value type timestamp represent datetime
  syntax to_timestamp  timestamp pattern text   value text 
   language text  timestamp timestamp pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain datetime follow pattern parameter timestamp pattern
  language
  optional
  internationalization configuration
  timestamp pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select
  to_timestamp('m dd yyyy hh
  mm ss 3 05 2020 21:17:05 dual to_timestamp 2020 03 05 21:17:05 example 2 select to_timestamp yyyymmddhhmmss 20200701102030 dual to_timestamp 2020 07 01 10:20:30 example 3 select to_timestamp('yyyy mm dd''t''hh mm ss.sss 2021 07 04t12:08:56.235 dual to_timestamp 2021 07 04
  12:08:56.235 example 4 select date_stre to_timestamp('mmmm eeee dd yyyy date_string de v date_stre to_timestamp juni mittwoch 29 01:24:58 2005 d jun 29 01:24:58.000 2005 januar samstag 08 03:15:01 2011 sit jan 08 03:15:01.000 2011
  example parameter language de function expect month mmm day week eeee date_stre german
  to_timestamptz description to_timestamptz function convert text value contain datetime specific format value type timestamptz represent datetime
  syntax to_timestamptz  timestamptz pattern text   value text 
   language text  timestamptz timestamptz pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain datetime follow pattern parameter timestamptz pattern
  language
  optional
  internationalization configuration
  timestamptz pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select to_timestamptz('m dd yyyy hh mm ss 3 05 2021 21:17:05 dual
  to_timestamptz 2021 03 05 21:17:05 08:00 example 2 select to_timestamptz yyyymmddhhmmss 20200701102030 dual to_timestamptz thu jul 01 10:20:30.000 2010 +02:00 example 3 select to_timestamptz('yyyy mm dd''t''hh mm ss.sss 2001 07 04t12:08:56.235 dual to_timestamptz 2020 07 01 10:20:30 07:00 example 4 select date_stre to_timestamptz('mmmm eeee dd yyyy date_string de v date_stre to_timestamptz juni mittwoch 29 01:24:58 2005 d jun 29 01:24:58.000 2005 +02:00 januar samstag 08 03:15:01 2011 sit jan 08 03:15:01.000 2011 +01:00 example parameter language de function expect month mmm day week eeee date_stre german
  trunc description trunc function return date pass parameter truncate specific unit measure
  function syntax function trunc(date oracle database
  parameter pattern syntax
  syntax trunc  value localdate 
   pattern text  localdate trunc  value time 
   pattern text  time trunc  value timestamp 
   pattern text  timestamp trunc  value timestamptz 
   pattern text  timestamptz deprecate signature use date deprecate type trunc  value date 
   pattern text  date value
  require
  datetime truncate
  pattern
  datetime truncate unit specify parameter
  pattern miss datetime truncate near day
  table list possible value parameter
  trunc function value pattern parameter pattern truncate unit cc scc century syyyy
  yyyy year syear
  yyy yy y year iyyy iyy iy iso year q quarter month
  mon mm rm month ww day week day year iw day week day iso year
  w day week day month ddd dd j day day
  dy d start day week hh hh12 hh24 hour mi minute example example 1 select sale_date trunc(sale_date v sale_date trunc 2021 06 29 19:19:41 2021 06 29 00:00:00 2021 01 08 22:59:56 2021 01 08 00:00:00
  parameter pattern present date truncate day
  example 2 select sale_date trunc(sale_date month v sale_date trunc 2021 06 29 19:19:41 2021 06 01 00:00:00 2021 01 08 22:59:56 2021 01 01 22:59:56 example 3 select sale_date trunc(sale_date q v sale_date trunc 2021 06 29 19:19:41 2021 04 01 00:00:00 2021 01 08 22:59:56 2021 01 01 00:00:00
  pattern q mean date truncate quarter
  datetime function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addday</field><field name="content">
  addday description addday function return datetime pass parameter field day roll increment negative specify
  syntax addday  value intervaldaysecond   increment  intervaldaysecond addday  value localdate   increment  localdate addday  value timestamp   increment  timestamp addday  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addday  value date   increment  date value
  require
  datetime expression increment
  require
  increase field day
  number negative field decrease
  type expression int long
  example select time addday(time 8) v time addday 2020 06 29 19:19:41 2020 07 07 19:19:41 2020 12 31 22:59:56 2021 01 08 22:59:56
  addday
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addhour</field><field name="content">
  addhour description addhour function return datetime pass parameter field hour roll increment negative specify
  syntax addhour  value intervaldaysecond   increment  intervaldaysecond addhour  value time   increment  time addhour  value timestamp   increment  timestamp addhour  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addday  value date   increment  date value
  require
  datetime expression increment
  require
  increase field hour
  number negative field decrease
  type expression int long
  example select time addhour(time -2 v time addhour 2019 06 29 19:19:41 2019 06 29 17:19:41 2020 06 30 01:00:00 2020 06 29 23:00:00
  addhour
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addminute</field><field name="content">
  addminute description addminute function return datetime pass parameter field minute roll increment negative specify
  syntax addminute  value intervaldaysecond   increment  intervaldaysecond addminute  value time   increment  time addminute  value timestamp   increment  timestamp addminute  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addminute  value date   increment  date value
  require
  datetime expression increment
  require
  increase field minute
  number negative field decrease
  type expression int long
  example select time addminute(time 10 v time addminute 2022 10 18 19:19:41 2022 10 18 19:29:41 2019 06 30 23:59:00 2019 07 01 00:09:00
  addminute
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addmonth</field><field name="content">
  addmonth description addmonth function return datetime pass parameter field month roll increment negative specify
  syntax addmonth  value intervalyearmonth   increment  intervalyearmonth addmonth  value localdate   increment  localdate addmonth  value timestamp   increment  timestamp addmonth  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addmonth  value date increment int  date value
  require
  datetime expression increment
  require
  increase field month
  number negative field decrease
  type expression int long
  example select time addmonth(time -12 v time addmonth 2020 06 29 19:19:41 2019 06 29 19:19:41 2021 01 08 22:59:56 2020 01 08 22:59:56
  addmonth
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addsecond</field><field name="content">
  addsecond description addsecond function return datetime pass parameter field second roll increment negative specify
  syntax addsecond  value intervaldaysecond   increment  intervaldaysecond addsecond  value time   increment  time addsecond  value timestamp   increment  timestamp addsecond  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addsecond  value date   increment  date value
  require
  datetime expression increment
  require
  increase field second
  number negative field decrease
  type expression int long
  example select time addsecond(time 5 v time addsecond 2019 01 29 19:19:41 2019 01 29 19:19:46 2020 06 30 22:59:56 2020 06 30 23:00:01
  addsecond
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addweek</field><field name="content">
  addweek description addweek function return datetime pass parameter field week roll increment negative specify
  roll multiple 7 day
  syntax addweek  value intervaldaysecond   increment  intervaldaysecond addweek  value localdate   increment  localdate addweek  value timestamp   increment  timestamp addweek  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addweek  value date   increment  date value
  require
  datetime field increment
  require
  number time increase field day 7 day
  number negative field decrease
  0 return value unmodifie
  type expression int long
  example select time addweek(time -2 v time addweek 2019 06 29 19:19:41 2019 06 15 19:19:41 2021 01 08 22:59:56 2020 12 25 22:59:56 date roll 2 week
  roll instead roll parameter increment negative number
  addweek
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#addyear</field><field name="content">
  addyear description addyear function return datetime pass parameter field year roll increment negative specify
  syntax addweek  value intervalyearmonth   increment  intervalyearmonth addweek  value localdate   increment  localdate addweek  value timestamp   increment  timestamp addweek  value timestamptz   increment  timestamptz deprecate signature use date deprecate type addweek  value date   increment  date value
  require
  datetime field increment
  require
  increase field year
  number negative field decrease
  type expression int long
  example select time addyear(time 7 v time addyear 2020 01 29 19:19:41 2027 01 29 19:19:41 2021 07 28 22:59:56 2028 07 28 22:59:56
  addyear
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#current-date</field><field name="content">
  current_date description current_date function return localdate value represent current date
  syntax current_date localdate current_date localdate invoke function bracket
  follow example
  example select current_date current_date_1 current_date
  current_date_2 current_date_1 current_date_2 2022 10 18 2022 10 18
  current date
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#current-timestamp</field><field name="content">
  current_timestamp description
  current_timestamp function return current timestamp time zone value type timestamptz
  function invoke parenthesis
  use current_timestamp current_timestamp
  obtain current instant time different type e.g. localdate time table function obtain current datetime
  need time zone component recommend localtimestamp instead delegable database current_timestamp database support type timestamp time zone virtual dataport delegate function current_timestamp database
  syntax current_timestamp timestamptz example select current_timestamp date_and_time_now dual date_and_time_now oct 18 2022 10:03:12.186 05:00
  current timestamp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#extract</field><field name="content">
  extract description extract function extract year month day hour minute second datetime value
  syntax extract  field   value  field
  require
  follow value year return year date month return month date day return day date hour return hour date minute return minute date second return second date millisecond return millisecond date quarter return quarter date
  quarter 1 4 week return week number year
  week year 1 dow return day week sunday 0 saturday 6 doy return day year
  day year 1 value require
  datetime expression
  example example 1 select time extract(year time
  year view time year 2021 06 25 19:19:41 2021 2019 01 31 22:59:56 2019 query extract year column field result
  example 2 select sale_date sale_date extract(addday(current_date 1
  next_day view sale_date next_day 2020 06 30 1 2021 01 01 2 query extract hour datetime value return expression
  extract
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#firstdayofmonth</field><field name="content">
  firstdayofmonth description firstdayofmonth function return datetime pass parameter field day roll day month
  datetime pass parameter day month return parameter unchanged
  syntax firstdayofmonth  value localdate  localdate firstdayofmonth  value timestamp  timestamp firstdayofmonth  value timestamptz  timestamptz deprecate signature use date deprecate type firstdayofmonth  value date  date value
  require
  example select sale_date firstdayofmonth(sale_date v sale_date firstdayofmonth 2019 06 29 19:19:41 2019 06 01 19:19:41 2021 01 08 22:59:56 2021 01 01 22:59:56 2021 01 01 22:59:56 2021 01 01 22:59:56
  firstdayofmonth
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#firstdayofweek</field><field name="content">
  firstdayofweek description firstdayofweek function return datetime pass parameter field day roll day week
  datetime pass parameter day week return parameter unchanged
  day week depend locale view query
  example locale us_pst u.s pacific standard time zone day week sunday es_euro spain time zone day week monday
  function delegate database result depend underlie database
  i18n view advanced dialog view
  section internationalization configuration administration guide
  syntax firstdayofweek  value localdate  localdate firstdayofweek  value timestamp  timestamp firstdayofweek  value timestamptz  timestamptz deprecate signature use date deprecate type firstdayofweek  value date  date value
  require
  example select time firstdayofweek(time v time firstdayofweek wednesday jun 29 2005 19:19:41 monday jun 27 2005 19:19:41 monday jan 10 2011 22:59:56 monday jan 10 2011 22:59:56 second row day day week output function input
  firstdayofweek
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#formatdate</field><field name="content">
  formatdate description formatdate function return string contain datetime type format pattern
  function rely date time format system java
  java date time pattern virtual dataport list date time pattern java
  syntax formatdate  datetime pattern text   datetime   i18n text  text datetime pattern
  require
  pattern format datetime pass second parameter section date time pattern string information date pattern format
  order delegate function database execution engine translate pattern equivalent underlie database
  database support pattern execution engine execute function instead delegate database datetime
  require
  datetime value format
  type expression localdate time timestamp timestamptz date i18n
  optional
  internationalization configuration
  date_pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language return element
  value parameter i18n map server
  e.g. us_pst us_est gb de etc
  example example 1 select date formatdate('yyyy
  mm.dd g hh mm ss date format_date v date format_date jun 29 2005 19:19:41 2005.06.29 ad 19:19:41 jan 8 2011 22:59:56 2011.01.08 ad 22:59:56 text single quote interpret copy output
  note date_pattern contain single quote surround single quote escape quote single quote like select formatdate('yyyy
  mm.dd g hh mm ss current_timestamp
  example 2 select date formatdate('h mm date format_date v date format_date jun 29 2005 19:19:41 7:19 pm jan 8 2011 22:59:56 22:59 pm example
  3 select date formatdate('yymmddhhmmss date format_date v date format_date jun 29 2005 19:19:41 050629191941 jan 8 2011 22:59:56 110108225956 example 4 select date formatdate('mmmm eeee dd yyyy date us_pst
  format_date v date format_date jun 29 2005 19:19:41 june wednesday 29 2005 jan 8 2011 22:59:56 january saturday 8 2011 example 5 select date formatdate('mmmm eeee dd yyyy date de
  format_date v date format_date jun 29 2005 19:19:41 juni mittwoch 29 2005 jan 8 2011 22:59:56 januar samstag 08 2011 difference example 4 5 parameter i18n
  example 4 parameter us_pst function return day week month english
  example 5 i18n de function return value german
  formatdate
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getday</field><field name="content">
  getday description getday function return day field datetime
  function return long datum type range 1 31
  syntax getday  value intervaldaysecond  long getday  value localdate  long getday  value timestamp  long getday  value timestamptz  long deprecate signature use date deprecate type getday  value date  long value
  require
  datetime retrieve day
  example select date getday(date day v date day jun 29 2005 19:19:41 29 jan 8 2011 22:59:56 8
  getday
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getdayofweek</field><field name="content">
  getdayofweek description getdayofweek function return number day week datetime
  day week 1 day 7
  day week depend locale view query
  example locale us_pst u.s pacific standard time zone day week sunday es_euro spain time zone day week monday
  function delegate database result depend underlie database
  e.g. oracle 11 g consider day week monday
  i18n view advanced dialog view
  section internationalization configuration administration guide
  syntax getdayofweek  value localdate  long getdayofweek  value timestamp  long getdayofweek  value timestamptz  long deprecate signature use date deprecate type getdayofweek  value date  long value
  require
  example example 1 select current_date today getdayofweek(current_date today getdayofweek 2020 12 07 2 example 2 select current_date today getdayofweek(current_date context('i18n = es_euro today getdayofweek 2020 12 07 1 difference example 1 example 2 i18n query set context clause
  add i18n parameter context query use i18n view
  getdayofweek
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getdayofyear</field><field name="content">
  getdayofyear description getdayofyear function return number day year datetime
  day year 1
  syntax getdayofyear  value localdate  long getdayofyear  value timestamp  long getdayofyear  value timestamptz  long deprecate signature use date deprecate type getdayofyear  value date  long value
  require
  example select to_localdate('dd mm yyyy 01 01 2018
  localdate getdayofyear to_localdate('dd mm yyyy 01 01 2013
  day localdate day jan 1 2018 1
  getdayofyear
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getdaysbetween</field><field name="content">
  getdaysbetween description getdaysbetween function return number day date
  return 0 date represent day
  return positive number parameter
  return negative number second parameter
  syntax getdaysbetween  value 1 localdate   value 2 localdate  long getdaysbetween  value 1 timestamp   value 2 timestamp  long getdaysbetween  value 1 timestamp   value 2 timestamptz  long deprecate signature use date deprecate type getdaysbetween  value date  long value 1
  require value 2
  require
  example select date1 date2 getdaysbetween(date1 date2 view date1 date2 getdaysbetween jan 1 2013 0:00:00 jan 2 2013 0:00:00 1 jan 1 2013 0:00:00 dec 31 2013 0:00:00 364
  getdaysbetween
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#gethour</field><field name="content">
  gethour description gethour function return hour field datetime
  function return long datum type range 0 12:00 a.m. 23 11:00 p.m.
  syntax gethour  value intervaldaysecond  long gethour  value time  long gethour  value timestamp  long gethour  value timestamptz  long deprecate signature use date deprecate type gethour  value date  long value
  require
  datetime retrieve hour
  example select date gethour(date hour v date hour jun 29 2005 19:20:41 19
  gethour
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getmillisecond</field><field name="content">
  getmillisecond getmillisecond function return millisecond field datetime
  syntax getmillisecond  value intervaldaysecond  long getmillisecond  value time  long getmillisecond  value timestamp  long getmillisecond  value timestamptz  long deprecate signature use date deprecate type getmillisecond  value date  long value
  require
  getmillisecond
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getminute</field><field name="content">
  getminute description getminute function return minute field datetime
  function return value type long range 0 59
  syntax getminute  value intervaldaysecond  long getminute  value time  long getminute  value timestamp  long getminute  value timestamptz  long deprecate signature use date deprecate type getminute  value date  long value
  require
  datetime retrieve minute
  example select date getminute(date minute v date minute jun 29 2005 19:20:41 20
  getminute
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getmonth</field><field name="content">
  getmonth description getmonth function return number month year datetime
  function return long datum type range 1 january 12 december
  syntax getmonth  value intervalyearmonth  long getmonth  value localdate  long getmonth  value timestamp  long getmonth  value timestamptz  long deprecate signature use date deprecate type getmonth  value date  long datetime
  require
  datetime retrieve number month
  example select date getmonth(date month v date month jun 29 2005 19:20:41 6
  getmonth
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getmonthsbetween</field><field name="content">
  getmonthsbetween description getmonthsbetween function return number month datetime
  return 0 datetime represent month
  return positive number parameter
  return negative number second parameter
  syntax getmonthsbetween  value 1 localdate   value 2 localdate  long getmonthsbetween  value 1 timestamp   value 2 timestamp  long getmonthsbetween  value 1 timestamptz   value 2 timestamptz  long deprecate signature use date deprecate type getmonthsbetween  value 1 date   value 2 date  long value 1
  require value 1
  require
  example select date1 date2 getmonthsbetween(date1 date2
  date1 date2 getmonthsbetween jan 1 2013 0:00:00 feb 1 2013 0:00:00 1 jan 1 2013 0:00:00 dec 31 2013 0:00:00 11 jan 1 2013 0:00:00 jan 15 2013 0:00:00 0
  getmonthsbetween
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getquarter</field><field name="content">
  getquarter description getquarter function return quarter year datetime
  result range 1 4 1 quarter year january march 2 second april june etc
  syntax getquarter  value localdate  long getquarter  value timestamp  long getquarter  value timestamptz  long deprecate signature use date deprecate type getquarter  value date  long datetime
  require
  datetime want retrieve quarter
  example select date getquarter(date quarter v date quarter jun 29 2015 19:20:41 2 mar 1 2015 00:00:00 1
  getquarter
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getsecond</field><field name="content">
  getsecond description getsecond function return second field datetime
  function return value type long range 0 59
  syntax getsecond  value intervaldaysecond  long getsecond  value time  long getsecond  value timestamp  long getsecond  value timestamptz  long deprecate signature use date deprecate type getsecond  value date  long value
  require
  datetime retrieve second
  example select date getsecond(date second v date second jun 29 2005 19:20:41 41
  getsecond
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#gettimeinmillis</field><field name="content">
  gettimeinmillis description gettimeinmillis function return number millisecond january 1 1970 00:00:00 gmt datetime pass parameter
  return negative number datetime prior 1970
  syntax gettimeinmillis  value localdate  long gettimeinmillis  value timestamp  long gettimeinmillis  value timestamptz  long deprecate signature use date deprecate type gettimeinmilli  value date  long value
  require
  example select date gettimeinmillis(date millisecond v date millisecond jun 29 2005 19:20:41 1120098041000
  gettimeinmillis
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getweek</field><field name="content">
  getweek description getweek function return week year datetime
  week year 1
  define standard iso8601 week year 4 day year
  result definition depend year day 1 year consider belong previous year
  syntax getweek  value localdate  long getweek  value timestamp  long getweek  value timestamptz  long deprecate signature use date deprecate type getweek  value date  long value
  require
  datetime want retrieve week year
  example select date getweek(date week v date week jan 01 2016 00:00:00 53 jan 10 2016 00:00:00 1 jan 11 2016 00:00:00 2
  getweek
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#getyear</field><field name="content">
  getyear description getyear function return year field datetime
  syntax getyear  value intervalyearmonth  long getyear  value localdate  long getyear  value timestamp  long getyear  value timestamptz  long deprecate signature use date deprecate type getyear  value date  long value
  require
  datetime retrieve year
  example select date getyear(date year dual date year jun 29 2005 19:20:41 2005
  getyear
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#lastdayofmonth</field><field name="content">
  lastdayofmonth description lastdayofmonth function return datetime pass parameter field day roll day month
  date pass parameter day month return parameter unchanged
  syntax lastdayofmonth  value localdate  localdate lastdayofmonth  value timestamp  timestamp lastdayofmonth  value timestamptz  timestamptz deprecate signature use date deprecate type lastdayofmonth  value date  date value
  require
  example select time lastdayofmonth(time v time lastdayofmonth jun 30 2005 19:19:41 jun 30 2005 19:19:41 feb 12 2011 22:59:56 feb 28 2011 22:59:56 row day day month output function input
  lastdayofmonth
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#lastdayofweek</field><field name="content">
  lastdayofweek description lastdayofweek function return datetime pass parameter field day roll day week
  datetime pass parameter day week return parameter unchanged
  day week depend locale view query
  example locale us_pst u.s pacific standard time zone day week saturday es_euro spain time zone day week sunday
  function delegate database result depend underlie database
  i18n view advanced dialog view
  section internationalization configuration administration guide
  syntax lastdayofweek  value localdate  localdate lastdayofweek  value timestamp  timestamp lastdayofweek  value timestamptz  timestamptz deprecate signature use date deprecate type lastdayofweek  value date  date value
  require
  example select time lastdayofweek(time v time lastdayofweek thursday jun 30 2005 19:19:41 sunday jul 03 2005 19:19:41
  saturday dec 31 2011 22:59:56 sunday jan 1 2012 22:59:56 sunday jul 03 2005 19:19:41 sunday jul 03 2005 19:19:41
  lastdayofweek
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#localtime</field><field name="content">
  localtime description localtime function return value type time represent current time query time zone
  obtain current instant time different type e.g. localdate time etc table function obtain current datetime
  function invoke parenthesis
  use localtime localtime
  syntax localtime date example select localtime time_now dual time_now 04:20:00.687
  localtime
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#localtimestamp</field><field name="content">
  localtimestamp description localtimestamp function return value type timestamp represent current date time query time zone
  obtain current instant time different type e.g. localdate time etc table function obtain current datetime
  function invoke parenthesis
  use localtimestamp localtimestamp
  syntax localtimestamp timestamp example select localtimestamp date_and_time_now dual date_and_time_now 2022 10 18 04:20:00.000
  localtimestamp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#max</field><field name="content">
  max appendix max
  max
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#min</field><field name="content">
  min appendix min
  min
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#nextweekday</field><field name="content">
  nextweekday description nextweekday function return datetime field day roll day week indicate parameter weekday
  parameter datetime represent day weekday function roll date day week
  day week sunday = 0 monday = 1 tuesday = 2 syntax nextweekday  value localdate   week day int  localdate nextweekday  value timestamp   week day int  timestamp nextweekday  value timestamptz   week day int  timestamptz deprecate signature use date deprecate type nextweekday  value date   week day int  date value
  require
  datetime expression
  week day
  require
  day week datetime roll
  example select time nextweekday(time 3 v time nextweekday thursday jun 30 2005 19:19:41 wednesday jul 6 2005 19:19:41 monday feb 7 2011 22:59:56 feb d 9 2011 22:59:56 wednesday feb 9 2011 9:37:02 wednesday feb 16 2011 9:37:02
  nextweekday
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#now</field><field name="content">
     description function return value type timestamptz represent current timestamp time zone
  equivalent current_timestamp
  current_timestamp function sql standard
  
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#previousweekday</field><field name="content">
  previousweekday description previousweekday function return datetime field day roll day week indicate parameter weekday
  parameter datetime represent day weekday function roll datetime day previous week
  day week sunday = 0 monday = 1 tuesday = 2 syntax previousweekday  value localdate   week day int  localdate previousweekday  value timestamp   week day int  timestamp previousweekday  value timestamptz   week day int  timestamptz deprecate signature use date deprecate type previousweekday  value date   week day int  date value
  require
  datetime expression
  week day
  require
  day week datetime roll
  example select time previousweekday(time 2 v time previousweekday thursday jun 30 2005 19:19:41 tuesday jun 28 2005 19:19:41 monday feb 7 2011 22:59:56 tuesday feb 1 2011 22:59:56 tuesday jan 4 2011 9:37:02 tuesday dec 28 2010 9:37:02
  previousweekday
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#subtract</field><field name="content">
  subtract subtract
  subtract
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#to-date</field><field name="content">
  to_date description to_date function convert text value contain datetime specific format value type date represent date
  important avoid function new project deprecate remove major version denodo
  deprecate input parameter type date deprecate
  instead use to_localdate to_time to_timestamp to_timestamptz
  datetime value function section datum type date timestamp interval vql guide
  section feature deprecate denodo platform 8.0 list feature deprecate
  syntax to_date  date pattern text   value text 
   i18n text 
   timestamp boolean  date date pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain date follow pattern parameter datepattern
  i18n
  optional
  internationalization configuration
  date pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de i18n database de
  value parameter i18n map server
  e.g. us_pst us_est gb de etc timestamp
  optional
  false function set 0 field represent time hour minute second millisecond
  pass true parameter pass
  example example 1 select to_date('m dd yyyy hh mm ss 3 05 2020 21:17:05 dual to_date 2020 03 05 21:17:05 08:00 example 2 select to_date yyyymmddhhmmss 20200701102030 dual to_date 2020 07 01 10:20:30 07:00 example 3 select to_date('yyyy mm dd''t''hh mm ss.sss 2020 07 04t12:08:56.235 dual to_date 2020 07 04 12:08:56.235 07:00 example 4 select to_date('yyyy mm dd''t''hh mm ss.sss 2020 07 04t12:08:56.235 false dual to_date 2020 07 04 00:00:00 07:00 note example 3 4 define java class java.text
  simpledataformat date pattern literal surround single quote
  example t.
  single quote special character virtual dataport literal escape single quote
  date pattern example 3 4 contain t
  example 5 select date_stre to_date('mmmm eeee dd yyyy date_string de v date_stre to_date juni mittwoch 29 2019 2019 06 29 00:00:00 07:00 januar samstag 08 2021 2021 01 08 00:00:00 08:00
  example parameter i18n de function expect month mmm day week eeee date_stre german
  date
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#to-localdate</field><field name="content">
  to_localdate description to_localdate function convert text value contain datetime specific format value type localdate represent datetime
  syntax to_localdate  localdate pattern text   value text 
   language text  localdate localdate pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain localdate follow pattern parameter localdate pattern
  language
  optional
  internationalization configuration
  localdate pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select to_localdate yyyymmdd 20200701 dual to_localdate 2020 07 01 example 2 select to_localdate('m dd yyyy hh mm ss 3 05 2020 21:17:05 dual to_localdate 2020 03 05 example 3 select to_localdate('yyyy mm dd''t''hh mm ss.sss 2020 07 04t12:08:56.235 dual to_localdate 2020 07 04 note define java class java.text
  simpledataformat date pattern literal surround single quote
  example t. single quote special character virtual dataport literal escape single quote
  date pattern contain t
  example 4 select date_stre to_localdate('mmmm eeee dd yyyy date_string de v date_string to_localdate juni mittwoch 29 2005 d jun 29 2005 januar samstag 08 2011 sit jan 08 2011
  example parameter language de function expect month mmm day week eeee date_stre german
  localdate
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#to-time</field><field name="content">
  to_time description to_time function convert text value contain datetime specific format value type time represent time datetime
  syntax to_time  time pattern text   value text 
   language text  time time pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain datetime follow pattern parameter time pattern
  language
  optional
  internationalization configuration
  time pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select to_time hhmmss 102030 dual to_time 10:20:30 example 2
  select to_time('m dd yyyy hh mm ss 3 05 2010 21:17:05 dual to_time 21:17:05 example
  3 select to_time('yyyy mm dd''t''hh mm ss.sss 2001 07 04t12:08:56.235 dual to_time 12:08:56.235 note define java class java.text
  simpledataformat date pattern literal surround single quote
  example t. single quote special character virtual dataport literal escape single quote
  date pattern contain t
  time
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#to-timestamp</field><field name="content">
  to_timestamp description to_timestamp function convert text value contain datetime specific format value type timestamp represent datetime
  syntax to_timestamp  timestamp pattern text   value text 
   language text  timestamp timestamp pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain datetime follow pattern parameter timestamp pattern
  language
  optional
  internationalization configuration
  timestamp pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select
  to_timestamp('m dd yyyy hh
  mm ss 3 05 2020 21:17:05 dual to_timestamp 2020 03 05 21:17:05 example 2 select to_timestamp yyyymmddhhmmss 20200701102030 dual to_timestamp 2020 07 01 10:20:30 example 3 select to_timestamp('yyyy mm dd''t''hh mm ss.sss 2021 07 04t12:08:56.235 dual to_timestamp 2021 07 04
  12:08:56.235 example 4 select date_stre to_timestamp('mmmm eeee dd yyyy date_string de v date_stre to_timestamp juni mittwoch 29 01:24:58 2005 d jun 29 01:24:58.000 2005 januar samstag 08 03:15:01 2011 sit jan 08 03:15:01.000 2011
  example parameter language de function expect month mmm day week eeee date_stre german
  timestamp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#to-timestamptz</field><field name="content">
  to_timestamptz description to_timestamptz function convert text value contain datetime specific format value type timestamptz represent datetime
  syntax to_timestamptz  timestamptz pattern text   value text 
   language text  timestamptz timestamptz pattern
  require
  pattern describe date time format value follow syntax define java class java.text
  simpledataformat section date time pattern string information
  order delegate function database virtual dataport translate pattern equivalent underlie database
  database support pattern execution engine virtual dataport execute function instead delegate database value
  require
  string contain datetime follow pattern parameter timestamptz pattern
  language
  optional
  internationalization configuration
  timestamptz pattern contain pattern day week eee eeee month mmm mmmm parameter indicate language function expect value
  example value contain month german value parameter de
  value parameter java language
  example example 1 select to_timestamptz('m dd yyyy hh mm ss 3 05 2021 21:17:05 dual
  to_timestamptz 2021 03 05 21:17:05 08:00 example 2 select to_timestamptz yyyymmddhhmmss 20200701102030 dual to_timestamptz thu jul 01 10:20:30.000 2010 +02:00 example 3 select to_timestamptz('yyyy mm dd''t''hh mm ss.sss 2001 07 04t12:08:56.235 dual to_timestamptz 2020 07 01 10:20:30 07:00 example 4 select date_stre to_timestamptz('mmmm eeee dd yyyy date_string de v date_stre to_timestamptz juni mittwoch 29 01:24:58 2005 d jun 29 01:24:58.000 2005 +02:00 januar samstag 08 03:15:01 2011 sit jan 08 03:15:01.000 2011 +01:00 example parameter language de function expect month mmm day week eeee date_stre german
  timestamptz
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#trunc</field><field name="content">
  trunc description trunc function return date pass parameter truncate specific unit measure
  function syntax function trunc(date oracle database
  parameter pattern syntax
  syntax trunc  value localdate 
   pattern text  localdate trunc  value time 
   pattern text  time trunc  value timestamp 
   pattern text  timestamp trunc  value timestamptz 
   pattern text  timestamptz deprecate signature use date deprecate type trunc  value date 
   pattern text  date value
  require
  datetime truncate
  pattern
  datetime truncate unit specify parameter
  pattern miss datetime truncate near day
  table list possible value parameter
  trunc function value pattern parameter pattern truncate unit cc scc century syyyy
  yyyy year syear
  yyy yy y year iyyy iyy iy iso year q quarter month
  mon mm rm month ww day week day year iw day week day iso year
  w day week day month ddd dd j day day
  dy d start day week hh hh12 hh24 hour mi minute example example 1 select sale_date trunc(sale_date v sale_date trunc 2021 06 29 19:19:41 2021 06 29 00:00:00 2021 01 08 22:59:56 2021 01 08 00:00:00
  parameter pattern present date truncate day
  example 2 select sale_date trunc(sale_date month v sale_date trunc 2021 06 29 19:19:41 2021 06 01 00:00:00 2021 01 08 22:59:56 2021 01 01 22:59:56 example 3 select sale_date trunc(sale_date q v sale_date trunc 2021 06 29 19:19:41 2021 04 01 00:00:00 2021 01 08 22:59:56 2021 01 01 00:00:00
  pattern q mean date truncate quarter
  trunc
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/datetime_functions/datetime_functions#trunc-function-values-of-the-pattern-parameter</field><field name="content">
   
  trunc function value pattern parameter
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/json_functions/json_functions#json-functions</field><field name="content">
  json function  
  json function create transform value type json
  json function jsonpath jsonpath description jsonpath function return node json document select jsonpath expression jsonpath api
  jsonpath expression similar xpath expression xml document
  function useful deal json format datum datum source allow filter information different expression facilitate access datum
  syntax jsonpath  json document text   jsonpath expression text  text json document
  require
  literal contain json document want apply jsonpath expression
  jsonpath expression
  require
  jsonpath expression
  example example 1 select jsonpath store book category\:\reference author\:\nigel ree title\:\saying century price\:8.95 category\:\fiction author\:\evelyn waugh title\:\sword honour price\:12.99 category\:\fiction author\:\herman melville title\:\moby dick isbn\:\0 553 21311 3 price\:8.99 $ .store author jsonpath_result dual jsonpath_result
  nigel rees evelyn waugh herman melville example 2 select jsonpath store book category\:\reference author\:\nigel ree title\:\saying century price\:8.95 category\:\fiction author\:\evelyn waugh title\:\sword honour price\:12.99 category\:\fiction author\:\herman melville title\:\moby dick isbn\:\0 553 21311 3 price\:8.99 $ .store.book[?(@.price  10 jsonpath_result dual jsonpath_result category reference author nigel ree title say century price 8.95 category fiction author herman melville title moby dick isbn 0 553 21311 3 price 8.99 select jsonpath store book category\:\reference author\:\nigel ree title\:\saying century price\:8.95 category\:\fiction author\:\evelyn waugh title\:\sword honour price\:12.99 category\:\fiction author\:\herman melville title\:\moby dick isbn\:\0 553 21311 3 price\:8.99 $ book.length jsonpath_result dual jsonpath_result 3 example use json value contain information store contain book
     example 1 author book store
     example 2 book price 10
     example 3 number book store
  json function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/json_functions/json_functions#jsonpath</field><field name="content">
  jsonpath description jsonpath function return node json document select jsonpath expression jsonpath api
  jsonpath expression similar xpath expression xml document
  function useful deal json format datum datum source allow filter information different expression facilitate access datum
  syntax jsonpath  json document text   jsonpath expression text  text json document
  require
  literal contain json document want apply jsonpath expression
  jsonpath expression
  require
  jsonpath expression
  example example 1 select jsonpath store book category\:\reference author\:\nigel ree title\:\saying century price\:8.95 category\:\fiction author\:\evelyn waugh title\:\sword honour price\:12.99 category\:\fiction author\:\herman melville title\:\moby dick isbn\:\0 553 21311 3 price\:8.99 $ .store author jsonpath_result dual jsonpath_result
  nigel rees evelyn waugh herman melville example 2 select jsonpath store book category\:\reference author\:\nigel ree title\:\saying century price\:8.95 category\:\fiction author\:\evelyn waugh title\:\sword honour price\:12.99 category\:\fiction author\:\herman melville title\:\moby dick isbn\:\0 553 21311 3 price\:8.99 $ .store.book[?(@.price  10 jsonpath_result dual jsonpath_result category reference author nigel ree title say century price 8.95 category fiction author herman melville title moby dick isbn 0 553 21311 3 price 8.99 select jsonpath store book category\:\reference author\:\nigel ree title\:\saying century price\:8.95 category\:\fiction author\:\evelyn waugh title\:\sword honour price\:12.99 category\:\fiction author\:\herman melville title\:\moby dick isbn\:\0 553 21311 3 price\:8.99 $ book.length jsonpath_result dual jsonpath_result 3 example use json value contain information store contain book
     example 1 author book store
     example 2 book price 10
     example 3 number book store
  jsonpath
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#numeric-functions</field><field name="content">
  numeric function numeric function apply value type decimal int long float double
  general function accept numeric argument different type type result generic type
  instance addition int value double value return double value
  numeric function abs acos asin atan
  atan2 ceil cos cot degree div exp floor ln log max min mod mult pi power radians rand round sign sin sqrt subtract sum tan trunc abs description
  ab function return absolute value number
  syntax ab  value numeric  numeric value
  require
  number absolute value calculate
  example select abs(-5 absolute_value dual absolute_value 5
  acos description acos function return arc cosine angle
  input number -1.0 +1.0
  syntax acos  value numeric  double value
  require
  value type decimal
  example select acos(0 acos(-1 acos(1 aco acos_1 acos_2 1.57 3.14 0.0 asin description
  asin function return arc sine angle
  input number -1.0 +1.0
  syntax asin  value numeric  double value
  require
  value type decimal
  example select asin(0 asin(1 asin(-1 asin asin_1 asin_2 0.0 1.57 -1.57 atan description
  atan function return arc tangent angle
  input number -1.0 +1.0
  syntax atan  value numeric  double value
  require
  value type decimal
  example select radians(90 atan(radians(-90 atan(radians(90
  radian atan atan_1 1.57 -1.0 1.0 note function radian convert angle degree radian
  function section radian
  atan2 description atan2 function convert rectangular coordinate x y polar r theta
  compute phase theta compute arc tangent y x range -pi + pi
  syntax atan2  x numeric   y numeric):double x. require
  y. require x y value type decimal
  ceil description ceil function return small integer argument
  syntax ceil  value decimal  long ceil  value int  int ceil  value long  long value
  require
  value round
  example select ceil(5.08 ceil_value dual
  ceil_value 6 cos description
  cos function return cosine angle radian
  output double value -1.0 +1.0
  syntax cos  angle numeric  double angle
  require
  value type decimal
  example select cos(0 cos(radians(180
  cos cos_1 1.0 -1.0 cot description cot function return cotangent angle radian
  syntax cot  angle numeric  double angle
  require
  example select cot radian 45 cot 1.0 degree description
  degree function angle radian return correspond angle degree
  syntax degree  angle numeric  double angle
  require
  value type decimal
  example select degrees(0 degrees(3.15 2 degree degrees_1
  0.0 360.96 div description div function divide number
  syntax div  dividend numeric   divisor numeric  numeric dividend
  require
  dividend operation divisor
  require
  divisor operation
  example example 1 select div(10 2.5 div_value dual div_value 4.0 example 2 select 10 cast('double 2 div_value dual div_value 5.0 exp description exp function return exponential value number
  syntax exp  value numeric  double value
  require
  example select exp(0 exp(1
  exp exp_1 1.0 2.72 floor description floor function return large integer great argument
  syntax floor  value decimal  long floor  value int  int floor  value long  long value
  require
  value round
  example select floor(5.98 floor_value dual floor_value 5 ln description
  ln function return natural logarithm base e value
  syntax ln  value numeric  double value
  require
  value type decimal
  example select ln exp 0 ln exp(1
  dual ln ln_1 0.0 1.0 log description log function return logarithm number
  syntax log  value numeric 
   base numeric  double value
  require
  positive real number want logarithm
  value type decimal base
  optional
  present function return logarithm number base
  example select log(100 log(100 10
  dual log log_1 2.0 2.0 max description max function return maximum value list argument
  return null argument null
  syntax max  value 1 numeric   value 2 numeric 
   value n numeric  numeric value 1
  require value 2
  require value n. optional
  value
  example select max(5 10 3.2 max_value dual max_value 10.0 note previous version denodo function return null argument null
  restore behavior previous version execute command vql shell set com.denodo.vdb.catalog.view.functions.max_min.ignorenullvaluesforcomparisons'='true change apply immediately
  need restart
  min description min function return minimum value list argument
  return null argument null
  syntax min  value 1 numeric 
   value n numeric  numeric value 1
  require value n. optional
  value
  example select min(5 10 3.2 min_value dual min_value 3.2 note previous version denodo function min return null argument null
  restore behavior execute set com.denodo.vdb.catalog.view.functions.max_min.ignorenullvaluesforcomparisons'='true mod description
  mod function return result module operation remainder integer division second argument
  function infix version operator
  syntax mod  dividend decimal   divisor decimal  decimal mod  dividend double   divisor double  double mod  dividend float   divisor float  double mod  dividend int   divisor int  int mod  dividend long   divisor int  int mod  dividend long   divisor long  long dividend
  require divisor
  require
  example consider follow view v int_sample long_sample 1 10 -4 -55 8 70 view modview create command example 1 create view mod_view select int_sample mod(int_sample 2 s1 long_sample mod(long_sample 2 s2 v select mod_view int_sample s1 long_sample s2 1 1 10 0 -4 0 -55 -1 8 0 70 0 example 2 select 10%2 mod_view mod 0 0 0 mult description
  mult function multiply argument
  syntax mult  value 1 numeric   value 2 numeric 
   value n numeric  numeric value 1
  require
  number multiply value 2
  require
  second number multiply
  value n. optional
  argument multiply
  example example 1 select mult(10 2.5 mult_value dual mult_value 25.0 example 2 select 10 2.5 mult_value dual mult_value 25.0 pi description pi function return pi number precision double
  syntax pi():double example select pi pi_constant dual pi_constant 3.141592653589793 power description
  power function return result number raise power
  syntax power  base numeric   exponent double  double base
  require
  base number exponent
  require
  exponent base number raise consider base value type decimal exponent value type integer
     base and/or exponent null function return null
     base 0 exponent negative function return infinity
     base   exponent 0 function return 1
     base 0 exponent positive function return 0
     base negative exponent integer result equal result raise absolute value base   exponent
     exponent odd integer result negative result raise absolute value base   exponent
     exponent integer result nan
  example select power(5 2 power_value dual power_value 25 radian description radian function angle degree return correspond angle radian
  syntax radian  angle numeric  double angle
  require
  value type decimal
  example select radians(0 radians(360 radian radians_1
  0.0 6.28 rand description rand function return random value zero
  syntax receive parameter
  example consider view v int_sample 1 -4 8 select int_sample int_sample rand
  random v int_sample random -4 -3.551409143605859 1 0.6443357973998833 8 1.5061178485934867
  round description round function return number round specify number place right leave decimal place
  syntax round  value numeric n integer numeric value
  require
  value round
  n. optional
  n omit value round 0 place
  argument int type return int value
  argument long type float double return long value
  n negative value round digit leave decimal point
  case function return value type value parameter
  i.e. type value int return int value float return float value etc
  example select round(5.98 round(7.08733 2 round(315.28 -2 dual round round_1 round_2 6 7.09 300.0 sign description sign function return -1 0 1 depend value negative zero positive respectively
  use function know sign number
  syntax sign  value numeric  int value
  require
  null function return null
  example select sign(100 sign(-50 sign sign_1 1 -1 sin description
  sin function return sine angle radian
  output double value -1.0 +1.0
  syntax sin  angle numeric  double angle
  require
  value type decimal
  example select sin(0 sin(radians(90 sin sin_1 0.0 1.0 sqrt description sqrt function return positive square root
  syntax sqrt  value numeric  double value
  require
  number want square root
  value type decimal
  example select sqrt(25 sqrt_value dual sqrt_value
  5.0 subtract description subtract function subtract number datetime type value
  subtract value type localdate timestamp timestamptz date number day second date date
  date belong day function return 0 time different
  subtract value type time function return number millisecond value
  function provide infix notation
  i.e. subtract(a b equivalent b. syntax subtract  value 1 numeric   value 2 numeric  numeric subtract  value 1 localdate   value 2 localdate  long subtract  value 1 timestamp   value 2 timestamp  long subtract  value 1 timestamptz   value 2 timestamptz  long subtract  value 1 time   value 2 time  long subtract  value 1 date   value 2 date  long value 1
  require
  value subtract value 2
  require
  second value subtract
  example example 1 select subtract(10 2.5 subtract_value dual subtract_value 7.5 example 2 select 10 cast('int 2.5
  subtract_value dual subtract_value 8 example 3 select subtract date 2015 01 02 date 2015 01 01 value_1 subtract timestamp 2015 01 01 01:00 timestamp 2015 01 01 08:00 value_2 value_1 value_2 1 0 sum description sum function add argument
  syntax sum  value1 numeric value2 numeric valuen numeric numeric value1
  require
  number add value2
  require
  second number add
  valuen optional
  argument add
  example example 1 select sum(1 cast('double 2.5 4.6 sum_value dual sum_value 8.1 example 2 select 1 + cast('int 2.9 + 4.6 sum_value dual sum_value 7.6 tan tan function return tangent angle radian
  syntax tan  angle numeric  double angle
  require
  example select tan(0 tan(radians(45 tan tan_1 0.0 1.0 trunc trunc function return integer number
  syntax trunc  value numeric  long value
  require
  example select trunc(1 trunc(2.8 trunc(-3.9 trunc trunc_1 trunc_2 1 2 -3
  numeric function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#abs</field><field name="content">
  ab description ab function return absolute value number
  syntax ab  value numeric  numeric value
  require
  number absolute value calculate
  example select abs(-5 absolute_value dual absolute_value 5
  ab
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#acos</field><field name="content">
  acos description acos function return arc cosine angle
  input number -1.0 +1.0
  syntax acos  value numeric  double value
  require
  value type decimal
  example select acos(0 acos(-1 acos(1 aco acos_1 acos_2 1.57 3.14 0.0
  acos
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#asin</field><field name="content">
  asin description asin function return arc sine angle
  input number -1.0 +1.0
  syntax asin  value numeric  double value
  require
  value type decimal
  example select asin(0 asin(1 asin(-1 asin asin_1 asin_2 0.0 1.57 -1.57
  asin
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#atan</field><field name="content">
  atan description atan function return arc tangent angle
  input number -1.0 +1.0
  syntax atan  value numeric  double value
  require
  value type decimal
  example select radians(90 atan(radians(-90 atan(radians(90
  radian atan atan_1 1.57 -1.0 1.0 note function radian convert angle degree radian
  function section radian
  atan
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#atan2</field><field name="content">
  atan2 description atan2 function convert rectangular coordinate x y polar r theta
  compute phase theta compute arc tangent y x range -pi + pi
  syntax atan2  x numeric   y numeric):double x. require
  y. require x y value type decimal
  atan2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#ceil</field><field name="content">
  ceil description ceil function return small integer argument
  syntax ceil  value decimal  long ceil  value int  int ceil  value long  long value
  require
  value round
  example select ceil(5.08 ceil_value dual ceil_value 6
  ceil
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#cos</field><field name="content">
  cos description cos function return cosine angle radian
  output double value -1.0 +1.0
  syntax cos  angle numeric  double angle
  require
  value type decimal
  example select cos(0 cos(radians(180
  cos cos_1 1.0 -1.0
  cos
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#cot</field><field name="content">
  cot description cot function return cotangent angle radian
  syntax cot  angle numeric  double angle
  require
  example select cot radian 45 cot 1.0
  cot
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#degrees</field><field name="content">
  degree description degree function angle radian return correspond angle degree
  syntax degree  angle numeric  double angle
  require
  value type decimal
  example select degrees(0 degrees(3.15 2 degree degrees_1 0.0 360.96
  degree
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#div</field><field name="content">
  div description div function divide number
  syntax div  dividend numeric   divisor numeric  numeric dividend
  require
  dividend operation divisor
  require
  divisor operation
  example example 1 select div(10 2.5 div_value dual div_value 4.0 example 2 select 10 cast('double 2 div_value dual div_value 5.0
  div
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#exp</field><field name="content">
  exp description exp function return exponential value number
  syntax exp  value numeric  double value
  require
  example select exp(0 exp(1
  exp exp_1 1.0 2.72
  exp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#floor</field><field name="content">
  floor description floor function return large integer great argument
  syntax floor  value decimal  long floor  value int  int floor  value long  long value
  require
  value round
  example select floor(5.98 floor_value dual floor_value 5
  floor
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#ln</field><field name="content">
  ln description ln function return natural logarithm base e value
  syntax ln  value numeric  double value
  require
  value type decimal
  example select ln exp 0 ln exp(1
  dual ln ln_1
  0.0 1.0
  ln
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#log</field><field name="content">
  log description log function return logarithm number
  syntax log  value numeric 
   base numeric  double value
  require
  positive real number want logarithm
  value type decimal base
  optional
  present function return logarithm number base
  example select log(100 log(100 10
  dual log log_1 2.0 2.0
  log
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#max</field><field name="content">
  max description max function return maximum value list argument
  return null argument null
  syntax max  value 1 numeric   value 2 numeric 
   value n numeric  numeric value 1
  require value 2
  require value n. optional
  value
  example select max(5 10 3.2 max_value dual max_value 10.0 note previous version denodo function return null argument null
  restore behavior previous version execute command vql shell set com.denodo.vdb.catalog.view.functions.max_min.ignorenullvaluesforcomparisons'='true change apply immediately
  need restart
  max
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#min</field><field name="content">
  min description min function return minimum value list argument
  return null argument null
  syntax min  value 1 numeric 
   value n numeric  numeric value 1
  require value n. optional
  value
  example select min(5 10 3.2 min_value dual min_value 3.2 note previous version denodo function min return null argument null
  restore behavior execute set com.denodo.vdb.catalog.view.functions.max_min.ignorenullvaluesforcomparisons'='true
  min
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#mod</field><field name="content">
  mod description mod function return result module operation remainder integer division second argument
  function infix version operator
  syntax mod  dividend decimal   divisor decimal  decimal mod  dividend double   divisor double  double mod  dividend float   divisor float  double mod  dividend int   divisor int  int mod  dividend long   divisor int  int mod  dividend long   divisor long  long dividend
  require divisor
  require
  example consider follow view v int_sample long_sample 1 10 -4 -55 8 70 view modview create command example 1 create view mod_view select int_sample mod(int_sample 2 s1 long_sample mod(long_sample 2 s2 v select mod_view int_sample s1 long_sample s2 1 1 10 0 -4 0 -55 -1 8 0 70 0 example 2 select 10%2 mod_view mod 0 0 0
  mod
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#id1</field><field name="content">
  example 1 create view mod_view select int_sample mod(int_sample 2 s1 long_sample mod(long_sample 2 s2 v
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#mult</field><field name="content">
  mult description mult function multiply argument
  syntax mult  value 1 numeric   value 2 numeric 
   value n numeric  numeric value 1
  require
  number multiply value 2
  require
  second number multiply
  value n. optional
  argument multiply
  example example 1 select mult(10 2.5 mult_value dual mult_value 25.0 example 2 select 10 2.5 mult_value dual mult_value 25.0
  mult
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#pi</field><field name="content">
  pi description pi function return pi number precision double
  syntax pi():double example select pi pi_constant dual pi_constant 3.141592653589793
  pi
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#power</field><field name="content">
  power description power function return result number raise power
  syntax power  base numeric   exponent double  double base
  require
  base number exponent
  require
  exponent base number raise consider base value type decimal exponent value type integer
     base and/or exponent null function return null
     base 0 exponent negative function return infinity
     base   exponent 0 function return 1
     base 0 exponent positive function return 0
     base negative exponent integer result equal result raise absolute value base   exponent
     exponent odd integer result negative result raise absolute value base   exponent
     exponent integer result nan
  example select power(5 2 power_value dual power_value 25
  power
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#radians</field><field name="content">
  radian description radian function angle degree return correspond angle radian
  syntax radian  angle numeric  double angle
  require
  value type decimal
  example select radians(0 radians(360 radian radians_1 0.0 6.28
  radian
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#rand</field><field name="content">
  rand description rand function return random value zero
  syntax receive parameter
  example consider view v int_sample 1 -4 8 select int_sample int_sample rand
  random v int_sample random -4 -3.551409143605859 1 0.6443357973998833 8 1.5061178485934867
  rand
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#round</field><field name="content">
  round description round function return number round specify number place right leave decimal place
  syntax round  value numeric n integer numeric value
  require
  value round
  n. optional
  n omit value round 0 place
  argument int type return int value
  argument long type float double return long value
  n negative value round digit leave decimal point
  case function return value type value parameter
  i.e. type value int return int value float return float value etc
  example select round(5.98 round(7.08733 2 round(315.28 -2 dual round round_1 round_2 6 7.09 300.0
  round
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#sign</field><field name="content">
  sign description sign function return -1 0 1 depend value negative zero positive respectively
  use function know sign number
  syntax sign  value numeric  int value
  require
  null function return null
  example select sign(100 sign(-50 sign sign_1 1 -1
  sign
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#sin</field><field name="content">
  sin description sin function return sine angle radian
  output double value -1.0 +1.0
  syntax sin  angle numeric  double angle
  require
  value type decimal
  example select sin(0 sin(radians(90 sin sin_1 0.0 1.0
  sin
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#sqrt</field><field name="content">
  sqrt description sqrt function return positive square root
  syntax sqrt  value numeric  double value
  require
  number want square root
  value type decimal
  example select sqrt(25 sqrt_value dual sqrt_value 5.0
  sqrt
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#subtract</field><field name="content">
  subtract description subtract function subtract number datetime type value
  subtract value type localdate timestamp timestamptz date number day second date date
  date belong day function return 0 time different
  subtract value type time function return number millisecond value
  function provide infix notation
  i.e. subtract(a b equivalent b. syntax subtract  value 1 numeric   value 2 numeric  numeric subtract  value 1 localdate   value 2 localdate  long subtract  value 1 timestamp   value 2 timestamp  long subtract  value 1 timestamptz   value 2 timestamptz  long subtract  value 1 time   value 2 time  long subtract  value 1 date   value 2 date  long value 1
  require
  value subtract value 2
  require
  second value subtract
  example example 1 select subtract(10 2.5 subtract_value dual subtract_value 7.5 example 2 select 10 cast('int 2.5
  subtract_value dual subtract_value 8 example 3 select subtract date 2015 01 02 date 2015 01 01 value_1 subtract timestamp 2015 01 01 01:00 timestamp 2015 01 01 08:00 value_2 value_1 value_2 1 0
  subtract
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#sum</field><field name="content">
  sum description sum function add argument
  syntax sum  value1 numeric value2 numeric valuen numeric numeric value1
  require
  number add value2
  require
  second number add
  valuen optional
  argument add
  example example 1 select sum(1 cast('double 2.5 4.6 sum_value dual sum_value 8.1 example 2 select 1 + cast('int 2.9 + 4.6 sum_value dual sum_value 7.6
  sum
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#tan</field><field name="content">
  tan tan function return tangent angle radian
  syntax tan  angle numeric  double angle
  require
  example select tan(0 tan(radians(45 tan tan_1 0.0 1.0
  tan
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/numeric_functions/numeric_functions#trunc</field><field name="content">
  trunc trunc function return integer number
  syntax trunc  value numeric  long value
  require
  example select trunc(1 trunc(2.8 trunc(-3.9 trunc trunc_1 trunc_2 1 2 -3
  trunc
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#other-functions</field><field name="content">
  function function coalesce contextualsummary getsession hash is_projected_field map nullif rownum coalesce description coalesce function return non null argument
  coalesce equivalent expression case arg1 null arg1
  arg2 null arg2 end syntax coalesce  field identifi   field identifier 
   field identifier  field
  text field null
  example consider view v b c 10.10 text 21 ene-2005 0h 0 m 0s -80.10 text $ need 12 mar-2005 12h 30 m 0s 20.50 text live 01 feb-2006 16h 45 m 0s
  40.05 null null example 1 select coalesce(b hello v coalesce text text $ need text live hello example 2 select coalesce('hello bye v coalesce hello hello hello hello example
  3 select coalesce(b v coalesce text text $ need text live 40.05 contextualsummary description contextualsummary function return relevant text fragment text contain word sentence specify
  syntax contextualsummary  "content" text   keyword text   begin delim text   end delim text   fragment separator text   fragment length int 
   max fragment number int 
   analyzer text 
  "content" require
  text relevant fragment extract keyword
  require
  keyword extract text fragment
  "content" argument single word sentence
  begin delim optional
  text add prefix keyword appear text
  default value   
  end delim optional
  text add suffix keyword appear text
  default value  fragment separator
  optional
  text separate text fragment result
  default value  
  fragment length optional
  approximate number character appear keyword occurrence inside text
  default value 5 max fragment number
  optional
  maximum number fragment retrieve analyzer optional
  analyzer search keyword
  default standard analyzer std
  analyzer consider lemmatization stopword
  virtual dataport include analyzer english en spanish es
  example example 1 select contextualsummary("content" denodo  b   /b  5 1 demo_arn_view query return fragment text "content" denodo word appear
  example 2 consider follow view text_summary_sample
  text_sample web service webservice define w3c software system design support interoperable machine machine interaction network
  interface describe machine processable format specifically web service description language wsdl
  system interact web service manner prescribe description soap message typically convey http xml serialization conjunction web relate standard
  web service frequently internet application programming interface api access network internet execute remote system host request service
  approach nearly functionality web service object management group omg common object request broker architecture corba microsoft distribute component object model dcom sun microsystems java remote method invocation rmi
  select contextualsummary(text_sample system text_summary_sample contextualsummary system system example 3 select contextualsummary(text_sample service text_summary_sample contextualsummary service service example 4 select contextualsummary(text_sample web 25 text_summary_sample contextualsummary web/ service specifically web/ service web/ service web/-relate web/ service getsession description getsession function provide information session establish virtual dataport server
  syntax getsession  parameter literal  parameter follow value return function depend parameter user function return user current user
  useragent function return user agent associate current user connection
  database function return virtual dataport database client connect i18n function return i18n internationalization configuration database client connect role function return array effective role assign current user
  effective role role assign directly indirectly user
  example user1 role   assign role   role b assign function return  b
  example select getsession('user
  || || getsession('database user_name dual user_name user1@denodo_samples_db hash description hash function calculate digest input value algorithm md5 return encode base64 base 16
  input function return value
  return null input parameter null
  syntax hash  value text  text value require
  field literal
  example select hash('text value hash_value hash(null null_value dual hash_value null_value env9llzhj1lex1ztvwnajg== null is_projected_field description
  is_projected_field function return true field pass parameter project i.e. field select statement query
  false
  syntax is_projected_field  field literal  boolean field
  require
  field exact case field
  function return false parameter null
  example consider follow view item item price 3.45 b 9.99 c 4.99 example 1 select item is_projected_field('item item item is_projected_field true b true c true example 2 select sum(price total is_projected_field('price item total is_projected_field 18.43 true example is_projected_field return true field price project query apply function field
  example 3 select item is_projected_field('price item item is_projected_field false b false c false
  example is_projected_field return false query project field price
  example 4 select item field1 is_projected_field('field1 item field1 is_projected_field false b false c false
  example is_projected_field return false function check field view project alia field
  map description map function return value associate key
  pair key value obtain view map section define map
  key exist function return null
  possible signature syntax 1 map  key text   view text   key field text   value field text 
  obtain value associate key
  map search value key column view
  key
  require
  value search view
  view
  require
  view contain key value
  key field
  require
  column view contain key value field
  require
  column view contain value
  syntax 2 map  key text   map text 
   i18n text  obtain value associate key map key
  require
  value search map
  map
  require
  map contain key value i18n
  optional
  internationalization configuration "content"
  note case key case insensitive parameter
  example example 1 consider map food create map simple food breakfast = milk dinner = lettuce lunch = meat
  select map('breakfast food breakfast map('lunch food
  lunch map('dinner food
  dinner map('none food dual
  breakfast lunch dinner milk meat lettuce null example 2 consider view foreign_sale contain revenue company country country currency
  country month revenue currency mexico jan 7536.00 mxn spain jan 20000.00 eur united kingdom jan 26816.00 gbp canada feb -25616.00 cad japan feb 100024.00 jpy currency_rates_to_usd map contain exchange rate currency dollar
  create map simple currency_rates_to_usd cad = 0.957121 eur = 1.4971 gbp = 1.67 jpy = 0.011166 mxn = 0.076989 usd = 1.0 select month country cast('float map(currency currency_rates_to_usd
  revenue revenue_usd foreign_sale month country revenue_usd jan mexico 580.19 jan spain 29942.00 jan united kingdom 44782.72 feb canada -24517.61 feb japan 1116.87 nullif description
  nullif function compare value expression return null equal
  return value
  function equivalent statement case
   expression 
  =  expression  null  expression 
  end nullif perform implicit type conversion
  parameter different type try cast order comparison
  i.e. parameter 1 text second 1 integer convert text parameter integer consider equal type different
  syntax nullif(expression   expression 
  example consider view internet_inc d summary ttime taxid 1 error adsl router 2005 06 29 19:19:41.0 b78596011 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 example
  1 select nullif(id 1 display internet_inc display null 2 3 4 example 2 select internet_inc nullif(id 1  
  null d summary ttime taxid 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 row view match condition
  example 3 select coalesce(nullif(id 1 summary
  display internet_inc display error adsl router 2 3 4 note nullif automatically convert second parameter integer compare value column d integer rownum description rownum function return unique number row result query
  number unique query datum retrieve different source
  order clause process rownum assign value row
  consistent result execution query use rownum view order clause
  syntax rownum  offset long  long offset
  optional
  present value return rownum offset + 1 instead 1
  example consider view internet_inc d summary ttime taxid 1 error adsl router 2005 06 29 19:19:41.0 b78596011 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 example
  1 select rownum(10 summary taxid internet_inc rownum summary taxid 11 error adsl router b78596011 12 incident adsl router b78596012 13 install additional line b78596013 14 bandwidth increase b78596014 example 2 select rownum summary taxid internet_inc order summary rownum summary taxid 4 bandwidth increase b78596014 1 error adsl router b78596011 2 incident adsl router b78596012 3 install additional line b78596013 note query example 2 sort result field summary
  order clause process rownum function assign value row value rownum 1
  function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#coalesce</field><field name="content">
  coalesce description coalesce function return non null argument
  coalesce equivalent expression case arg1 null arg1
  arg2 null arg2 end syntax coalesce  field identifi   field identifier 
   field identifier  field
  text field null
  example consider view v b c 10.10 text 21 ene-2005 0h 0 m 0s -80.10 text $ need 12 mar-2005 12h 30 m 0s 20.50 text live 01 feb-2006 16h 45 m 0s
  40.05 null null example 1 select coalesce(b hello v coalesce text text $ need text live hello example 2 select coalesce('hello bye v coalesce hello hello hello hello example
  3 select coalesce(b v coalesce text text $ need text live 40.05
  coalesce
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#contextualsummary</field><field name="content">
  contextualsummary description contextualsummary function return relevant text fragment text contain word sentence specify
  syntax contextualsummary  "content" text   keyword text   begin delim text   end delim text   fragment separator text   fragment length int 
   max fragment number int 
   analyzer text 
  "content" require
  text relevant fragment extract keyword
  require
  keyword extract text fragment
  "content" argument single word sentence
  begin delim optional
  text add prefix keyword appear text
  default value   
  end delim optional
  text add suffix keyword appear text
  default value  fragment separator
  optional
  text separate text fragment result
  default value  
  fragment length optional
  approximate number character appear keyword occurrence inside text
  default value 5 max fragment number
  optional
  maximum number fragment retrieve analyzer optional
  analyzer search keyword
  default standard analyzer std
  analyzer consider lemmatization stopword
  virtual dataport include analyzer english en spanish es
  example example 1 select contextualsummary("content" denodo  b   /b  5 1 demo_arn_view query return fragment text "content" denodo word appear
  example 2 consider follow view text_summary_sample
  text_sample web service webservice define w3c software system design support interoperable machine machine interaction network
  interface describe machine processable format specifically web service description language wsdl
  system interact web service manner prescribe description soap message typically convey http xml serialization conjunction web relate standard
  web service frequently internet application programming interface api access network internet execute remote system host request service
  approach nearly functionality web service object management group omg common object request broker architecture corba microsoft distribute component object model dcom sun microsystems java remote method invocation rmi
  select contextualsummary(text_sample system text_summary_sample contextualsummary system system example 3 select contextualsummary(text_sample service text_summary_sample contextualsummary service service example 4 select contextualsummary(text_sample web 25 text_summary_sample contextualsummary web/ service specifically web/ service web/ service web/-relate web/ service
  contextualsummary
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#getsession</field><field name="content">
  getsession description getsession function provide information session establish virtual dataport server
  syntax getsession  parameter literal  parameter follow value return function depend parameter user function return user current user
  useragent function return user agent associate current user connection
  database function return virtual dataport database client connect i18n function return i18n internationalization configuration database client connect role function return array effective role assign current user
  effective role role assign directly indirectly user
  example user1 role   assign role   role b assign function return  b
  example select getsession('user
  || || getsession('database user_name dual user_name user1@denodo_samples_db
  getsession
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#hash</field><field name="content">
  hash description hash function calculate digest input value algorithm md5 return encode base64 base 16
  input function return value
  return null input parameter null
  syntax hash  value text  text value require
  field literal
  example select hash('text value hash_value hash(null null_value dual hash_value null_value env9llzhj1lex1ztvwnajg== null
  hash
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#is-projected-field</field><field name="content">
  is_projected_field description
  is_projected_field function return true field pass parameter project i.e. field select statement query
  false
  syntax is_projected_field  field literal  boolean field
  require
  field exact case field
  function return false parameter null
  example consider follow view item item price 3.45 b 9.99 c 4.99 example 1 select item is_projected_field('item item item is_projected_field true b true c true example 2 select sum(price total is_projected_field('price item total is_projected_field 18.43 true example is_projected_field return true field price project query apply function field
  example 3 select item is_projected_field('price item item is_projected_field false b false c false
  example is_projected_field return false query project field price
  example 4 select item field1 is_projected_field('field1 item field1 is_projected_field false b false c false
  example is_projected_field return false function check field view project alia field
  project field
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#map</field><field name="content">
  map description map function return value associate key
  pair key value obtain view map section define map
  key exist function return null
  possible signature syntax 1 map  key text   view text   key field text   value field text 
  obtain value associate key
  map search value key column view
  key
  require
  value search view
  view
  require
  view contain key value
  key field
  require
  column view contain key value field
  require
  column view contain value
  syntax 2 map  key text   map text 
   i18n text  obtain value associate key map key
  require
  value search map
  map
  require
  map contain key value i18n
  optional
  internationalization configuration "content"
  note case key case insensitive parameter
  example example 1 consider map food create map simple food breakfast = milk dinner = lettuce lunch = meat
  select map('breakfast food breakfast map('lunch food
  lunch map('dinner food
  dinner map('none food dual
  breakfast lunch dinner milk meat lettuce null example 2 consider view foreign_sale contain revenue company country country currency
  country month revenue currency mexico jan 7536.00 mxn spain jan 20000.00 eur united kingdom jan 26816.00 gbp canada feb -25616.00 cad japan feb 100024.00 jpy currency_rates_to_usd map contain exchange rate currency dollar
  create map simple currency_rates_to_usd cad = 0.957121 eur = 1.4971 gbp = 1.67 jpy = 0.011166 mxn = 0.076989 usd = 1.0 select month country cast('float map(currency currency_rates_to_usd
  revenue revenue_usd foreign_sale month country revenue_usd jan mexico 580.19 jan spain 29942.00 jan united kingdom 44782.72 feb canada -24517.61 feb japan 1116.87
  map
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#nullif</field><field name="content">
  nullif description nullif function compare value expression return null equal
  return value
  function equivalent statement case
   expression 
  =  expression  null  expression 
  end nullif perform implicit type conversion
  parameter different type try cast order comparison
  i.e. parameter 1 text second 1 integer convert text parameter integer consider equal type different
  syntax nullif(expression   expression 
  example consider view internet_inc d summary ttime taxid 1 error adsl router 2005 06 29 19:19:41.0 b78596011 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 example
  1 select nullif(id 1 display internet_inc display null 2 3 4 example 2 select internet_inc nullif(id 1  
  null d summary ttime taxid 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 row view match condition
  example 3 select coalesce(nullif(id 1 summary
  display internet_inc display error adsl router 2 3 4 note nullif automatically convert second parameter integer compare value column d integer
  nullif
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/other_functions/other_functions#rownum</field><field name="content">
  rownum description rownum function return unique number row result query
  number unique query datum retrieve different source
  order clause process rownum assign value row
  consistent result execution query use rownum view order clause
  syntax rownum  offset long  long offset
  optional
  present value return rownum offset + 1 instead 1
  example consider view internet_inc d summary ttime taxid 1 error adsl router 2005 06 29 19:19:41.0 b78596011 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 example
  1 select rownum(10 summary taxid internet_inc rownum summary taxid 11 error adsl router b78596011 12 incident adsl router b78596012 13 install additional line b78596013 14 bandwidth increase b78596014 example 2 select rownum summary taxid internet_inc order summary rownum summary taxid 4 bandwidth increase b78596014 1 error adsl router b78596011 2 incident adsl router b78596012 3 install additional line b78596013 note query example 2 sort result field summary
  order clause process rownum function assign value row value rownum 1
  rownum
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#text-functions</field><field name="content">
  text function text processing function manipulate transform value type text
  usually input value type text automatically convert text value apply function
  text function ascii char concat instr len low ltrim max min position regexp removeaccent repeat replace replacemap rtrim similarity split substre substr textconstant trim upper
  ascii description ascii function return unicode code point character input value
  syntax ascii  value text  int value
  require
  example select ascii('denodo value1 ascii('\u8208\u5473\u6df1\u3044\u4f8b
  value2 value1 value2 68 33288 char description char function return character associate unicode code point
  input code point high 255 function push impala hive function return null
  support code point high 255
  syntax char  code int  text code
  require
  unicode code point character want obtain
  example select char(65 char_1 char(945 char_alpha char_1 char_alpha \u03b1 concat description
  concat function concatenate parameter string
  syntax concat  value 1 text   value 2 text 
   value n text  text value 1
  require
  text item concatenate value 2
  require
  second text item concatenate
  value n. optional
  argument concatenate
  example select original_text concat('i like fly originaltext month concat_text my_table original_text concat_text san francisco like fly san francisco month san jose like fly san jose month birmingham al like fly birmingham al month ny ny like fly ny ny month instr description instr function return index string string
  syntax instr  str1 text   str2 text  int return index character occurrence str2 str1
  index character 0
  str1 null function return null
  str2 present str1 return -1
  function case sensitive execute virtual dataport
  push database behavior different
  database function case sensitive case insensitive
  example select original_text instr(originaltext result mytable original_text result san francisco 9 san jose -1 birmingham al 1 ny ny -1 len description len function return number character text string syntax len  value text  int value
  require
  text length want find
  space count character
  example select original_text len(originaltext len_text mytable original_text len_text san francisco 18 san jose 13 birmingham al 15 ny ny 7 low description
  low function convert text lowercase
  syntax low  value text  text value
  require
  text convert low case
  example select original_text lower(originaltext lower_text mytable original_text lower_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny ltrim description
  ltrim function return input value lead white space carriage return
  syntax ltrim  value text  text value
  require
  max description max function return lexicographically great argument list
  function compare unicode value character input value
  function case sensitive
  syntax max  value 1 text   value 2 text 
   value n text  text value 1
  require value 2
  require value n. optional
  argument
  example example 1 select max('denodo virtual dataport dual max virtual dataport example 2 select max('denodo virtual dataport dual max denodo example result denodo letter high unicode value
  d = 100 v = 86
  min description min function return lexicographically low argument list
  function compare unicode value character input value
  function case sensitive
  syntax min  value 1 text   value 2 text 
   value n text  text value 1
  require value 2
  require value n. optional
  example example 1 select min('itpilot virtual dataport solution manager dual min itpilot example 2 select min('i v dual min
  example result   letter low unicode value = 97 = 105 v = 118
  position description position function return position string value1 occur value2
  syntax position  value 1 text   value 2 text  int value 1
  text want search value2 value 2
  value 1 value 2 null function return null
  length value 1 zero function return
  value 1 occur value 2 function return zero
  example select position('no denodo pos_1 position('z denodo pos_2 pos_1 pos_2 3 0 regexp description
  regexp function replace substre input string match regular expression replacement
  simply want replace string string suggest use function replace instead
  replace interpret input parameter literal regexp second parameter regular expression
  unfamiliar regular expression end unexpected result character special meaning
  example regular expression
  match character dot character
  syntax regexp  original text text   regex text   replacement text  text original text
  require
  input string regex
  require
  regular expression original text match replacement
  require
  match regular expression replace
  value regular expression specify capture group
  parameter null function return null
  regex regular expression pass text value account character special meaning
  e.g.
  represent character dot \\d represent digit etc
  function follow behavior java regular expression
  find information java documentation regular expression
  function equivalent follow java code originaltext.replaceall(regularexpression replacement character ^ $ match begin end respectively input value
  detect line terminator use \
  example example 1 replace character   
  select regexp database
  result dual result database example 2 select regexp
  
  
  
  database
  
  
  
  result dual result example character replace   regular expression character
  match character
  example 3 regular expression character class \\d represent digit capture group
  select regexp('number 3829022 i)number \\d+ value $ 1
  result dual result value 3829022 note follow thing second parameter start
  turn case insensitive matching
  number match number
  expression match
  parameter $ 1 represent capturing group
  \\d+ second parameter
  removeaccent description removeaccent function replace character accent character accent
  syntax removeaccent  value text  text value
  require
  text want remove accent
  example select removeaccents('b\u0451 \u00e1\u00e9\u00ed\u00f3\u00fa \u00e0\u00e8\u00ec\u00f2\u00f9 text_without_accent dual text_without_accent b\u0451 aeiou aeiou repeat description repeat function repeat text number time
  syntax repeat  value text   count int  text value
  require
  text want repeat count
  require
  number time value repeat
  0 0 function return string
  example select repeat('denodo 3 repeat('platform 0 repeat repeat
  denodo denodo denodo replace description
  replace function replace occurrence specify string string
  syntax replace  value text   text   text  text value
  require
  text want replace
  require
  occurrence replace
  
  require
  text replace occurrence
  function return null parameter null
  string function return null
  example select original_text replace(originaltext california replace_text my_table original_text replace_text san francisco san francisco california san jose san jose california birmingham al birmingham al ny ny ny ny replacemap description replacemap function input parameter text value list key value pair replace occurrence key text value
  list key value pair obtain view map section define map list obtain view key obtain field view value
  list obtain map consider duplicate entry map discard map create
  value map contain key order key matter
  replacement perform iteratively follow natural order key
  syntax 1 replacemap  search text text   map_name text  text search_text
  require
  text want replace
  map_name
  require
  map contain key value pair
  map_name exist function return null
  syntax 2 replacemap  search_text text   viewname text   keyfield text   valuefield text  text searchtext
  require
  text want replace
  viewname
  require
  view contain key value pair
  keyfield
  require
  field view_name contain key valuefield
  require
  field view_name contain value
  viewname exist function return null
  keyfield valuefield field view function return null
  example example 1 consider follow map consider follow query create map simple daysoftheweek sun = sunday mon = monday tus = tuesday d = wednesday thur'= thursday fri = friday sit = saturday select text_block replacemap textblock daysoftheweek text_block_with_full_name v text_block text_block_with_full_name like travel sun like travel sunday available travel mon available travel monday
  good day vacation sit relative d good day vacation saturday relative wednesday row contain key map sit   d replace value key map
  create map statement surround map double quote
  map element create lowercase
  i.e. create map daysoftheweek create map daysoftheweek
  second parameter function map case create
  i.e. create map statement create map daysoftheweek second parameter replacemap daysoftheweek lowercase
  section element identifi detail identifi element virtual dataport
  example 2 consider view days_of_the_week full_day_name abbreviated_format
  sunday sun monday
  mon tuestday tus wednesday d
  thursday thur friday fri
  saturday sit consider follow query select text_block replacemap text_block days_of_the_week abbreviated_format full_day_name text_block_with_full_name v text_block text_block_with_full_name like travel sun like travel sunday available travel mon available travel monday
  good day vacation sit relative d good day vacation saturday relative wednesday rtrim description rtrim function return input value trail white space carriage return
  syntax rtrim  value text  text value
  require
  similarity description similarity function calculate textual similarity text string base textual similarity algorithm
  syntax similarity  value 1 text   value 2 text   algorithm text  double value 1 require
  text compare value 2
  require
  text compare value1 algorithm
  optional
  algorithm use
  virtual dataport provide follow textual similarity algorithm jarowinklertfidf default
  algorithm base distance text stre algorithm base appearance common term text combination scaledlevenshtein tfidf jarowinklertfidf jarowinkler jaccard jaro unsmoothedjs level2 jaro mongeelkan level2mongeelkan example select city similarity(city san similarity v order similarity desc city similarity san jose 0.71 san francisco 0.71 ny 0.00 birmingham 0.00 split description split function split string match regular expression return array contain substre
  result contain regular expression
  syntax split  regexp text   value text  array regexp
  require
  regular expression
  substre match regular expression include result
  value
  require
  field text split
  example consider follow view v b 10.10 text
  -80.10 text $ need 20.50 text live null null example 1 select split('0 split('text\\s+\\w+ b v split split_1 array 1 .1 array text array -8 .1 array $ need array 2 .5 array
  live null null regular expression text\\s+\\w+ capture word text word
  example 2 select split b v split array text array text $ need array text live null example 3 select split('\\. v split array 10 10 array -80 10 array 20 50 null
  regular expression   capture character dot
  escape character
  
  
  match character
  substre substr description substre substr function return substre input string
  note result syntax 1 syntax 2 equivalent
  function syntax 2 behave specify standard sql-92
  syntax 1 substre  value text   start index int 
   end index int  text value
  require
  text string contain character extract start index
  require
  index character new substring
  index character input string 0 end index
  optional
  index character
  syntax function return substre begin start index input string
  start index negative value function return substring begin index 0
  end index present result start index end input value
  end index present result start index extend character index endindex-1
  length result endindex startindex
  function return string follow condition meet start index end index equal
  start index great length value
  function return null follow condition meet parameter null
  start index great end index
  syntax 2 substre  value text   start index int   length int  text substr  value text   start index int   length int  text substr  value text   start index int 
   length int  text way invoke function behave exactly way
  behavior syntax define function substre standard sql-92 function return substring begin start index input string syntax index character 1 syntax 1 0
  length present substring extend end input value
  length present substring length indicate value short length input string low start_index + length
  parameter null function return null
  length present start index length negative value follow formula specify result function return l character value start character c l = minimum start index + length length value + 1 maximum start_index 1
  c = large start index 1
  length present start index negative value function return value
  example syntax 1 select city substring(city 1 substring(city 1 5 location city substre substring_1 san jose jose j san francisco francisco f birmingham irmingham irmi ny y y example syntax 2 select city substring(city 2 substring(city 3 5 location city substre substring_1 san jose jose n jos san francisco francisco
  n
  fra birmingham irmingham rme ny y  string  example syntax 2 select substre denodo -2 4 f f d textconstant note textconstant function deprecate remove future major version denodo platform
  section feature deprecate denodo platform 8.0 list feature deprecate
  description
  textconstant function parse parameter text
  syntax textconstant  text  text text
  require
  text display result
  example select original_text textconstant('i like fly constant_text mytable original_text constant_text san francisco like fly san jose like fly birmingham al like fly ny ny like fly trim  
  description trim function return input string lead and/or trail pad character
  default pad character remove whitespace carriage return
  indicate different character
  ltrim section ltrim remove lead white space carriage return
  rtrim section rtrim remove trail white space carriage return
  syntax 1 character remove space carriage return
  second default function remove space carriage return
  syntax 2 trim  value text  value
  require
  text want remove space carriage return
  syntax trim  trim specification 
   trim character text   value text 
   trim specification  = lead | trail | value
  require
  text want remove pad character
  default space character parameter null function return null
  lead trail
  optional
  lead remove pad character begin input value trail remove pad character end input value
  remove pad character begin end input value
  add token equivalent add token trim character
  optional
  function remove character lead trailing value
  parameter contain character account rest ignore
  example example 1 query remove white space carriage return begin end input value
  select original_text trim(originaltext trim_text mytable original_text trim_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny example 2 query remove white space carriage return beginning value
  select original_text trim lead originaltext trim_text mytable original_text trim_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny example 3 query remove character c end value
  select original_text trim trail c original_text trim_text mytable original_text trim_text aaabbcbccc aaabbcb aaabbb aaabbb  null   null  upper description upper function convert text uppercase
  syntax upper  value text  text value
  require
  text convert upper case
  example select original_text upper(originaltext upper_text mytable original_text upper_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny
  text function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#ascii</field><field name="content">
  ascii description ascii function return unicode code point character input value
  syntax ascii  value text  int value
  require
  example select ascii('denodo value1 ascii('\u8208\u5473\u6df1\u3044\u4f8b
  value2 value1 value2 68 33288
  ascii
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#char</field><field name="content">
  char description char function return character associate unicode code point
  input code point high 255 function push impala hive function return null
  support code point high 255
  syntax char  code int  text code
  require
  unicode code point character want obtain
  example select char(65 char_1 char(945 char_alpha char_1 char_alpha \u03b1
  char
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#concat</field><field name="content">
  concat description concat function concatenate parameter string
  syntax concat  value 1 text   value 2 text 
   value n text  text value 1
  require
  text item concatenate value 2
  require
  second text item concatenate
  value n. optional
  argument concatenate
  example select original_text concat('i like fly originaltext month concat_text my_table original_text concat_text san francisco like fly san francisco month san jose like fly san jose month birmingham al like fly birmingham al month ny ny like fly ny ny month
  concat
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#instr</field><field name="content">
  instr description instr function return index string string
  syntax instr  str1 text   str2 text  int return index character occurrence str2 str1
  index character 0
  str1 null function return null
  str2 present str1 return -1
  function case sensitive execute virtual dataport
  push database behavior different
  database function case sensitive case insensitive
  example select original_text instr(originaltext result mytable original_text result san francisco 9 san jose -1 birmingham al 1 ny ny -1
  instr
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#len</field><field name="content">
  len description len function return number character text string syntax len  value text  int value
  require
  text length want find
  space count character
  example select original_text len(originaltext len_text mytable original_text len_text san francisco 18 san jose 13 birmingham al 15 ny ny 7
  len
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#lower</field><field name="content">
  low description low function convert text lowercase
  syntax low  value text  text value
  require
  text convert low case
  example select original_text lower(originaltext lower_text mytable original_text lower_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny
  low
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#ltrim</field><field name="content">
  ltrim description ltrim function return input value lead white space carriage return
  syntax ltrim  value text  text value
  require
  ltrim
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#max</field><field name="content">
  max description max function return lexicographically great argument list
  function compare unicode value character input value
  function case sensitive
  syntax max  value 1 text   value 2 text 
   value n text  text value 1
  require value 2
  require value n. optional
  argument
  example example 1 select max('denodo virtual dataport dual max virtual dataport example 2 select max('denodo virtual dataport dual max denodo example result denodo letter high unicode value
  d = 100 v = 86
  max
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#min</field><field name="content">
  min description min function return lexicographically low argument list
  function compare unicode value character input value
  function case sensitive
  syntax min  value 1 text   value 2 text 
   value n text  text value 1
  require value 2
  require value n. optional
  example example 1 select min('itpilot virtual dataport solution manager dual min itpilot example 2 select min('i v dual min
  example result   letter low unicode value = 97 = 105 v = 118
  min
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#position</field><field name="content">
  position description position function return position string value1 occur value2
  syntax position  value 1 text   value 2 text  int value 1
  text want search value2 value 2
  value 1 value 2 null function return null
  length value 1 zero function return
  value 1 occur value 2 function return zero
  example select position('no denodo pos_1 position('z denodo pos_2 pos_1 pos_2 3 0
  position
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#regexp</field><field name="content">
  regexp description regexp function replace substre input string match regular expression replacement
  simply want replace string string suggest use function replace instead
  replace interpret input parameter literal regexp second parameter regular expression
  unfamiliar regular expression end unexpected result character special meaning
  example regular expression
  match character dot character
  syntax regexp  original text text   regex text   replacement text  text original text
  require
  input string regex
  require
  regular expression original text match replacement
  require
  match regular expression replace
  value regular expression specify capture group
  parameter null function return null
  regex regular expression pass text value account character special meaning
  e.g.
  represent character dot \\d represent digit etc
  function follow behavior java regular expression
  find information java documentation regular expression
  function equivalent follow java code originaltext.replaceall(regularexpression replacement character ^ $ match begin end respectively input value
  detect line terminator use \
  example example 1 replace character   
  select regexp database
  result dual result database example 2 select regexp
  
  
  
  database
  
  
  
  result dual result example character replace   regular expression character
  match character
  example 3 regular expression character class \\d represent digit capture group
  select regexp('number 3829022 i)number \\d+ value $ 1
  result dual result value 3829022 note follow thing second parameter start
  turn case insensitive matching
  number match number
  expression match
  parameter $ 1 represent capturing group
  \\d+ second parameter
  regexp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#removeaccents</field><field name="content">
  removeaccent description removeaccent function replace character accent character accent
  syntax removeaccent  value text  text value
  require
  text want remove accent
  example select removeaccents('b\u0451 \u00e1\u00e9\u00ed\u00f3\u00fa \u00e0\u00e8\u00ec\u00f2\u00f9 text_without_accent dual text_without_accent b\u0451 aeiou aeiou
  removeaccent
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#repeat</field><field name="content">
  repeat description repeat function repeat text number time
  syntax repeat  value text   count int  text value
  require
  text want repeat count
  require
  number time value repeat
  0 0 function return string
  example select repeat('denodo 3 repeat('platform 0 repeat repeat
  denodo denodo denodo
  repeat
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#replace</field><field name="content">
  replace description replace function replace occurrence specify string string
  syntax replace  value text   text   text  text value
  require
  text want replace
  require
  occurrence replace
  
  require
  text replace occurrence
  function return null parameter null
  string function return null
  example select original_text replace(originaltext california replace_text my_table original_text replace_text san francisco san francisco california san jose san jose california birmingham al birmingham al ny ny ny ny
  replace
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#replacemap</field><field name="content">
  replacemap description replacemap function input parameter text value list key value pair replace occurrence key text value
  list key value pair obtain view map section define map list obtain view key obtain field view value
  list obtain map consider duplicate entry map discard map create
  value map contain key order key matter
  replacement perform iteratively follow natural order key
  syntax 1 replacemap  search text text   map_name text  text search_text
  require
  text want replace
  map_name
  require
  map contain key value pair
  map_name exist function return null
  syntax 2 replacemap  search_text text   viewname text   keyfield text   valuefield text  text searchtext
  require
  text want replace
  viewname
  require
  view contain key value pair
  keyfield
  require
  field view_name contain key valuefield
  require
  field view_name contain value
  viewname exist function return null
  keyfield valuefield field view function return null
  example example 1 consider follow map consider follow query create map simple daysoftheweek sun = sunday mon = monday tus = tuesday d = wednesday thur'= thursday fri = friday sit = saturday select text_block replacemap textblock daysoftheweek text_block_with_full_name v text_block text_block_with_full_name like travel sun like travel sunday available travel mon available travel monday
  good day vacation sit relative d good day vacation saturday relative wednesday row contain key map sit   d replace value key map
  create map statement surround map double quote
  map element create lowercase
  i.e. create map daysoftheweek create map daysoftheweek
  second parameter function map case create
  i.e. create map statement create map daysoftheweek second parameter replacemap daysoftheweek lowercase
  section element identifi detail identifi element virtual dataport
  example 2 consider view days_of_the_week full_day_name abbreviated_format
  sunday sun monday
  mon tuestday tus wednesday d
  thursday thur friday fri
  saturday sit consider follow query select text_block replacemap text_block days_of_the_week abbreviated_format full_day_name text_block_with_full_name v text_block text_block_with_full_name like travel sun like travel sunday available travel mon available travel monday
  good day vacation sit relative d good day vacation saturday relative wednesday
  replacemap
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#now-consider-the-following-query</field><field name="content">
  consider follow query create map simple daysoftheweek sun = sunday mon = monday tus = tuesday d = wednesday thur'= thursday fri = friday sit = saturday
  consider follow query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#rtrim</field><field name="content">
  rtrim description rtrim function return input value trail white space carriage return
  syntax rtrim  value text  text value
  require
  rtrim
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#similarity</field><field name="content">
  similarity description similarity function calculate textual similarity text string base textual similarity algorithm
  syntax similarity  value 1 text   value 2 text   algorithm text  double value 1 require
  text compare value 2
  require
  text compare value1 algorithm
  optional
  algorithm use
  virtual dataport provide follow textual similarity algorithm jarowinklertfidf default
  algorithm base distance text stre algorithm base appearance common term text combination scaledlevenshtein tfidf jarowinklertfidf jarowinkler jaccard jaro unsmoothedjs level2 jaro mongeelkan level2mongeelkan example select city similarity(city san similarity v order similarity desc city similarity san jose 0.71 san francisco 0.71 ny 0.00 birmingham 0.00
  similarity
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#split</field><field name="content">
  split description split function split string match regular expression return array contain substre
  result contain regular expression
  syntax split  regexp text   value text  array regexp
  require
  regular expression
  substre match regular expression include result
  value
  require
  field text split
  example consider follow view v b 10.10 text
  -80.10 text $ need 20.50 text live null null example 1 select split('0 split('text\\s+\\w+ b v split split_1 array 1 .1 array text array -8 .1 array $ need array 2 .5 array
  live null null regular expression text\\s+\\w+ capture word text word
  example 2 select split b v split array text array text $ need array text live null example 3 select split('\\. v split array 10 10 array -80 10 array 20 50 null
  regular expression   capture character dot
  escape character
  
  
  match character
  split
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#substring-substr</field><field name="content">
  substre substr description substre substr function return substre input string
  note result syntax 1 syntax 2 equivalent
  function syntax 2 behave specify standard sql-92
  syntax 1 substre  value text   start index int 
   end index int  text value
  require
  text string contain character extract start index
  require
  index character new substring
  index character input string 0 end index
  optional
  index character
  syntax function return substre begin start index input string
  start index negative value function return substring begin index 0
  end index present result start index end input value
  end index present result start index extend character index endindex-1
  length result endindex startindex
  function return string follow condition meet start index end index equal
  start index great length value
  function return null follow condition meet parameter null
  start index great end index
  syntax 2 substre  value text   start index int   length int  text substr  value text   start index int   length int  text substr  value text   start index int 
   length int  text way invoke function behave exactly way
  behavior syntax define function substre standard sql-92 function return substring begin start index input string syntax index character 1 syntax 1 0
  length present substring extend end input value
  length present substring length indicate value short length input string low start_index + length
  parameter null function return null
  length present start index length negative value follow formula specify result function return l character value start character c l = minimum start index + length length value + 1 maximum start_index 1
  c = large start index 1
  length present start index negative value function return value
  example syntax 1 select city substring(city 1 substring(city 1 5 location city substre substring_1 san jose jose j san francisco francisco f birmingham irmingham irmi ny y y example syntax 2 select city substring(city 2 substring(city 3 5 location city substre substring_1 san jose jose n jos san francisco francisco
  n
  fra birmingham irmingham rme ny y  string  example syntax 2 select substre denodo -2 4 f f d
  substre substr
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#textconstant</field><field name="content">
  textconstant note textconstant function deprecate remove future major version denodo platform
  section feature deprecate denodo platform 8.0 list feature deprecate
  description
  textconstant function parse parameter text
  syntax textconstant  text  text text
  require
  text display result
  example select original_text textconstant('i like fly constant_text mytable original_text constant_text san francisco like fly san jose like fly birmingham al like fly ny ny like fly
  textconstant
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#trim</field><field name="content">
  trim description trim function return input string lead and/or trail pad character
  default pad character remove whitespace carriage return
  indicate different character
  ltrim section ltrim remove lead white space carriage return
  rtrim section rtrim remove trail white space carriage return
  syntax 1 character remove space carriage return
  second default function remove space carriage return
  syntax 2 trim  value text  value
  require
  text want remove space carriage return
  syntax trim  trim specification 
   trim character text   value text 
   trim specification  = lead | trail | value
  require
  text want remove pad character
  default space character parameter null function return null
  lead trail
  optional
  lead remove pad character begin input value trail remove pad character end input value
  remove pad character begin end input value
  add token equivalent add token trim character
  optional
  function remove character lead trailing value
  parameter contain character account rest ignore
  example example 1 query remove white space carriage return begin end input value
  select original_text trim(originaltext trim_text mytable original_text trim_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny example 2 query remove white space carriage return beginning value
  select original_text trim lead originaltext trim_text mytable original_text trim_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny example 3 query remove character c end value
  select original_text trim trail c original_text trim_text mytable original_text trim_text aaabbcbccc aaabbcb aaabbb aaabbb  null   null 
  trim
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/text_functions/text_functions#upper</field><field name="content">
  upper description upper function convert text uppercase
  syntax upper  value text  text value
  require
  text convert upper case
  example select original_text upper(originaltext upper_text mytable original_text upper_text san francisco san francisco san jose san jose birmingham al birmingham al ny ny ny ny
  upper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/xml_functions/xml_functions#xml-functions</field><field name="content">
  xml function xml function create transform value type xml
  xml function xmlquery xpath xslt convert xml datum virtual dataport compound type xmlquery description xmlquery function extract information xml document xquery language xml query xquery
  syntax xmlquery  xquery expression text   xquery file boolean  xml xmlquery  xquery expression text   xquery file boolean   xml value xml 
  xml xmlquery  xquery expression text   xquery file boolean   xml value text   xml file boolean  xml xquery expression
  xquery expression query xml datum xquery file
  true parameter xquery expression path file contain xquery expression
  false xquery expression literal field contain expression
  xml value
  xml manipulate xml file
  true parameter xml value path file contain xml document
     xml file false miss xml value literal xml field
  example consider view v column type xml row books_xml  booklist xmln xsi=\http://www.w3.org/2001 xmlschema instance   book   item cat=\mmp   title  pride prejudice/title   author 
  jane austen/author 
   publisher  modern library/publisher
  
   /item   item cat=\p   title  wuthere heights/title 
   author 
  emily bront\u00eb/author 
   publisher  penguin classics/publisher   /item 
   /books 
   category desc=\miscellaneous category   category code=\p desc=\paperback\/ 
   category code=\mmp desc=\mass market paperback\/   category code=\h desc=\hard cover\/   /categories 
   /booklist  consider file c:/books_info.xml "content" view v. consider file c:/books.xq follow xquery expression  ul  $ b //books item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul 
  consider file c:/books2.xq xquery expression transform xml document file c:/books_info.xml  ul  $ b doc('c:/books_info.xml')//book item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul  example 1 follow query result query 1 select xmlquery  ul  $ b doc(''c:/books_info.xml'')//books item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul  false dual query 2 select xmlquery c:/books2.xq true dual query 3 select xmlquery('ul  $ b //books item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul  false booksxml xquery_sample_view query 4 select xmlquery('c:/books.xq true booksxml false xquery_sample_view xmlquery  ul   li 
  
   pride prejudice/i  jane austen  /li 
   li 
    wuthere heights/i  emily bront\u00eb  /li   /ul 
     query 1 xquery expression pass parameter query 2 parameter path file contain expression
     query 2 second parameter true
  expression read "content" file c:/books_info.xml
     query 3   query 4 xml document obtain field booksxml view v. xpath description xpath function return node xml document select xpath expression xpath language
  function support xpath 2.0 basic level conformance define w3c mean function provide xpath feature involve schema awareness
  syntax xpath  xml value xml   xpath expression text 
   xml header boolean  xml xml value
  require
  xml data type want apply xpath expression
  xpath expression
  require
  xpath expression
  xml header
  optional
  true select value xml node result include xml declaration  xml version=\1.0
  false select value xml node result include declaration
  function delegate oracle db2 sql server database parameter xml header ignore function return result apply xpath expression
  example example 1 select xpath cast xml  xml version=\1.0 encoding=\iso-8859 1 
     b  hello/b   b  world/b 
   /a 
  /a b true xpath_result dual xpath_result  xml version= 1.0 encoding= utf-8   b  hello/bb  world/b  example 2 select xpath cast xml  xml version=\1.0 encoding=\iso-8859 1 
     b  hello/b   b  world/b 
   /a 
  /a b text true xpath_result dual xpath_result helloworld example 3 select xpath cast xml  xml version=\1.0 encoding=\iso-8859 1 
     b  hello/b   b  world/b 
   /a 
  /a b text false xpath_result dual xpath_result
  helloworld result example 2   example 3   example 2 value parameter xml header true example 3 false
  reason result xpath function xml document
  xslt description xslt function return result apply xsl transformation xml
  syntax xslt  xml value xml   xsl value xml  xml xslt  xml value:{xml\\|text   xslvalue:{xml\\|text   path xml boolean 
   path xslt boolean  xml xml value
  require
  xml literal xml field file transform
  xsl value
  require
  xsl literal field contain xsl file contain xsl path xml
  require type xml value text
  true xml value path xml file
  false path xslt
  require type xsl value text
  true path xsl file
  false
  example consider view v xml_sample xsl_sample 
  xml version='1.0 encoding='utf-8 
   shop   product   product  
  id1/id virtual dataport/name   /product   product 
   id2/id itpilot/name 
   /product 
   product 
   id3/id scheduler/name 
   /product 
   /product 
   /shop 
  
  xml version='1.0 encoding='utf-8 
   xsl transform version='1.0 xmln xsl='http://www.w3.org/1999/ xsl transform   xsl template match='/shop product   shop   xsl select='product   product 
   xsl value select='name'/   /product 
   /xsl   /shop   /xsl template   /xsl transform  example 1 select xslt(xml_sample xsl_sample false false v xslt  xml version=\1.0 encoding=\utf-8 
   shop   product
    product 
  virtual dataport/product   product  itpilot/product   product  scheduler/product 
   /product 
   /shop 
  result obtain follow query select xslt(xml_sample cast('xml xsl_sample false v select xslt(cast('xml xml_sample xsl_sample false v select xslt(cast('xml xml_sample cast('xml xsl_sample v example 2 convert file books.xml xsl file books.xsl
  note parameter indicate second parameter path file
  select xslt /test xml books.xml /test xml books.xsl true true v example 3 convert cell column xml_sample xsl file books.xsl
  select xslt cast xml xml_sample /test xml books.xsl true v example 4 convert file books.xml xsl column xsl_sample
  select xslt /test xml books.xml cast xml xsl_sample true v convert xml datum virtual dataport compound type  
  combine cast createtypefromxml function create field compound type register array view xml datum
  note function createtypefromxml deprecate remove future version denodo platform
  instead create xml datum source route type variable pass xml document datum source
  example suppose view v field type xml personal_data_xml
  datum contain field follow structure  person  /name   age 
   /age 
   /person  consider follow expression create view person select cast createtypefromxml personaldata_type  personname 
  john smith  /nameage25/age/person  personal_data_xml personaldata v type derive field personaldata new view person personaldata_type
  type register type field text type age long type
  second parameter createtypefromxml function example value contain personal_data_xml field view v. createtypefromxml create array type
  happen xml datum pass parameter second parameter repeat element
  e.g.  title   title lang=\en   /title 
   title lang=\en   /title 
   /titles 
  case type create createtypefromxml register array
  component array register component title lang
  convert xml type datum virtual dataport compound type datum allow datum xml code combine datum relation
  example suppose view risk_level field age long type risk double type include type risk index calculate accord age individual
  possible run join operation person view risk_level view age field risk_level age field personaldata field person view
  xml function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/xml_functions/xml_functions#xmlquery</field><field name="content">
  xmlquery description xmlquery function extract information xml document xquery language xml query xquery
  syntax xmlquery  xquery expression text   xquery file boolean  xml xmlquery  xquery expression text   xquery file boolean   xml value xml 
  xml xmlquery  xquery expression text   xquery file boolean   xml value text   xml file boolean  xml xquery expression
  xquery expression query xml datum xquery file
  true parameter xquery expression path file contain xquery expression
  false xquery expression literal field contain expression
  xml value
  xml manipulate xml file
  true parameter xml value path file contain xml document
     xml file false miss xml value literal xml field
  example consider view v column type xml row books_xml  booklist xmln xsi=\http://www.w3.org/2001 xmlschema instance   book   item cat=\mmp   title  pride prejudice/title   author 
  jane austen/author 
   publisher  modern library/publisher
  
   /item   item cat=\p   title  wuthere heights/title 
   author 
  emily bront\u00eb/author 
   publisher  penguin classics/publisher   /item 
   /books 
   category desc=\miscellaneous category   category code=\p desc=\paperback\/ 
   category code=\mmp desc=\mass market paperback\/   category code=\h desc=\hard cover\/   /categories 
   /booklist  consider file c:/books_info.xml "content" view v. consider file c:/books.xq follow xquery expression  ul  $ b //books item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul 
  consider file c:/books2.xq xquery expression transform xml document file c:/books_info.xml  ul  $ b doc('c:/books_info.xml')//book item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul  example 1 follow query result query 1 select xmlquery  ul  $ b doc(''c:/books_info.xml'')//books item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul  false dual query 2 select xmlquery c:/books2.xq true dual query 3 select xmlquery('ul  $ b //books item order $ b title return  li string($b title
   /i  string($b author
   /li   /ul  false booksxml xquery_sample_view query 4 select xmlquery('c:/books.xq true booksxml false xquery_sample_view xmlquery  ul   li 
  
   pride prejudice/i  jane austen  /li 
   li 
    wuthere heights/i  emily bront\u00eb  /li   /ul 
     query 1 xquery expression pass parameter query 2 parameter path file contain expression
     query 2 second parameter true
  expression read "content" file c:/books_info.xml
     query 3   query 4 xml document obtain field booksxml view v.
  xmlquery
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/xml_functions/xml_functions#xpath</field><field name="content">
  xpath description xpath function return node xml document select xpath expression xpath language
  function support xpath 2.0 basic level conformance define w3c mean function provide xpath feature involve schema awareness
  syntax xpath  xml value xml   xpath expression text 
   xml header boolean  xml xml value
  require
  xml data type want apply xpath expression
  xpath expression
  require
  xpath expression
  xml header
  optional
  true select value xml node result include xml declaration  xml version=\1.0
  false select value xml node result include declaration
  function delegate oracle db2 sql server database parameter xml header ignore function return result apply xpath expression
  example example 1 select xpath cast xml  xml version=\1.0 encoding=\iso-8859 1 
     b  hello/b   b  world/b 
   /a 
  /a b true xpath_result dual xpath_result  xml version= 1.0 encoding= utf-8   b  hello/bb  world/b  example 2 select xpath cast xml  xml version=\1.0 encoding=\iso-8859 1 
     b  hello/b   b  world/b 
   /a 
  /a b text true xpath_result dual xpath_result helloworld example 3 select xpath cast xml  xml version=\1.0 encoding=\iso-8859 1 
     b  hello/b   b  world/b 
   /a 
  /a b text false xpath_result dual xpath_result
  helloworld result example 2   example 3   example 2 value parameter xml header true example 3 false
  reason result xpath function xml document
  xpath
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/xml_functions/xml_functions#xslt</field><field name="content">
  xslt description xslt function return result apply xsl transformation xml
  syntax xslt  xml value xml   xsl value xml  xml xslt  xml value:{xml\\|text   xslvalue:{xml\\|text   path xml boolean 
   path xslt boolean  xml xml value
  require
  xml literal xml field file transform
  xsl value
  require
  xsl literal field contain xsl file contain xsl path xml
  require type xml value text
  true xml value path xml file
  false path xslt
  require type xsl value text
  true path xsl file
  false
  example consider view v xml_sample xsl_sample 
  xml version='1.0 encoding='utf-8 
   shop   product   product  
  id1/id virtual dataport/name   /product   product 
   id2/id itpilot/name 
   /product 
   product 
   id3/id scheduler/name 
   /product 
   /product 
   /shop 
  
  xml version='1.0 encoding='utf-8 
   xsl transform version='1.0 xmln xsl='http://www.w3.org/1999/ xsl transform   xsl template match='/shop product   shop   xsl select='product   product 
   xsl value select='name'/   /product 
   /xsl   /shop   /xsl template   /xsl transform  example 1 select xslt(xml_sample xsl_sample false false v xslt  xml version=\1.0 encoding=\utf-8 
   shop   product
    product 
  virtual dataport/product   product  itpilot/product   product  scheduler/product 
   /product 
   /shop 
  result obtain follow query select xslt(xml_sample cast('xml xsl_sample false v select xslt(cast('xml xml_sample xsl_sample false v select xslt(cast('xml xml_sample cast('xml xsl_sample v example 2 convert file books.xml xsl file books.xsl
  note parameter indicate second parameter path file
  select xslt /test xml books.xml /test xml books.xsl true true v example 3 convert cell column xml_sample xsl file books.xsl
  select xslt cast xml xml_sample /test xml books.xsl true v example 4 convert file books.xml xsl column xsl_sample
  select xslt /test xml books.xml cast xml xsl_sample true v
  xslt
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/functions/xml_functions/xml_functions#converting-xml-data-into-virtual-dataport-compound-types</field><field name="content">
  convert xml datum virtual dataport compound type combine cast createtypefromxml function create field compound type register array view xml datum
  note function createtypefromxml deprecate remove future version denodo platform
  instead create xml datum source route type variable pass xml document datum source
  example suppose view v field type xml personal_data_xml
  datum contain field follow structure  person  /name   age 
   /age 
   /person  consider follow expression create view person select cast createtypefromxml personaldata_type  personname 
  john smith  /nameage25/age/person  personal_data_xml personaldata v type derive field personaldata new view person personaldata_type
  type register type field text type age long type
  second parameter createtypefromxml function example value contain personal_data_xml field view v. createtypefromxml create array type
  happen xml datum pass parameter second parameter repeat element
  e.g.  title   title lang=\en   /title 
   title lang=\en   /title 
   /titles 
  case type create createtypefromxml register array
  component array register component title lang
  convert xml type datum virtual dataport compound type datum allow datum xml code combine datum relation
  example suppose view risk_level field age long type risk double type include type risk index calculate accord age individual
  possible run join operation person view risk_level view age field risk_level age field personaldata field person view
  convert xml datum virtual dataport compound type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/generating_wrappers_and_data_sources#generating-wrappers-and-data-sources</field><field name="content">
  generate wrapper datum source wrapper component responsible offer server overall common interface access datum source
  search method base relation associate wrapper charge receive query issue base relation transform query datum source obtain result return logical layer virtual dataport accordance format specify base relation
  wrapper peculiarity obtain datum source transparent server
  virtual dataport include follow predefine type wrapper www incorporate wrapper semi structured source create denodo itpilot system
  source access local file system web ftp
  html website important type source wrapper semi structured source pdf word file
  jdbc
  extract datum remote database jdbc
  odbc
  extract datum remote database odbc
  multidimensional database wrapper extract datum multidimensional database
  different wrapper type database sapbwbapi use sap jco connector connect sap bw sap bi essbase extract datum oracle essbase 9 11 olap extract datum mondrian 3.x microsoft sql server analysis service olap server xmla interface
  ws web service extract datum invoke operation define web service xml extract datum xml file optionally follow specific dtd schema
  source access web local file system ftp
  json
  extract datum json file
  source access web local file system ftp
  df extract datum flat text file represent tuple regular format specific character tuple field delimiter dispose tuple field accord regular expression
  file support file csv format
  source access web local file system ftp
  ldap
  extract datum ldap server microsoft windows server active directory
  bapi
  invoke sap bapis business application programming interface extract datum store sap erp sap application
  salesforce
  retrieve datum salesforce.com
  custom extract datum source specific java implementation
  type wrapper allow ad hoc construction wrapper program specific type source
  corresponding datum source element wrapper www type encapsulate certain datum datum source access configuration
  section describe create modify wrapper datum source type virtual dataport vql
  note strongly recommend use administration tool create datum source wrapper
  remainder section structure follow
  section valid conversion type wrapper vdp type specify path virtual dataport define aspect general interest rest section valid conversion type wrapper base relation virtual dataport way specify path resource
  section create datum source specify add system datum source available type
  finally section create wrapper create wrapper source type
  generate wrapper datum source
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/creating_data_sources/creating_data_sources#creating-data-sources</field><field name="content">
  create datum source virtual dataport wrapper associate datum source
  datum source encapsulate configuration need access certain datum repository e.g. database web service etc
  follow section describe manual creation process datum source type jdbc data source odbc data source multidimensional datum source data source soap web service xml data source json source df data source ldap datum source bapi datum source salesforce datum source custom datum source datum source configuration property specify path virtual dataport note strongly recommend create wrapper datum source virtual dataport administration tool vql statement difficult prone error
  rename data source use statement rename syntax statement
  rename data source rename data source  datum source type 
   identifier   new identifi   datum source type  = custom |
  df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml example  
  rename data
  source jdbc ds_snowflake ds_jdbc_snowflake
  create data source
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/creating_data_sources/creating_data_sources#id1</field><field name="content">
  syntax statement rename data source rename data source  datum source type 
   identifier   new identifi   datum source type  = custom |
  df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/creating_data_sources/creating_data_sources#id2</field><field name="content">
  example rename data source jdbc ds_snowflake ds_jdbc_snowflake
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/creating_wrappers/creating_wrappers#creating-wrappers</field><field name="content">
  create wrapper kind wrapper support virtual dataport exist statement create wrapper
  follow subsection detail manual creation process kind wrapper
  note strongly recommend use administration tool create new wrapper
  previously concept execution context interpolation string create kind wrapper introduce section execution context interpolation string general information schema metadata result return wrapper provide section wrapper metadata
  create wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/valid_conversions_between_types_in_wrappers_and_vdp_types#valid-conversions-between-types-in-wrappers-and-vdp-types</field><field name="content">
  valid conversion type wrapper vdp type  
  section describe compatibility mapping java type export wrapper datum type virtual dataport base relation view section datum type
  assign wrapper base relation important bear compatibility rule mind ensure define schema wrapper base relation compatible
  follow table map common type
  mapping apply automatically virtual dataport administration tool administration guide
  automatic conversion java type virtual dataport type java type virtual dataport type int java.lang
  short java.lang
  integer int long java.lang
  long long float java.lang
  float float double java.lang
  double double boolean java.lang
  boolean boolean java.math
  bigdecimal decimal java.lang
  string text java.util.date java.util.calendar java.sql
  date java.sql
  timestamp java.sql
  time date byte java.sql
  blob blob java datum type specify table associate default vdp data type text
  possible mapping exist java type virtual dataport type specify apply automatically
  follow table
  valid conversion java type virtual dataport type java type virtual dataport type java.lang
  string xml likewise wrapper provide compound element array register directly associate vdp array register
  valid conversion type wrapper vdp type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/valid_conversions_between_types_in_wrappers_and_vdp_types#automatic-conversions-between-java-types-and-virtual-dataport-types</field><field name="content">
   
  automatic conversion java type virtual dataport type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/valid_conversions_between_types_in_wrappers_and_vdp_types#other-valid-conversions-between-java-types-and-virtual-dataport-types</field><field name="content">
   
  valid conversion java type virtual dataport type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#native-type-conversions-of-a-wrapper-to-java-types</field><field name="content">
  native type conversion wrapper java type  
  wrapper type association native type source model java type
  follow section conversion apply different wrapper type support virtual dataport
  general wrapper access source return object array object wrapper responsible represent structure virtual dataport register array respectively
  type conversion table jdbc wrapper type conversion table jdbc wrapper jdbc type java type array java.lang
  string bigint java.lang
  long binary java.lang
  string bit java.lang
  boolean blob byte boolean java.lang
  boolean char java.lang
  string clob java.lang
  string datalink java.lang
  string date java.sql
  date decimal java.lang
  double distinct java.lang
  stre double java.lang
  double float java.lang
  float integer java.lang
  integer java_object java.lang
  stre longvarbinary java.lang
  stre longvarchar java.lang
  string null java.lang
  string numeric java.lang
  double java.lang
  stre real java.lang
  float ref java.lang
  string smallint java.lang
  short struct java.lang
  string time java.sql
  time timestamp java.sql
  timestamp tinyint java.lang
  byte varbinary java.lang
  string varchar java.lang
  stre type convert java.lang
  string
  note table generic conversion associate jdbc source
  depend vendor version database access conversion vary slightly
  type conversion table odbc wrapper  
  odbc wrapper conversion apply jdbc wrapper
  type conversion table web source wrapper web wrapper use follow type conversion table itpilot type conversion itpilot type java type boolean boolean date java.util
  calendar double double float float int int string java.lang
  string url java.lang
  string type conversion table web service wrapper type conversion table web service wrapper soap type java type xsd base64binary byte xsd boolean boolean xsd byte byte xsd datetime
  java.util.calendar xsd decimal java.math
  bigdecimal xsd double double xsd float float xsd hexbinary byte xsd int int xsd integer java.math
  biginteger xsd
  long long xsd qname java.lang
  string format namespace}localpart xsd short short xsd string java.lang
  string compound element convert java object follow standard mapping define jax rpc standard
  type conversion table xml wrapper type conversion table xml wrapper xml schema type java type positiveinteger negativeinteger
  nonpositiveinteger nonnegativeinteger int unsignedint gyear gmonth gday java.lang
  integer long unsignedlong java.lang
  long byte unsignedbyte java.lang
  byte double java.lang
  double float java.lang
  float short unsignedshort java.lang
  short boolean java.lang
  boolean string normalizedstring token base64binary hexbinary duration datetime date time gyearmonth gmonthday java.lang
  string type conversion table delimit file wrapper  
  df wrapper consider extract datum java.lang
  string
  type conversion table custom wrapper custom wrapper indicate type field java class require conversion
  native type conversion wrapper java type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-tables-for-jdbc-wrappers</field><field name="content">
  type conversion table jdbc wrapper type conversion table jdbc wrapper jdbc type java type array java.lang
  string bigint java.lang
  long binary java.lang
  string bit java.lang
  boolean blob byte boolean java.lang
  boolean char java.lang
  string clob java.lang
  string datalink java.lang
  string date java.sql
  date decimal java.lang
  double distinct java.lang
  stre double java.lang
  double float java.lang
  float integer java.lang
  integer java_object java.lang
  stre longvarbinary java.lang
  stre longvarchar java.lang
  string null java.lang
  string numeric java.lang
  double java.lang
  stre real java.lang
  float ref java.lang
  string smallint java.lang
  short struct java.lang
  string time java.sql
  time timestamp java.sql
  timestamp tinyint java.lang
  byte varbinary java.lang
  string varchar java.lang
  stre type convert java.lang
  string
  note table generic conversion associate jdbc source
  depend vendor version database access conversion vary slightly
  type conversion table jdbc wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#id1</field><field name="content">
   
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-table-for-odbc-wrappers</field><field name="content">
  type conversion table odbc wrapper  
  odbc wrapper conversion apply jdbc wrapper
  type conversion table odbc wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-table-for-web-source-wrappers</field><field name="content">
  type conversion table web source wrapper web wrapper use follow type conversion table itpilot type conversion itpilot type java type boolean boolean date java.util
  calendar double double float float int int string java.lang
  string url java.lang
  string
  type conversion table web source wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#itpilot-type-conversions</field><field name="content">
   
  itpilot type conversion
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-table-for-web-services-wrappers</field><field name="content">
  type conversion table web service wrapper type conversion table web service wrapper soap type java type
  xsd base64binary byte xsd boolean boolean xsd byte byte xsd datetime java.util
  .calendar xsd decimal java.math
  bigdecimal xsd double double xsd float float xsd hexbinary byte xsd int int xsd integer java.math
  biginteger xsd
  long long xsd qname java.lang
  string format namespace}localpart xsd short short xsd string java.lang
  string compound element convert java object follow standard mapping define jax rpc standard
  type conversion table web service wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#id2</field><field name="content">
   
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-table-for-xml-wrappers</field><field name="content">
  type conversion table xml wrapper type conversion table xml wrapper xml schema type java type positiveinteger negativeinteger
  nonpositiveinteger nonnegativeinteger int unsignedint gyear gmonth gday java.lang
  integer long unsignedlong java.lang
  long byte unsignedbyte java.lang
  byte double java.lang
  double float java.lang
  float short unsignedshort java.lang
  short boolean java.lang
  boolean string normalizedstring token base64binary hexbinary duration datetime date time gyearmonth gmonthday java.lang
  string
  type conversion table xml wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#id3</field><field name="content">
   
  id3
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-table-for-delimited-file-wrappers</field><field name="content">
  type conversion table delimit file wrapper  
  df wrapper consider extract datum java.lang.string
  type conversion table delimited file wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/native-type_conversions_of_a_wrapper_to_java_types#type-conversion-table-for-custom-wrappers</field><field name="content">
  type conversion table custom wrapper custom wrapper indicate type field java class require conversion
  type conversion table custom wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/filters#filters</field><field name="content">
  filter define path resource possible establish filter execute process file
  available filter unzip decompress zip compress file gunzip decompress gzip compress file
  decryptaes256 decrypt file encrypt algorithm pbe hmac sha256 512 aes-256
  decrypt decrypt file encrypt password base encryption md5 des algorithm
  note filter decrypt deprecate
  choose input file encrypt recommend pbe hmac sha256 512 aes-256 decryptaes256 securer
  section feature deprecate denodo platform 8.0
  virtual dataport provide tool encrypt decrypt file algorithm pbe hmac sha256 512 aes-256   pbe md5 des
  custom assign custom input filter datum source
  filter locate jar(s load server add name(s jar clause
  custom filter input parameter add class filter
  section custom input filter administration guide
  syntax filter follow syntax set filter df json xml datum source  filter  = decryptaes256 password =
   literal  encrypt | decrypt password
  =
   literal  encrypt | unzip | gunzip | custom jar  jar literal 
   jar literal  classname
  =  literal 
   route filter parameter 
   route filter parameter  =  parameter identifier 
  =  literal  encrypt hide
  example command create datasource
  route
  filter unzip create datum source retrieve data file decompress finally process
  filter
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/valid_conversions_between_types_in_wrappers_and_vdp_types/filters#syntax-to-set-a-filter-in-a-df-json-or-xml-data-source</field><field name="content">
  syntax set filter df json xml datum source  filter  = decryptaes256 password =
   literal  encrypt | decrypt password
  =
   literal  encrypt | unzip | gunzip | custom jar  jar literal 
   jar literal  classname
  =  literal 
   route filter parameter 
   route filter parameter  =  parameter identifier 
  =  literal  encrypt hide
  syntax set filter df json xml datum source
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/query_wrapper_statements/query_wrapper_statements#query-wrapper-statements</field><field name="content">
  query wrapper statement virtual dataport allow directly query wrapper define base relation
  use statement query wrapper
  provide type optionally list condition format  value  binary operator  value  syntax condition value section syntax function condition value
  unary operator multivalue binary operator allow
  syntax query wrapper statement query wrapper custom | df | essbase | itp | jdbc | json |
  ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  identifi 
   value   binary operator   value 
   value   binary operator   value 
   value  = section syntax convention syntax query www wrapper
  syntax slightly different type wrapper
  list key = value pair indicate directly receive wrapper input parameter
  syntax query wrapper itp www statement query wrapper itp  identifi   identifi 
  =  value literal 
   identifi 
  =  value literal 
  query wrapper statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/query_wrapper_statements/query_wrapper_statements#syntax-of-the-query-wrapper-statement</field><field name="content">
  syntax query wrapper statement query wrapper custom | df | essbase | itp | jdbc | json |
  ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  identifi 
   value   binary operator   value 
   value   binary operator   value 
  syntax query wrapper statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/generating_wrappers_and_data_sources/query_wrapper_statements/query_wrapper_statements#syntax-of-the-query-wrapper-itp-www-statement</field><field name="content">
  syntax query wrapper itp www statement query wrapper itp  identifi   identifi  =  value literal 
   identifi 
  =  value literal 
  syntax query wrapper itp www statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/creating_a_base_view#creating-a-base-view</field><field name="content">
  create base view statement create table allow create base view
  base view represent external source web relational database etc supply datum virtual dataport
  note strongly recommend administration tool create base view graphically instead manually write vql statement base view compose group attribute
  attribute data type
  create base view internationalization configuration schema specify
  syntax statement create table create replace table  identifi  i18n  identifi 
   field 
   field 
  folder =  literal 
  description =  literal 
   primary_key 
   tag_list 
  cache | partial exact
  preload | |
  invalidate cascade
  noatomic invalidateblocksize  integer 
   condition 
  batchsizeincache  integer  | default
  timetoliveincache  second integer  | default | noexpire
  swap | | default
  swapsize  megabyte integer 
  maxresultsize  megabyte integer 
   table search method clause 
   table index clause 
  delegatestatsquery
  =  boolean 
  smart_only | smart_then_atsource_through_vdp | atsource_through_vdp_only  field  =  identifier:type identifi   property list 
   tag list 
   primary_key 
  = constraint  literal  primary key  field_name literal 
   field_name literal 
   property list  =  identifi 
  =  value identifier 
   name_i identifi 
  =  value_i identifi 
   table index clause  = declare cache | view
  cluster | hash |
  index  identifi   table index field  table index field 
  | delete cache | view index  identifi   table index field  =  field identifi  asc | desc  table search method clause  = add searchmethod  identifi  i18n  identifi 
  constraint  constraint clause  +
  outputlist  output clause 
  wrapper  wrapper type   wrapper_name identifier  alternative_wrapper jdbc  wrapper_name identifi 
  jdbc  wrapper_name identifier 
   tag_list  =
  tag  tag identifi 
   tag identifi 
  modifier replace specifie base view indicate replace new view
  replace exist view query capability derive view change e.g. addition field query restriction previously exist
  affect derive view base view
  type field blob indicate "content" type field
  constant e.g. application pdf expression
  section work blob field base view administration guide
  search method view define add searchmethod clause
  section query capability search method wrapper explain search method
  primary key clause set definition primary key view
  information primary key section primary key view administration guide
  clause alternative_wrapp define alternative wrapper base view
  section alternative source administration guide explain
  figure example creation base view statement create table
  create jdbc wrapper base view book field type text isbn title author
  example create base view create wrapper jdbc book
  datasourcename = ds_jdbc_mysql catalogname = public relationname = book outputschema isbn = isbn java.lang
  string opt sortable title = title java.lang.stre opt escape sortable author = author java.lang.stre opt sortable create table book i18n us_est isbn text title text author text description = author book
  author separate comma
  primary key isbn
  cache timetoliveincache default add searchmethod book i18n us_est constraint add isbn opt add title opt add author opt outputlist isbn title author wrapper jdbc book
  create base view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/creating_a_base_view#syntax-of-the-statement-create-table</field><field name="content">
  syntax statement create table create replace table  identifi  i18n  identifi 
   field 
   field 
  folder =  literal 
  description =  literal 
   primary_key 
   tag_list 
  cache | partial exact
  preload | |
  invalidate cascade
  noatomic invalidateblocksize  integer 
   condition 
  batchsizeincache  integer  | default
  timetoliveincache  second integer  | default | noexpire
  swap | | default
  swapsize  megabyte integer 
  maxresultsize  megabyte integer 
   table search method clause 
   table index clause 
  delegatestatsquery
  =  boolean 
  smart_only | smart_then_atsource_through_vdp | atsource_through_vdp_only  field  =  identifier:type identifi   property list 
   tag list 
   primary_key 
  = constraint  literal  primary key  field_name literal 
   field_name literal 
   property list  =  identifi 
  =  value identifier 
   name_i identifi 
  =  value_i identifi 
   table index clause  = declare cache | view
  cluster | hash |
  index  identifi   table index field  table index field 
  | delete cache | view index  identifi   table index field  =  field identifi  asc | desc  table search method clause  = add searchmethod  identifi  i18n  identifi 
  constraint  constraint clause  +
  outputlist  output clause 
  wrapper  wrapper type   wrapper_name identifier  alternative_wrapper jdbc  wrapper_name identifi 
  jdbc  wrapper_name identifier 
   tag_list  =
  tag  tag identifi 
   tag identifi 
  syntax statement create table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/creating_a_base_view#example-of-creating-a-base-view</field><field name="content">
  example create base view create wrapper jdbc book datasourcename = ds_jdbc_mysql catalogname
  = public relationname = book outputschema isbn = isbn java.lang
  string opt sortable title = title java.lang.stre opt escape sortable author = author java.lang.stre opt sortable create table book i18n us_est isbn text title text author text description = author book
  author separate comma
  primary key isbn
  cache timetoliveincache default add searchmethod book i18n us_est constraint add isbn opt add title opt add author opt outputlist isbn title author wrapper jdbc book
  example create base view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/query_capabilities_search_methods_and_wrappers#query-capabilities-search-methods-and-wrappers</field><field name="content">
  query capability search method wrapper unlike database source soap web service rest api allow random query datum
  instead provide interface limit query capability
  example operation rest api mandatory parameter
  virtual dataport capable model query capability source search method
  base view search method
  base view describe query capability know search method
  view search method query
  recommend create base view administration tool automatically define search method view
  search method need modify
  search method view comprise series 5 tuple
  5 tuple represent restriction specific query comply execute source search method
  sense search method 5 tuple allow query case source limitation query capability example conventional relational database
  format 5 tuple attribute operator obligatoriness multiplicity possible_value attribute attribute relation
  operator group operator condition attribute query view search method
    represent operator allow attribute data type obligatoriness value obl indicate attribute mandatorily appear query source
     opt indicate attribute appear query optional nos indicate query attribute allow source
  multiplicity indicate value include source query attribute operator
  possible query attribute nos value obligatoriness field value necessarily 0
    indicate query attribute operator number value
  possible_value list value query attribute
  value   contain mean search range limited range associate attribute datum type attribute query value
  obligatoriness field set 5 tuple nos value necessarily value set
  example consider example virtual bookshop internet offer search form search form bookshop
  search form bookshop form require user specify value title attribute option set value author attribute format attribute restrict group value
  search title author search keyword operator like
  search exact phrase operator =) indicate select box search box field
  attribute search specify value
  addition field title author format shop return output price attribute query form
  let model source relation r={title author format price search method contain 5 tuple
  search method bookshop title,{like,= obl 1 author like,= opt 1 format = opt 1 format hardcover ebook paperback price nos 0 note 5 tuple value like = operator field obl obligatoriness field mean obligatory query title attribute operator obligatory query
  order title attribute appear obligatorily query operator possible form example different 5 tuple title attribute operator title like obl 1 title = obl 1
  want differentiate treatment specific attribute accord operator 5 tuple exist attribute
  virtual dataport automatically calculate query capability derive view accord capability underlie view
  graphical support add modify delete search method base view
  query capabilitie search method wrapper
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/query_capabilities_search_methods_and_wrappers#search-form-for-a-bookshop</field><field name="content">
  search form bookshop
  search form bookshop
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/query_capabilities_search_methods_and_wrappers#search-method-for-a-bookshop</field><field name="content">
  search method bookshop title,{like,= obl 1 author like,= opt 1 format = opt 1 format hardcover ebook paperback price nos 0
  search method bookshop
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/query_constraints#query-constraints</field><field name="content">
  query constraint specify search method series 5 uple query constraint specify
  follow element indicate query constraint attribute attribute relation
  operator group operator query source search method
  represent operator admit data type attribute
  obligatoriness field explain later nos value specify
  obligatoriness value obl obligatory indicate attribute appear query source
  opt optional indicate attribute appear query optional
  nos searchable indicate source allow query attribute
  important use obl indicate multiplicity 1 high 0
  use nos indicate multiplicity 0
  multiplicity indicate value source query simultaneously attribute operator
  value zero equivalent 0 equivalent 1 integer number specify
  possible query attribute value nos obligatoriness field value necessarily 0 zero
  indicate number value great 0 upper limit
  possible value list value attribute query
  contain value specify mean query value range associate datum type attribute
  obligatoriness field set 5 uple value nos necessarily value set
  specify query constraint attribute appear output query search method indicate
  output attribute search method specify enumerate attribute separate comma
  query constraint
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/assigning_wrappers_to_search_methods#assigning-wrappers-to-search-methods</field><field name="content">
  assign wrapper search method syntax syntax statement alter table assign wrapper search method element indicate wrapper type
  type wrapper indicate nature external source datum extract
  detail create wrapper provide section generate wrapper datum source
  assign wrapper search method
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/example_of_how_a_search_method_is_created#example-of-how-a-search-method-is-created</field><field name="content">
  example search method create figure example search method create alter table example add search method view
  example search method create alter table create table bookview
  add searchmethod bookview_sm1 constraint add title obl add author like opt add format nos zero add price nos zero outputlist title author format price wrapper itp bookt example add search method bookview_sm1 base view bookview
  search method query constraint
  indicate query source query provide value title specify number value
  optionally search attribute author specify number value operator like
  direct query rest attribute format price etc admit
  furthermore search method definition indicate attribute appear output
  finally www type wrapper wrapper create itpilot bookt associate search method
  responsible extract result query execute search method
  important source natively support query specific attribute previous example occur format price etc virtual dataport execute query attribute post processing result obtain source
  example server receive query select bookview
  title like java format = ebook virtual dataport capable respond extract source book contain word java title source allow query later filter result remain field format ebook
  example search method create
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/query_capabilities_search_methods_and_wrappers/example_of_how_a_search_method_is_created#example-of-how-a-search-method-is-created-with-alter-table</field><field name="content">
  example search method create alter table create table bookview
  add searchmethod bookview_sm1 constraint add title obl add author like opt add format nos zero add price nos zero outputlist title author format price wrapper itp bookt
  example search method create alter table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/modifying_a_base_view/modifying_a_base_view#modifying-a-base-view</field><field name="content">
  modify base view change follow property base view statement alter table internationalization configuration
  cache configuration cache
  partial tuple extract source result execute query store local cache
  section cache explain cache mode work
  batchsizeincache
  row obtain source insert cache batch
  parameter determine number row batch
  value default batch size define database database management dialog menu administration
  database specific batch size cache module use value define cache dialog administration  server configuration menu
  memory usage configuration swap swapsize maxresultsize
     swap disk policy query use base view involve large number tuple
  section configure swap policy detail
  command create cache index declare cache index exactly
  create cache index
  section cache index administration guide
  delete cache index delete cache index underlie datum source
  section cache index administration guide
  declare view index define view index vdp exist datum source
  create view index create view index underlie datum source
  section index view administration guide
  delete view index delete view index define vdp
  delete remote view index delete view index underlie data source vdp
  section index view administration guide
  add delete modify search method
  search method compose rule represent restriction specific query comply order execute search method
  furthermore search method associate wrapper contain datum necessary translate user query source interpret response
  section assign wrapper search method provide detail matter
  delegatestatsquery false query execute gather statistic base view push source
  instead virtual dataport retrieve datum execute select table execute aggregation function locally
  true present query push source possible
  find information option section gather statistic view administration guide
  clause smart_only smart_then_atsource_through_vdp atsource_through_vdp_only control server obtain statistic view smart_only server obtain statistic view system table database
  information obtain table depend database datum source connect statistic obtain
  add clause equivalent clear check box complete miss statistic   statistic tab
  smart_then_atsource_through_vdp server obtain statistic system table database
  statistic obtain catalog regular select query execute obtain
  add clause equivalent select check box complete miss statistic   statistic tab
  atsource_through_vdp_only server try obtain statistic system table database
  instead server execute regular select query obtain statistic
  option available administration tool
  set vql
  find information option section gather statistic view administration guide
  rename view alter table   rename add change remove primary key base view  add key   drop key  definition
  information primary key section primary key view administration guide modify column base view rename column use alter column  current field identifier
   \u00a0   rename  new field identifi 
  example alter table internet_inc alter column iinc_id rename incidence_id modify type column use alter column  identifi  modify  new type identifi   field nullable 
  change type field current source type property field lose
  need add
  example alter table internet_inc alter column incidence_id modify decimal false add modify source type property field use alter column  field identifi  add  source type \u00a0\u00a0\u00a0   property identifi 
  =  source type value literal 
  property source type property exist value provide replace exist
  example alter table internet_inc alter column summary add sourcetypesize = 1000 add modify description field use alter column  field identifi  add description =  description literal 
  example alter table internet_inc alter column iinc_id
  add description = identifi incident syntax statement alter table alter table  identifi  i18n  identifi 
  cache | partial exact
  preload | incremental  incremental_condition literal 
  |
  invalidate cascade
  
  noatomic invalidateblocksize  integer 
   condition 
  batchsizeincache  integer  | default
  timetoliveincache  second integer  | default | noexpire
  swap | | default
  swapsize  megabyte integer 
  maxresultsize  megabyte integer 
   table index clause 
   table search method clause 
   add key  |  drop key 
  delegatestatsquery =  boolean 
  smart_only | smart_then_atsource_through_vdp | atsource_through_vdp_only
  description =  literal 
  | alter table  identifi   alter column clause+
  | alter table  identifi  rename
   new_name identifi   table index clause  = declare cache | view
  cluster | hash |
  index  index_name identifi 
  primary unique  table index field  table index field 
  
  | create replace cache | view index  index_name identifi 
  unique  table index field 
   table index field 
  
  | delete cache index  index_name identifi  |
  delete remote view index  index_name identifi   table index field  =  index_field_name identifi  asc | desc
   table search method clause  = add searchmethod  identifi 
  i18n  identifi 
  constraint  constraint clause  +
  outputlist  output clause 
   wrapper clause 
  |
  alter searchmethod  identifi  i18n  identifi  | default
  constraint  constraint clause  +
  outputlist  output clause 
   wrapper clause 
  | drop searchmethod  identifi   alter column clause  = alter column  identifi  rename  new identifi  | alter column  identifi 
  modify  new type identifi 
   nullable clause 
  | alter column  field identifi  add  source type property identifi 
  =  source type value literal 
  | alter column  field identifi  add description
  =  description literal 
   nullable clause  = true | false  constraint clause  =
  add  field   operator 
   operator 
   obligatoriness   multiplicity   value_1 value 
   value_i value 
  | nos zero | 0
  | drop  integer 
   output clause  =  field 
   field 
   wrapper clause  = wrapper  wrapper type 
  
  identifi 
  alternative_wrapper jdbc  wrapper_name identifi 
  jdbc  wrapper_name identifier 
  | drop wrapper  wrapper type  = custom | df | essbase | itp | jdbc |
  json |
  ldap | odbc | salesforce |
  sapbwbapi | saperp | ws | xml  field  =  identifier[.identifi   obligatoriness  = opt | obl  multiplicity  = zero | |
  |  integer   operator  include   represent operator
   add key  = add constraint  literal 
  primary key  field_name literal 
   field_name literal   drop key  = drop constraint  literal  |
  drop primary key privilege require create edit delete index underlie data source command manage underlie index require follow privilege connect virtual dataport database jdbc datum source create base view
     execute jdbc datum source create base view
     connect virtual dataport database base view locate
     write base view index create
  user account set jdbc datum source able create index underlie database
  modify base view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_a_base_view/modifying_a_base_view/modifying_a_base_view#syntax-of-the-statement-alter-table</field><field name="content">
  syntax statement alter table alter table  identifi 
  i18n  identifi 
  cache | partial exact
  preload | incremental  incremental_condition literal 
  |
  invalidate cascade
  
  noatomic invalidateblocksize  integer 
   condition 
  batchsizeincache  integer  | default
  timetoliveincache  second integer  | default | noexpire
  swap | | default
  swapsize  megabyte integer 
  maxresultsize  megabyte integer 
   table index clause 
   table search method clause 
   add key  |  drop key 
  delegatestatsquery =  boolean 
  smart_only | smart_then_atsource_through_vdp | atsource_through_vdp_only
  description =  literal 
  | alter table  identifi   alter column clause+
  | alter table  identifi  rename
   new_name identifi   table index clause  = declare cache | view
  cluster | hash |
  index  index_name identifi 
  primary unique  table index field  table index field 
  
  | create replace cache | view index  index_name identifi 
  unique  table index field 
   table index field 
  
  | delete cache index  index_name identifi  |
  delete remote view index  index_name identifi   table index field  =  index_field_name identifi  asc | desc
   table search method clause  = add searchmethod  identifi 
  i18n  identifi 
  constraint  constraint clause  +
  outputlist  output clause 
   wrapper clause 
  |
  alter searchmethod  identifi  i18n  identifi  | default
  constraint  constraint clause  +
  outputlist  output clause 
   wrapper clause 
  | drop searchmethod  identifi   alter column clause  = alter column  identifi  rename  new identifi  | alter column  identifi 
  modify  new type identifi 
   nullable clause 
  | alter column  field identifi  add  source type property identifi 
  =  source type value literal 
  | alter column  field identifi  add description
  =  description literal 
   nullable clause  = true | false  constraint clause  =
  add  field   operator 
   operator 
   obligatoriness   multiplicity   value_1 value 
   value_i value 
  | nos zero | 0
  | drop  integer 
   output clause  =  field 
   field 
   wrapper clause  = wrapper  wrapper type 
  
  identifi 
  alternative_wrapper jdbc  wrapper_name identifi 
  jdbc  wrapper_name identifier 
  | drop wrapper  wrapper type  = custom | df | essbase | itp | jdbc |
  json |
  ldap | odbc | salesforce |
  sapbwbapi | saperp | ws | xml  field  =  identifier[.identifi   obligatoriness  = opt | obl  multiplicity  = zero | |
  |  integer   operator  include   represent operator
   add key  = add constraint  literal 
  primary key  field_name literal 
   field_name literal   drop key  = drop constraint  literal  |
  drop primary key
  syntax statement alter table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/queries_select_statement#queries-select-statement</field><field name="content">
  query select statement query view use select statement
  follow subsection describe use clause select statement
  syntax vql statement obtain execute command help section help command
  syntax select statement  query  =  common table expression   select  |  complex select   order 
   result offset clause 
   fetch clause 
  context  context information   context information 
  trace  select  =
  select distinct  select field   view 
   view 
   condition  |  subselect condition 
  group  group field 
   group field 
  
   condition   complex select  =  complex select 
  union
  | minus | intersect  complex select 
  + |
  select distinct  select field   complex select 
   order 
  |  complex select 
  |  select   select field  =  select field 
   alia identifi 
   select field 
   alia identifi 
   select field  = |  value  |  value 
  =  value 
   common table expression  =  common table expression 
   common table expression 
   common table expression  =  query view identifier 
   field identifi   field identifier 
   select  |  complex select   order 
   result offset clause  =
  offset  offset row count number 
  row | row
   fetch clause  = fetch |  fetch quantity number  row | row | limit
   number 
   view  =  simple view 
  |  join view  |  select 
   simple view  =  view identifi 
   alia identifi 
  |  database identifier  .]procedure identifi   procedureparameter 
   procedureparameter 
   alia identifi 
  |  flatten view   join view  =  inner view1 view 
   method type 
   order type 
   join type 
  join  inner view2 view 
   condition  |  inner view1 view  nest parallel
   order type 
   join type  join  parallel number integer 
   inner view2 view 
   condition  |  inner view1 view 
   method type 
   order type  natural  join type 
  join  inner view2 view 
  |  inner view1 view  nest parallel
   order type  natural  join type  join  parallel number integer 
   inner view2 view  |  inner view1 view 
   method type 
   order type 
   join type 
  join  inner view2 view   field 
   field 
  |  inner view1 view  nest parallel
   order type 
   join type  join  parallel number integer 
   inner view2 view   field 
   field 
  |  inner view1 view  cross join  inner view2 view   inner view  =  simple view  |
   view 
   join type  = leave outer
  |
  right outer
  | outer
  | inner  method type  = hash | nest |
  merge  order type  = order |
  reverseorder  join condition  =  simple join condition 
   simple join condition 
  |  join condition 
   simple join condition  =  field1 field   binary operator   field2 field 
  |  field2 field 
   binary operator   field1 field 
   subselect condition  =  condition  |  subselect condition   subselect condition 
  |  subselect condition   subselect condition  |  subselect condition 
  |  value   binary operator 
  |
   select  |  complex select 
   order 
  |  value   select 
  |  complex select 
   order 
  | exist  select  |  complex select 
   order 
   column  =  column 
   column 
   column  =  identifier  |
   literal   group field  =  field 
  |  expression 
   order  = syntax order clause select statement  flatten view  = syntax flatten operation
   view identifier  = basic element vql statement  condition  = rule form function  unary operator  = basic element vql statement  binary operator  = basic element vql statement  field  = rule form function  context information  = syntax context clause  value  = rule form function
  query select statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/queries_select_statement#syntax-of-the-select-statement</field><field name="content">
  syntax select statement  query  =  common table expression   select  |  complex select   order 
   result offset clause 
   fetch clause 
  context  context information   context information 
  trace  select  =
  select distinct  select field   view 
   view 
   condition  |  subselect condition 
  group  group field 
   group field 
  
   condition   complex select  =  complex select 
  union
  | minus | intersect  complex select 
  + |
  select distinct  select field   complex select 
   order 
  |  complex select 
  |  select   select field  =  select field 
   alia identifi 
   select field 
   alia identifi 
   select field  = |  value  |  value 
  =  value 
   common table expression  =  common table expression 
   common table expression 
   common table expression  =  query view identifier 
   field identifi   field identifier 
   select  |  complex select   order 
   result offset clause  =
  offset  offset row count number 
  row | row
   fetch clause  = fetch |  fetch quantity number  row | row | limit
   number 
   view  =  simple view 
  |  join view  |  select 
   simple view  =  view identifi 
   alia identifi 
  |  database identifier  .]procedure identifi   procedureparameter 
   procedureparameter 
   alia identifi 
  |  flatten view   join view  =  inner view1 view 
   method type 
   order type 
   join type 
  join  inner view2 view 
   condition  |  inner view1 view  nest parallel
   order type 
   join type  join  parallel number integer 
   inner view2 view 
   condition  |  inner view1 view 
   method type 
   order type  natural  join type 
  join  inner view2 view 
  |  inner view1 view  nest parallel
   order type  natural  join type  join  parallel number integer 
   inner view2 view  |  inner view1 view 
   method type 
   order type 
   join type 
  join  inner view2 view   field 
   field 
  |  inner view1 view  nest parallel
   order type 
   join type  join  parallel number integer 
   inner view2 view   field 
   field 
  |  inner view1 view  cross join  inner view2 view   inner view  =  simple view  |
   view 
   join type  = leave outer
  |
  right outer
  | outer
  | inner  method type  = hash | nest |
  merge  order type  = order |
  reverseorder  join condition  =  simple join condition 
   simple join condition 
  |  join condition 
   simple join condition  =  field1 field   binary operator   field2 field 
  |  field2 field 
   binary operator   field1 field 
   subselect condition  =  condition  |  subselect condition   subselect condition 
  |  subselect condition   subselect condition  |  subselect condition 
  |  value   binary operator 
  |
   select  |  complex select 
   order 
  |  value   select 
  |  complex select 
   order 
  | exist  select  |  complex select 
   order 
   column  =  column 
   column 
   column  =  identifier  |
   literal   group field  =  field 
  |  expression 
  syntax select statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/from_clause#from-clause</field><field name="content">
  clause specification origin view carry clause
  clause relation relation datum extract indicate
  possible specify alias relation clause
  alias clause select statement facilitate creation join condition
  alia indicate relation clause relation rest select statement prefix field alia
  possible use subquerie clause
  subquery include bracket
  example
  follow statement use subquery carry union operation internet_inc phone_inc view
  select select internet_inc union select phone_inc taxid = b78596011 relation list clause separate join clause cross product perform
  follow subsection deal different join operation available
  clause contain denodo store procedure
  result return call procedure deal case like tuple view
  section store procedure detail
  note virtual dataport allow execute select statement clause
  e.g. select 2 + 2
  clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/join_operation#join-operation</field><field name="content">
  join operation join operation combine record view
  follow construction view1 join view2
  joincondition joincondition specify require join condition
  usually condition include comparison field view involve join
  include expression function comparison literal etc
  follow modifi join clause inner
  join operation inner type
     inner join include result tuple build tuple relation associate accord join condition
  common join type default
  example view1 join view2
  joincondition view1 inner join view2
  joincondition outer
  join operation outer type
  option outer join leave right
  option tuple relation include result associate tuple relation accord join condition attribute relation complete null result tuple
  leave option tuple relation associate tuple second include
  right option tuple second relation associate tuple include
  example view1 outer join view2
  joincondition view1 leave outer join view2
  joincondition view1 right outer join view2
  joincondition natural
  natural join operation execute
  condition indicate type join associate attribute input relation operator =
     inner   outer join
  example view1 natural join view2 view1 natural leave outer join view2 cross cross product specify view
  equivalent list relation clause join
  example view1 cross join view2
  instead specify join condition possible use clause specify list attribute type relation
  attribute specify exist branch join tree type coincident branch error raise
  example view1 join view2
  attribute1 attributen
  join operation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/intersect_operation#intersect-operation</field><field name="content">
  intersect operation intersect operation return common element result input query
  syntax operation follow syntax intersect operation  query 1  intersect  query 2  intersect  query n  intersect  query n+1 
  
  example view follow "content" view_a b 1 x 2 b 4 d view_b col_1 col_2 1 2 z 6 f view_c col_a col_b 1 2 b 5 e execute query select select view_a intersect select col_1 view_b intersect select col_a view_c
  result follow  query  1 2 result query common row result query
  note intersection operation account result query "content" view
  query participate intersect query adhere follow rule input query return schema
  result input query number field
  bracket indicate order intersection perform
  order affect result query great impact performance
  e.g. query like  query 1  intersect  query
  2  intersect  query 3  server perform intersection  query 1   query 2  intermediate result  query 3 
  query like  query 1  intersect  query 2  intersect  query 3  server perform intersection  query 2   query 3  intermediate result  query 1 
  intersect operation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/intersect_operation#syntax-of-the-intersect-operation</field><field name="content">
  syntax intersect operation  query 1  intersect  query 2  intersect  query n  intersect  query n+1 
  syntax intersect operation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/minus_operation#minus-operation</field><field name="content">
  minus operation minus operation return row return statement row return query involve operation
  syntax operation follow syntax minus operation  query 1  minus  query 2  minus  query n  minus  query
  n+1
  
  
  example view follow "content" view_a b 1 x 2 b 4 d view_b col_1 col_2 1 2 z 6 f view_c col_1 col_2 1 2 b 5 e execute query select select view_a minus select col_1
  view_b
  minus select col_a view_c
  result follow  query 
  4 result query result query row return query involve
  query participate minus query adhere follow rule input query return schema
  number field
  bracket indicate order minus operation perform
  note view order affect result view
  e.g. query like  query 1  minus  query 2  minus  query
  3  server perform minus operation  query 1   query 2  intermediate result  query 3 
  query like  query 3  minus  query 2  minus  query 1  server perform minus operation  query 3   query 2  intermediate result  query 1 
  query query involve result different
  minus operation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/minus_operation#syntax-of-the-minus-operation</field><field name="content">
  syntax minus operation  query 1  minus  query 2  minus  query n  minus  query n+1 
  syntax minus operation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/flatten_view_flattening_data_structures#flatten-view-flattening-data-structures</field><field name="content">
  flatten view flatten datum structure  
  datum store relational database usually compose value simple type int text long
  type source datum usually structure compound value
  example sql database json xml file web service etc datum complex structure
  extend relational model virtual dataport allow work compound datum
  provide data type array register
  think value type array view
  array form register think row table register form field
  type field register simple text int long compound register array
  register inside array structure
  need flatten datum come source return compound value easy combine flatten datum datum come relational database
  consume datum tool support compound type
     flatten datum use operation flatten syntax flatten operation  flatten view  = flatten  view identifi 
   alia identifi 
   alia 
   register field 
   array field 
  +  view identifi  reference view
  e.g. customer customer360.asset
  alias identifier identify view
  use identifi want
  example v. parameter form path array want flatten
  array inside register need provide register follow follow array
  specify array flatten
  flatten return field source view array flatten field register array field flatten
  example example view average_revenue single field result type array
  register inside array field taxid revenue
  query flatten datum view return field taxid   revenue
  select taxid revenue flatten average_revenue v v.result
  flatten view flatten datum structure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/flatten_view_flattening_data_structures#syntax-of-the-flatten-operation</field><field name="content">
  syntax flatten operation  flatten view  = flatten  view identifi 
   alia identifi 
   alia 
   register field 
   array field 
  +
  syntax flatten operation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/from_clause/subqueries_in_the_where_clause_of_the_query#subqueries-in-the-where-clause-of-the-query</field><field name="content">
  subquerie clause query subquerie present clause clause query
  section explain use clause
  syntax select statement definition  subselect condition  contain definition operator use compare output subquery
  comparison condition value list subquery
  precede   = =   
  =  follow subquery
  example 1 obtain row incident view taxid taxid view flat_revenue revenue great 2,500
  follow query equivalent
  use operator use =
  
  select incident taxid select taxid flat_revenue revenue  2500
  select incident taxid = select taxid flat_revenue revenue  2500 database operator
  e.g taxid  taxid  etc
  example 2 obtain row internet_inc d match d row phone_inc
  select internet_inc exist select b.pinc_id
  phone_inc b
  a.iinc_id
  = b.pinc_id
     example 2 alia main query internet_inc clause subquery
  runtime query contain subquerie convert semijoin
  semijoin relational operation return row leave query matching row right query
  regular join server select semijoin method depend query
  available method execute semijoin subquerie follow merge semijoin process row sort join attribute
  possible virtual dataport select algorithm efficient low memory footprint
  method select join sort join attribute
  datum obtain jdbc odbc data source virtual dataport retrieve datum sort field join attribute
  add clause order query send database
  hash semijoin subquery execute result store hash table
  server begin process result main query look match hash table
  merge semijoin efficient algorithm
  nest semijoin subquery execute row main query result
  virtual dataport use statistic choose execution method semijoin
  regular join query override algorithm select server execute subquery semijoin
  add subqueryplan modifi context clause subquery want modify query plan
  syntax context clause contain syntax modifier
  note subqueryplan modifier indicate context subquery want modify context main query
  example select incident taxid select taxid flat_revenue revenue  2500 context subqueryplan = nest order
  example query force server use algorithm nest semijoin
  subquerie clause query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/with_clause/with_clause#with-clause</field><field name="content">
  clause clause specify common table expression cte
  cte like temporary result set define duration sql statement
  main advantage cte improve readability maintenance complex query
  query divide separate building block build complex query
  virtual dataport support common table expression select create view statement
  example follow statement find department low total pay
  department_salary deptno totalpay
  select deptno sum(salary emp group deptno
  select deptno department_salary totalpay = select max(totalpay department_salary
  clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/select_clause/select_clause#select-clause</field><field name="content">
  select clause select clause indicate attribute obtain relation specify clause
  character specify select clause server project attribute query view
  case order column result order appear create view create table statement create view
  alias define column obtain allow attribute modify
  case derive attribute section derive attribute alias specify virtual dataport automatically generate new attribute
  query view field allow necessary rename alia
  distinct modifier include
  case duplicate tuple delete result
  project simple boolean expression like field = value field_1 = field_2 derive attribute  
  select clause include derive attribute
  attribute create evaluate expression use function constant value attribute
  description function support virtual dataport find section function condition derive attribute
  detailed example use function find section function
  example use derive attribute function
  follow query obtain column newsalary contain result add 1000 value contain salary column emp view
  select sum(1000 salary newsalary
  emp follow example use nested function parameter select sum(salary div(salary,1000 salary emp
  select clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/select_clause/select_clause#derived-attributes</field><field name="content">
  derive attribute select clause include derive attribute
  attribute create evaluate expression use function constant value attribute
  description function support virtual dataport find section function condition derive attribute
  detailed example use function find section function
  example use derive attribute function
  follow query obtain column newsalary contain result add 1000 value contain salary column emp view
  select sum(1000 salary newsalary
  emp follow example use nested function parameter select sum(salary div(salary,1000 salary emp
  derive attribute
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/where_clause/where_clause#where-clause</field><field name="content">
  clause clause specify condition result query comply
  syntax specify condition
  syntax list condition  condition  =  condition   condition  |  condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value  
  binary operator   value   value 
  |  value   value   value  |  value   unary operator 
  condition sequence condition element separate logical operator
  evaluation time obtain boolean result
  condition group symbol vary priority
  condition comprise element left operator condition apply operator zero right operand depend operator
  comparison operator support virtual dataport specify section comparison operator include operator equality great comparison string "content"ion etc
  condition operand attribute constant expression evaluate compound value section
  condition compound value row constructor create register value section management compound value detail compound type
  example row value1 valuen create register value n field
  value attribute literal number logical value expression evaluate new row element
  create array value use row construct combine
  example row value1 valuen row valuen+1 value2n
  create array value contain register value
  register array type
  note rule form function formal description syntax create compound value
  condition compound value equality =) inequality   operator
  operand compatible type comparison possible
  clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/where_clause/where_clause#syntax-for-a-list-of-conditions</field><field name="content">
  syntax list condition  condition  =  condition   condition  |  condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value  
  binary operator   value   value 
  |  value   value   value  |  value   unary operator 
  syntax list condition
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/where_clause/where_clause#conditions-with-compound-values</field><field name="content">
  condition compound value row constructor create register value section management compound value detail compound type
  example row value1 valuen create register value n field
  value attribute literal number logical value expression evaluate new row element
  create array value use row construct combine
  example row value1 valuen row valuen+1 value2n
  create array value contain register value
  register array type
  note rule form function formal description syntax create compound value
  condition compound value equality =) inequality   operator
  operand compatible type comparison possible
  condition compound value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/group_by_clause/group_by_clause#group-by-clause</field><field name="content">
  group clause group
  clause allow group result query value attribute view and/or expression generate row group
  attribute expression group operation perform specify group clause
  query group clause select clause use aggregation function result obtain select statement form single group
  query group clause "content" select clause restrict attribute specify group
  clause specify
  attribute view parameter aggregation function
  aggregation function specify select clause indicate alia new attribute
  server generate alia automatically
  group view derive attribute function appear select clause apply aggregation field function
  use aggregation function aggregation function apply tuple belong group result group operation calculate aggregated value
  section aggregation function list aggregation function
  aggregation function follow general syntax predefine function section syntax convention attribute subject alteration admit parameter nest function admit
  modifier distinct specify
  exception count aggregation function receive parameter special character indicate return number tuple belong group
  example relation emp represent employee company contain attribute department indicate department employee belong obtain different department number employee belong follow query execute select count numofworker department emp group department alia field select count numofworker department dept_name emp group dept_name
  group clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/group_by_clause/group_by_clause#use-of-aggregation-functions</field><field name="content">
  use aggregation function aggregation function apply tuple belong group result group operation calculate aggregated value
  section aggregation function list aggregation function
  aggregation function follow general syntax predefine function section syntax convention attribute subject alteration admit parameter nest function admit
  modifier distinct specify
  exception count aggregation function receive parameter special character indicate return number tuple belong group
  example relation emp represent employee company contain attribute department indicate department employee belong obtain different department number employee belong follow query execute select count numofworker department emp group department alia field select count numofworker department dept_name emp group dept_name
  use aggregation function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/having_clause/having_clause#having-clause</field><field name="content">
  clause clause specify filter condition result return query group clause
  example continue example previous section obtain datum correspond department 10 employee follow query select count
  numofworker department emp group department count  10
  have clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/union_clause/union_clause#union-clause</field><field name="content">
  union clause operator union combine result query single result set contain row query
  rule sql standard define number order column query involve union
  datum type field compatible
  union return duplicate row
  duplicate row union remove
  want duplicate use union
  denodo exist type union operation sql union operation compliant sql standard union operator
  extend union behavior extend union operator different sql standard association field query position
  field present query union execute
  field add result set
  row query return field value field null
  union operator denodo remove duplicate behave like union
  want remove duplicate add clause distinct
  specify type union operation query explicitly syntax sql union sql union
  standard sql union extend union
  extended union
  denodo 8 ansi sql syntax union distinct union default sql union operation
  change previous version ansi sql syntax default extend union
  change default mapping ansi sql syntax map extend union
  configure union clause behave extend union follow step log administration tool administration user
  open vql shell execute command set com.denodo.vdb.union.enablestandardsqlunion = false need restart virtual dataport server apply change apply instantly
  important consider performance implication sql union vs sql union extend union
  database denodo process remove duplicate row union costly execution engine evaluate row result union look duplicate instead return immediately
  know row return branch union unique execute sql union extend union
  instead sql union query run fast
  union clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/order_by_clause/order_by_clause#order-by-clause</field><field name="content">
  order clause  
  order clause sort datum return query specify column list
  syntax order clause select statement  order  = order  order expression 
  asc | desc
   order expression 
  asc | desc
   order expression  =  field 
  |  expression 
  |  field position integer 
  usually virtual dataport process datum obtain source asynchronously
  i.e. begin send result client wait process datum obtain source
  query use order push source result query generate synchronously
  i.e. result available datum source obtain
  order clause query indicate field alia field project query i.e. select clause query
  expression base field alias project field
  position field select clause want sort result
  asc desc modifier optional
  miss result sort ascend order
  follow query obtain employee order accord attribute pay descending order
  select emp order pay desc follow query order field indicate position select clause select pay emp order 2 desc index field 1
  follow query use expression order clause select internet_inc order lower(summary
  order clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/order_by_clause/order_by_clause#syntax-of-the-order-by-clause-select-statement</field><field name="content">
  syntax order clause select statement  order  = order  order expression 
  asc | desc
   order expression 
  asc | desc
   order expression  =  field 
  |  expression 
  |  field position integer 
  syntax order clause select statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/offset_fetch_and_limit/offset_fetch_and_limit#offset-fetch-and-limit</field><field name="content">
  offset fetch limit offset fetch limit clause limit number row obtain execute query
  use offset  number 
  row | row skip n row result set
  use limit
   count  fetch |
   count  row | row obtain  count  row result set
  parameter row row mean indistinctly
  indistinctly
  consistent result query ensure deterministic sort order
  use offset combine limit fetch syntax clause syntax select statement
  example example 1 select f1 f2 employee fetch 10 row execute query return row result set
  example 2 select f1 f2 employee offset 10 row fetch 10 row execute query return row number 10 number 19 include
  row row number 0
  follow query use limit equivalent previous select f1 f2 employee offset 10 row limit 10 example 3 use fetch  count  server return row
  example follow query return row result set select f1 f2 employee fetch row
  offset fetch limit
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/context_clause/context_clause#context-clause</field><field name="content">
  context clause context clause modify certain configuration preference execute specific query override value configure default
  general context clause receive key value pair separate comma key execution characteristic modify value indicate new value say characteristic
  key value literal set quotation mark double quotation mark
  key case sensitive case value depend property
  syntax context clause  context information  = cache = | default | cache_atomic_operation = true | false true default | cache_invalidate = matching_row | matching_pk | all_row matching_row default | cache_invalidate_block_size =  literal  10000 default | cache_load_on_error = true | false false default | cache_preload = true | false false default | cache_return_query_result = true | false true default | cache_wait_for_load = true | false false default | compute_stats_on_target = true | false false default impala 3.x kudu | costoptimize = | default | data_movement_bulk_load = | default | data_movement_clean_resource = true | false true default | data_movement_clean_resources_on_error = true | false true default | i18n =  literal  e.g. es_euro | nodelegateview =  literal  | querytimeout =  literal  | simplify = |
  default | summary_rewrite = |
  default | swap = | | swapsize =
   number  | var  var 
  =  literal  |
  username =  literal  | password =
   literal  encrypt
  | domain =  literal  |
  datamovementplan =  datum movement plan 
  | mppmovementplan =  mpp movement plan 
  |
  subqueryplan =  subquery plan 
  | viewpropertie =  view property   datum movement plan 
  =  view identifi   datum movement view plan  +  datum movement view plan  =  datum movement view plan  |
   datum movement view plan 
  +  datum movement view plan  = jdbc  datum source identifi  |  mpp movement plan  =  view identifi   mpp movement view plan 
  +  mpp movement view plan  =  mpp movement view plan  |
   mpp movement view plan 
  +  mpp movement view plan  = |  subquery plan 
  = | hash | merge | nest order | reverseorder |  view property  =  view identifi   view property 
   view property 
  +  view property  = begindelimiter =  literal  cache
  execution engine deactivate cache engine query retrieve datum source
  execution engine execute query cache configuration view
  default value
  section cache explain detail configure cache view
  cache_atomic_operation
  default task cache engine perform atomically mark datum invalid cache mark valid datum store cache database
  parameter false operation atomic
  parameter section cache large datum set administration guide
  default value true cache_invalidate
  behavior parameter change depend cache mode view
  view partial cache parameter matching_row query pattern associate execute query invalidate datum retrieve source store cache
  example let execute follow query select v result obtain source store cache
  select v result obtain cache
  select v context \u00a0   cache_invalidate
  = matching_row cache datum reach time live invalidated
  result obtain source cache
  view partial cache use parameter cache_invalidate = all_row
  section cache module administration guide explain concept query pattern
  view   cache cache load automatically
  instead cache load result query parameter cache_preload context
  cache_invalidate all_row "content" cache view delete cache result query
  cache_invalidate matching_row row cache match condition query invalidate
  cache_invalidate matching_pk vdp update cache row primary key match primary key new row insert row primary key cache
  cache_invalidate parameter include context clause result query cache delete exist datum parameter section load cache invalidate exist datum administration guide
  default value invalidation cache datum
  cache_invalidate_block_size
  cache datum view invalidate non atomic way cache_atomic_operation = context clause cache row invalidate block
  parameter set size block
  parameter section cache large datum set administration guide
  default value 10000 cache_load_on_error
  default result query fail cache
  true result query fail cache
  example let execute union view branch union fail want cache result obtain branch union
  add parameter context clause value true
  default value false
  cache_preload
  cache load manually cache mode view  partial explicit load
  value parameter true result query insert cache
  use cache mode view  partial explicit load
  default value false cache_return_query_result
  false query process entirely return datum use parameter speed process load cache view section mode administration guide
  default value true cache_wait_for_load
  true query finish datum completely store cache
  parameter work load cache view cache mode partial explicit load 
  false query finish client receive row store cache parameter section mode administration guide
  default value false compute_stats_on_target
  true virtual dataport execute compute stat command impala create remote table summary view
  false run command
  default value false impala 3.x kudu costoptimize
  execution engine disable cost base optimization calculate execution plan query section cost base optimization administration guide
  default value datamovementplan
  parameter define data movement execution query
  section datum movement administration guide explain data movement subsection example contain example use datamovementplan parameter
  mppmovementplan
  parameter define data movement view massive parallel processing database
  section parallel processing explain example use parameter data_movement_bulk_load
  execution engine perform data movement query execution engine use bulk load api target database
  default value data_movement_clean_resource data_movement_clean_resources_on_error data_movement_clean_resources_on_error section option context clause control data movement administration guide explain property affect data movement format
  default virtual dataport preserve format create view statement
  preserve add parameter format = yes context clause statement
  feature useful long create view statement format way easy read want format
  administration tool automatically add parameter manually edit vql derive view
  i18n
  internationalization configuration result query
  parameter valid internationalization configuration value e.g. es_euro
  example follow statement obtain row view v set us_pst internationalization configuration query select v context i18n = us_pst nodelegateview
  list view delegate datum source execution query
  scenario data combination delegate source want e.g. bad performance limit resource source
  scenario useful specify want delegate certain view
  example view incident join jdbc base view internet_inc phone_inc create datum source
  query select incident result send join query database select phone_inc inner join internet_inc
  use execute select incident context('nodelegateview
  = incident
  virtual dataport send query database select phone_inc select internet_inc querytimeout
  maximum time millisecond server wait query finish
  period server cancel query
  client connect virtual dataport jdbc odbc establish default timeout query
  parameter change timeout query change default query timeout parameter connection
  0 query cancel
  simplify
  execution engine enable automatic simplification query
  disable query section automatic simplification query administration guide
  default value summary_rewrite
  query optimizer use summary available query
  possible value default
  information feature page smart query acceleration summary administration guide subqueryplan
  view subquerie add subqueryplan parameter context clause subquery modify query plan subquery
  section subquerie clause query
  swap
  indicate swap enable query
  parameter value indicate swap intermediate result permit query run
  value indicate opposite
  section configure swap policy detail
  swapsize
  parameter indicate maximum size intermediate result obtain run query reach swap disk
  maximum size megabyte parameter
  effective swap option specify
  section configure swap policy detail
  username password domain
  parameter account datum source create clause pass session credential type jdbc web service bapi multidimensional datum source
  use option query view data source credential connect server example view1 create jdbc datum source option pass session credential
  execute select view1 context(username
  = admin password = d4gvpka5biwogufrnh92dnq5ttnkww58i86pvh2tqis q1rh9ckcojj57nnqulmvgvvvnbvlah8nfsdm0x5fwcjiavyia70oxiuwbtokkhl3ztgh1hzlcqiqkpxt oyd encrypt server connect database view username admin password password ignore credential provide user connect server
  mandatory add token encrypt enter password encrypt
  encrypt password execute statement encrypt_password
  example encrypt_password my_secret_password note domain source web service ntlm authentication
  var
  use parameter set value variable execute view use function getvar
  section add variable selection condition getvar setvar information context variable
  example follow query obtain client max income 1000000
  select client
  income  getvar('_var_client_income_limit int 500000 context('var var_client_income_limit = 1000000 viewpropertie
  enable indicate series property view form query tree
  option require write privilege view
  currently begindelimiter parameter support
  parameter apply df base view section json source description datum source begindelimiter parameter dynamically choose point begin access delimit source file regular expression
  isdata specify delimiter consider form datum
  example let v2 df base view create base datum source delimit file type form v definition tree follow statement obtain tuple delimit file tuple match regular expression specify case
  start stre 05/24/2008 select v context viewpropertie = v2:('begindelimiter = 05/24/2008 isdata note view property option deprecate new application
  need specify runtime value begindelimiter parameter delimit file datum source use interpolation variable value parameter section path value interpolation variable administration guide
  note apart property set value selection condition variable view involve query
  appendix add variable selection condition getvar setvar explain selection condition variable
  context clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/context_clause/context_clause#syntax-of-the-context-clause</field><field name="content">
  syntax context clause  context information  = cache = | default | cache_atomic_operation = true | false true default | cache_invalidate = matching_row | matching_pk | all_row matching_row default | cache_invalidate_block_size =  literal  10000 default | cache_load_on_error = true | false false default | cache_preload = true | false false default | cache_return_query_result = true | false true default | cache_wait_for_load = true | false false default | compute_stats_on_target = true | false false default impala 3.x kudu | costoptimize = | default | data_movement_bulk_load = | default | data_movement_clean_resource = true | false true default | data_movement_clean_resources_on_error = true | false true default | i18n =  literal  e.g. es_euro | nodelegateview =  literal  | querytimeout =  literal  | simplify = |
  default | summary_rewrite = |
  default | swap = | | swapsize =
   number  | var  var 
  =  literal  |
  username =  literal  | password =
   literal  encrypt
  | domain =  literal  |
  datamovementplan =  datum movement plan 
  | mppmovementplan =  mpp movement plan 
  |
  subqueryplan =  subquery plan 
  | viewpropertie =  view property   datum movement plan 
  =  view identifi   datum movement view plan  +  datum movement view plan  =  datum movement view plan  |
   datum movement view plan 
  +  datum movement view plan  = jdbc  datum source identifi  |  mpp movement plan  =  view identifi   mpp movement view plan 
  +  mpp movement view plan  =  mpp movement view plan  |
   mpp movement view plan 
  +  mpp movement view plan  = |  subquery plan 
  = | hash | merge | nest order | reverseorder |  view property  =  view identifi   view property 
   view property 
  +  view property  = begindelimiter =  literal 
  syntax context clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/trace_clause/trace_clause#trace-clause</field><field name="content">
  trace clause add trace clause end select statement server return execution trace query execute query administration tool
  execute query client e.g. jdbc client obtain information
  execution trace query provide detailed information execution engine process query
  plan model tree node represent intermediate view involve execution query access datum source
  administration tool add clause trace query execute provide graphical interface analyze execution trace query section execution trace statement administration guide
  addition use trace viewer load trace query execute administration tool
  information execution trace provide node node type
  node view indicate type view base view union join selection intersect etc
  access source wrapper indicate type datum source jdbc web service web etc
  execution time
  time spend completely execute node child
  start time
  exact moment node processing begin execution plan
  end query time
  exact moment node processing child end execution plan
  time tuple result obtain
  time spend node receive tuple process
  number tuple process
  number tuple process node status
  indicate node correctly execute error occur advanced parameter
  provide detail node type
  example case wrapper type node exact sub query execute datum source connection datum access indicate
  view type node indicate cache swap necessary etc indicate
  parameter particular interest optimization reason delegation cause
  view define base table jdbc odbc data source virtual dataport try delegate entire process source database obtain tuple view single query
  strategy save significant execution time complex view
  virtual dataport unable delegate entire process certain query source database indicate reason parameter
  example query use expression include function support source database force virtual dataport post process result obtain
  light reason processing delegate possible rewrite view delegate
  error condition
  trace indicate error produce node execution
  example figure execution trace follow query select internet_inc trace internet_inc base view create table accessible jdbc datum source
  execution trace base plan = internet_inc starttime = d jan 10 17:50:01 850 gmt+01:00 2007 endtime = d jan 10 17:50:04 063 gmt+01:00 2007 responsetime
  = d jan 10 17:50:04 053 gmt+01:00 2007 numrow = 4 state = ok complete = true field =
  iinc_id summary ttime taxid specific_field1 specific_field2 search condition = filter condition = numoffilteredtuple = 0
  numofduplicatedtuple = 0 numofswappedtuple = 0 swap = false jdbc wrapper = internet_inc starttime = d jan 10 17:50:02 070 gmt+01:00 2007 endtime = d jan 10 17:50:04 063 gmt+01:00 2007 responsetime
  = d jan 10 17:50:04 063 gmt+01:00 2007 numrow = 4 state = ok complete = true searchcondition = orderbyfield =
  projectedfield = iinc_id summary ttime taxid specific_field1 specific_field2
  jdbc route = internet_inc#0 starttime = d jan 10 17:50:03 782 gmt+01:00 2007 endtime = d jan 10 17:50:04 063 gmt+01:00 2007 responsetime
  = d jan 10 17:50:04 063 gmt+01:00 2007 numrow = 4 state = ok complete = true sqlsentence = select t0.iinc_id t0.summary t0.ttime t0.taxid t0.specific_field1 t0.specific_field2 test_vdb.internet_inc t0 parameter = dburi = jdbc mysql://localhost test_vdb username = vdb connectiontime = 0 cachedstatus = false
  trace clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/trace_clause/trace_clause#execution-trace</field><field name="content">
  execution trace base plan = internet_inc starttime = d jan 10 17:50:01 850 gmt+01:00 2007 endtime = d jan 10 17:50:04 063 gmt+01:00 2007 responsetime
  = d jan 10 17:50:04 053 gmt+01:00 2007 numrow = 4 state = ok complete = true field =
  iinc_id summary ttime taxid specific_field1 specific_field2 search condition = filter condition = numoffilteredtuple = 0
  numofduplicatedtuple = 0 numofswappedtuple = 0 swap = false jdbc wrapper = internet_inc starttime = d jan 10 17:50:02 070 gmt+01:00 2007 endtime = d jan 10 17:50:04 063 gmt+01:00 2007 responsetime
  = d jan 10 17:50:04 063 gmt+01:00 2007 numrow = 4 state = ok complete = true searchcondition = orderbyfield =
  projectedfield = iinc_id summary ttime taxid specific_field1 specific_field2
  jdbc route = internet_inc#0 starttime = d jan 10 17:50:03 782 gmt+01:00 2007 endtime = d jan 10 17:50:04 063 gmt+01:00 2007 responsetime
  = d jan 10 17:50:04 063 gmt+01:00 2007 numrow = 4 state = ok complete = true sqlsentence = select t0.iinc_id t0.summary t0.ttime t0.taxid t0.specific_field1 t0.specific_field2 test_vdb.internet_inc t0 parameter = dburi = jdbc mysql://localhost test_vdb username = vdb connectiontime = 0 cachedstatus = false
  execution trace
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/case_clause/case_clause#case-clause</field><field name="content">
  case clause case clause provide type logic
  case syntax case  value expression 
   compare_value expression  result  compare_value expression  result
  result
  end case  condition  result  condition  result
  result
  end  condition  =  condition   condition  |  condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value  
  binary operator   value   value 
  |  value   value   value  |  value   unary operator 
  case clause different way case evaluate expression obtain value
  compare value expression clause
  find match return result value
  case evaluate condition clause find match
  return result value
  case clause matching condition case return null
  result expression compatible type
  instance possible result type boolean integer
  possible result type integer float
  appendix case clause example example use case
  case clause
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/queries_select_statement/case_clause/case_clause#case-syntax</field><field name="content">
  case syntax case  value expression 
   compare_value expression  result  compare_value expression  result
  result
  end case  condition  result  condition  result
  result
  end  condition  =  condition   condition  |  condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value  
  binary operator   value   value 
  |  value   value   value  |  value   unary operator 
  case syntax
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_a_derived_view#defining-a-derived-view</field><field name="content">
  define derive view administrator use base view system define new relation
  new relation derive view
  derive view create statement create view
  syntax create view statement create replace
  view  identifi  folder =  literal 
  description =  literal 
   primary key 
   tag list 
   field property 
   field property 
   select  parameter  parameter 
   parameter 
  order  field 
  asc | desc
   field 
  asc | desc
  cascade | local
  check option
  context  context information 
   context information 
   field property  =  identifi   property list 
   tag list 
   parameter  =  fieldname identifi   fieldtype identifi 
   default literal   primary key  = syntax statement create table
   property list  = syntax statement create table  select  = syntax select statement  tag list  = syntax statement create table
   context information  = syntax select statement
  query define specify create view
  query specify syntax select statement explain detail section query select statement
  administrator create new derive view combine exist view operator union join cartesian product selection projection group operation intersection minus operation flatten operation
  furthermore exist derive view create new derive view allow view tree level require
  example consider view b r base relation directly access source obtain datum administrator define view g join result apply union b r figure
  example view define accordance optional order clause indicate query view result order field(s
  asc sort ascend order desc descend order
  asc desc omit virtual dataport sort ascend order
  creation view accept sql standard clause check option relate update view "content" insert update delete statement
  function modifier describe detail section use check option
  use replace modifier specifie view indicate replace new view
  change view definition query capability derive view alter e.g. addition field query restriction previously exist virtual dataport update schema query capability upper level derive view possible
  primary key clause set definition primary key view
  information primary key section primary key view administration guide
  clause parameter define parameter derive view
  section parameter derive view administration guide
  define derive view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_a_derived_view#syntax-of-the-create-view-statement</field><field name="content">
  syntax create view statement create replace view  identifi  folder =  literal 
  description =  literal 
   primary key 
   tag list 
   field property 
   field property 
   select  parameter  parameter 
   parameter 
  order  field 
  asc | desc
   field 
  asc | desc
  cascade | local
  check option
  context  context information 
   context information 
   field property  =  identifi   property list 
   tag list 
   parameter  =  fieldname identifi   fieldtype identifi 
   default literal 
  syntax create view statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_a_derived_view#example-of-how-a-view-is-defined-in-accordance-with-others</field><field name="content">
  example view define accordance
  example view define accordance
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/modifying_a_derived_view/modifying_a_derived_view#modifying-a-derived-view</field><field name="content">
  modify derive view change follow property derive view statement alter view cache configuration parameter cache timetoliveincache section cache
  virtual dataport swap policy configuration swap swapsize maxresultsize parameter section configure swap policy
  declare cache index define cache index
  section cache index administration guide
  datamovementplan change data movement plan define view
  subview datum movement plan want leave unchanged leave parenthesis
  example alter view test datamovementplan = internet_inc jdbc ds1 add remove primary key constraint base view  add key   drop key  definition
  information primary key section primary key view administration guide
  delegatestatsquery false query execute gather statistic view push source
  instead virtual dataport retrieve datum execute select table execute aggregation function locally
  true present query push source possible
  set false equivalent select check box delegate generation statistic   statistic tab view advanced wizard
  find information option section gather statistic view administration guide
  layout administration tool edit derive view model tab display subview view
  parameter set position subview tab
  parameter set tool position subview default location
  interface view set position implementation view implementation tab
  note tis parameter affect way behavior view
  rename view alter view  current
  identifi  rename  new identifi  add change remove primary key view  add key   drop key  definition
  information primary key section primary key view administration guide
  add modify description field use alter column  field identifi  add description =
   description literal 
  example alter view order alter column order_id add description = unique identifi order syntax alter view statement alter view  identifi  cache | partial exact
  preload | |
  invalidate cascade
  noatomic invalidateblocksize  integer 
   condition 
  batchsizeincache  integer  | default
  timetoliveincache  second integer  | default | noexpire
  swap | | default
  swapsize  megabyte integer 
  maxresultsize  megabyte integer 
   table index clause 
  datamovementplan =  datum movement plan 
  delegatestatsquery =  boolean 
  description =  literal 
  | alter view  identifi  rename
   new_name identifi  | alter view  identifi   alter column clause+
  | alter view
   view identifi  layout  subview1 identifi 
  =  bind 
   subview identifi 
  =  bind 
  
   alter column clause  = alter column  field identifi  add description =  description literal 
   table index clause  = declare cache index  identifi   table index field  table index field 
  
  
  | delete cache index  identifi   table index field  =  field identifier 
  asc | desc
   datum movement plan  =  view identifi   datum movement view plan 
  +  datum movement view plan  =  datum movement view plan  |
   datum movement view plan 
  +  datum movement view plan  = jdbc  datum source identifi  |  bind  =  x1 int   y1 int   x2 int   y2 int 
  modify derive view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/modifying_a_derived_view/modifying_a_derived_view#syntax-of-the-alter-view-statement</field><field name="content">
  syntax alter view statement alter view  identifi  cache | partial exact
  preload | |
  invalidate cascade
  noatomic invalidateblocksize  integer 
   condition 
  batchsizeincache  integer  | default
  timetoliveincache  second integer  | default | noexpire
  swap | | default
  swapsize  megabyte integer 
  maxresultsize  megabyte integer 
   table index clause 
  datamovementplan =  datum movement plan 
  delegatestatsquery =  boolean 
  description =  literal 
  | alter view  identifi  rename
   new_name identifi  | alter view  identifi   alter column clause+
  | alter view
   view identifi  layout  subview1 identifi 
  =  bind 
   subview identifi 
  =  bind 
  
   alter column clause  = alter column  field identifi  add description =  description literal 
   table index clause  = declare cache index  identifi   table index field  table index field 
  
  
  | delete cache index  identifi   table index field  =  field identifier 
  asc | desc
   datum movement plan  =  view identifi   datum movement view plan 
  +  datum movement view plan  =  datum movement view plan  |
   datum movement view plan 
  +  datum movement view plan  = jdbc  datum source identifi  |  bind  =  x1 int   y1 int   x2 int   y2 int 
  syntax alter view statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_an_interface_view/defining_an_interface_view#defining-an-interface-view</field><field name="content">
  define interface view interface view special type derive view consist definition field reference view
  use design define field interface later set implementation view interface
  server execute query involve interface query delegate implementation view
  interface view create statement create interface view
  syntax create interface view statement create replace
  interface view  identifi   field 
   field 
  set implementation  view identifi 
   field identifier 
  =  expression value 
   field identifier 
  =  expression value 
  folder =  literal 
  description =  literal 
   tag list 
   view identifier  = basic element vql statement
   field  = syntax statement create table  tag list  = syntax statement create table example create interface view i_order d long customer_id long status text order_date timestamp comment text set implementation order folder = /interface view statement create interface view field
  d customer_id status order_date set order implementation view set implementation clause
  syntax interface view i_order implementation order number field
  create interface view implementation view match definition interface define expression field interface
  example create replace interface view i_order d long customer_id long status text order_date timestamp
  set implementation order d
  = d customer_id = customer_id status = coalesce(status  new order  order_date = order_date
  folder = /interface view
  example status field interface map expression instead field
  view order field account definition interface   
  modify definition interface view change implementation use alter interface view statement
  syntax alter interface view statement alter interface view  identifi   field identifi   field type 
   field identifi   field type 
  set implementation  view identifi 
   field identifier 
  =  expression value 
   field identifier 
  =  expression value 
   view identifier  = basic element vql statement
  example alter interface view i_order d long customer_id long status text
  set implementation another_view statement remove field order_date definition interface change implementation view interface
  delete interface view use statement drop interface view syntax drop statement
  modify property interface view use statement alter view derive view
  example rename interface view rename interface view i_order   i_order_full  alter view i_order
  rename i_order_full add change description field interface view set description field interface view alter view i_order alter column d add description = unique d order
  alter column status add description = value column new accept packaging send interface view folder interface view i_order folder customer360  alter folder /customer360 view i_order
  define interface view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_an_interface_view/defining_an_interface_view#syntax-of-the-create-interface-view-statement</field><field name="content">
  syntax create interface view statement create replace
  interface view  identifi   field 
   field 
  set implementation  view identifi 
   field identifier 
  =  expression value 
   field identifier 
  =  expression value 
  folder =  literal 
  description =  literal 
   tag list 
  syntax create interface view statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_an_interface_view/defining_an_interface_view#syntax-of-the-alter-interface-view-statement</field><field name="content">
  syntax alter interface view statement alter interface view  identifi   field identifi   field type 
   field identifi   field type 
  set implementation  view identifi 
   field identifier 
  =  expression value 
   field identifier 
  =  expression value 
  
  syntax alter interface view statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_an_interface_view/defining_an_interface_view#id1</field><field name="content">
  rename interface view i_order   i_order_full  alter view i_order
  rename i_order_full
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_an_interface_view/defining_an_interface_view#id2</field><field name="content">
  set description field interface view alter view i_order alter column d add description = unique d order
  alter column status add description = value column new accept packaging send
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_a_derived_view/defining_an_interface_view/defining_an_interface_view#id3</field><field name="content">
  interface view i_order folder customer360  alter folder /customer360 view i_order
  id3
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_the_statistics_of_a_view/defining_the_statistics_of_a_view#defining-the-statistics-of-a-view</field><field name="content">
  define statistic view cost base optimization virtual dataport use statistic view information index datum source estimate cost alternative execution plan query select low estimate cost
  section cost base optimization administration guide
  recommend administration tool gather store statistic view
  enter statistic manually create viewstatsummary statement
  section list statement manage statistic base view derive view
  store statistic view use command create viewstatsummary
  cost base optimization syntax create viewstatsummary create replace
  viewstatsummary  view identifi  set enable =  boolean 
  set numofrow
  =  number row view
  long 
  set stat  statistic table 
   statistic table  =  statistic header  value  field statistic 
   field statistic 
   statistic header  = fieldname  property 
   property 
   property  = avgsize | maxvalue |
  minvalue | numofdistinctvalue |
  numofnullvalue  field statistic  =  field identifi   property value 
   property value 
   property value  = null
  |  value
  number  |  value literal 
  example cost base optimization example create viewstatsummary create
  replace viewstatsummary internet_inc set enable = true set numofrow = 4125 set stat fieldname avgsize maxvalue minvalue numofdistinctvalue numofnullvalue value iinc_id 8.0 4 1 4 0 summary 21.0 install aditional line bandwidth increase null 40 ttime 186.0 null 2005 06 30t04:19:41 + 0200 null 0 taxid 9.0 null b78596011 null 1238 specific_field1 1.0 3 1 3 2133 specific_field2 1.0 3 1 3 998
  enable true execution engine use statistic view estimate cost execute query
  false statistic
  stat clause indicate statistic field provide value clause avgsize field type text average length field value
  field type average size byte
  maxvalue maximum value field
  minvalue minimum value field
  numofdistinctvalue number distinct value field
  numofnullvalue number null value field
  want provide statistic field enter null
  e.g. possible provide size blob value
  modify exist statistic view use alter viewstatsummary statement cost base optimization alter viewstatsummary statement alter viewstatsummary  view identifi  set enable =  enable boolean 
  set numofrow
  =  num row
  long 
  set stat  statistic table 
   statistic table  = cost base optimization syntax create viewstatsummary use follow command manage statistic view list viewstatsummarie return list view statistic
  desc vql viewstatsummary  view  return statistic view
  drop viewstatsummary  view  delete statistic view
  define statistic view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_the_statistics_of_a_view/defining_the_statistics_of_a_view#cost-based-optimization-syntax-of-create-viewstatsummary</field><field name="content">
  cost base optimization syntax create viewstatsummary create replace
  viewstatsummary  view identifi  set enable =  boolean 
  set numofrow
  =  number row view
  long 
  set stat  statistic table 
   statistic table  =  statistic header  value  field statistic 
   field statistic 
   statistic header  = fieldname  property 
   property 
   property  = avgsize | maxvalue |
  minvalue | numofdistinctvalue |
  numofnullvalue  field statistic  =  field identifi   property value 
   property value 
   property value  = null
  |  value
  number  |  value literal 
  cost base optimization syntax create viewstatsummary
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_the_statistics_of_a_view/defining_the_statistics_of_a_view#cost-based-optimization-example-of-create-viewstatsummary</field><field name="content">
   
  cost base optimization example create viewstatsummary
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_the_statistics_of_a_view/defining_the_statistics_of_a_view#cost-based-optimization-alter-viewstatsummary-statement</field><field name="content">
   
  cost base optimization alter viewstatsummary statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/insert_statement/insert_statement#insert-statement</field><field name="content">
  insert statement insert statement insert tuple view update underlie datum source
  syntax insert statement insert  view identifier 
   field 
   field  value  value 
   value 
  return  field 
   field 
  context  context information 
   context information 
  trace insert  view identifi  value  value 
   value 
  return  field 
   field 
  
  context  context information 
   context information 
  trace insert  view identifier   field 
   field 
  return  field 
   field  value  value 
   value 
   value 
   value 
  trace insert  view identifier  set  field 
  =  value 
   field 
  =  value 
  return  field 
   field 
  context  context information 
   context information 
  trace insert  identifi base view remote table  |  materialize table identifier
   |
   temporary table identifier  duplicate key update |
  duplicate key  field 
   field  update option  option information 
   option information 
   select query  context  context information 
   context information 
  trace  field  =  identifier[.identifier 
   value  = null |
   number  |  boolean  |
   literal  |  function   view identifier  = basic element vql statement  identifi base view remote table  = base view create create_remote_table procedure create remote table form
   materialize table identifier  = materialize table  temporary table identifier  = temporary table
   option information 
  = optional parameter configure insertion
  create remote table command information option available
   select query  = syntax select statement section return modify row explain return clause work
  insert view  select query 
  command follow step select query delegable datum source target view direct load possible vdp execute insert table  select query  command target datum source
  select query delegable execute select query vdp server
  insert view row obtain execution query previous step
  type insert require data source support data movement optimization
  datum source require enable bulk datum load support datum movement
  follow privilege necessary execute command insert view
  execute view reference select query
  insert view duplicate key update  select query 
  command follow step select query delegable datum source target view direct load possible vdp execute merge table
   select query  command target datum source
  command merge result select query target table
  select query delegable create temporary table cache datum source insert result select query
  merge temporary table target table know upsert drop temporary table
  view meet follow requirement support cache load method target view primary key
  view column indicate row add update
  virtual dataport support push source condition field indicate row add update
  source remove row datum add update
  row delete source view return delete row cache view invalidate cache
  scenario meet requirement row actually delete instead mark delete invalid
  section datum source support merge datum list datum source support command
  follow requirement necessary execute command mysql postgresql key primary key view unique index
  mysql vdp error multiple unique restriction table
  mysql recommend avoid use duplicate key update clause table multiple unique index
  info teradata target table vdp insert datum primary index insert command fail
  create_remote_table store procedure create primary index teradata possible
  read store procedure documentation information
  try execute insert view duplicate key update command table create primary index follow error invalid statement attempt table primary index merge nopi table allow
  example add row view internet_inc insert internet_inc iinc_id summary taxid specific_field1 specific_field2 value 6 error adsl router b78596015 5 6
  row add source database table associate internet_inc view
  alternative syntax add row view internet_inc insert internet_inc set iinc_id
  = 6 summary = error adsl router taxid = b78596015 specific_field1 = 5 specific_field2 = 6 add row view insert employee last_name first_name title value callahan laura staff edward nancy sale manager king robert staff insert select query insert all_sale select online_sale
  year = getyear(current_date insert update select query insert all_sale duplicate key(sale_id
  update select online_sale modification_date  @last_refresh_date command insert update new modify online sale insertion all_sale view
  field modification_date contain timestamp row insert modify
  query execution variable @last_refresh_date replace timestamp time query insert datum view all_sale execute finish successfully
  command use sale_id field determine row cache
  row cache row source consider value field
  command explicitly set comparison field use primary key view
  insert binary datum insert files(file value ffd8ffdb00430003020202020203020202030303030406040404040408060605060 9080a0a090809090a0c0f0c0a0b0e0b09090d110d0e0f101011100a0c12131210130f101010ffc9000b080001000101011100ffcc000 600101005ffda0008010100003f00d2cf20ffd9 binary datum encode hexadecimal code
  operation work oracle sqlserver mysql postgresql teradata
  insert statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/insert_statement/insert_statement#syntax-of-the-insert-statement</field><field name="content">
  syntax insert statement insert  view identifier   field 
   field  value  value 
   value 
  return  field 
   field 
  context  context information 
   context information 
  trace insert  view identifi  value  value 
   value 
  return  field 
   field 
  
  context  context information 
   context information 
  trace insert  view identifier   field 
   field 
  return  field 
   field  value  value 
   value 
   value 
   value 
  trace insert  view identifier  set  field 
  =  value 
   field 
  =  value 
  return  field 
   field 
  context  context information 
   context information 
  trace insert  identifi base view remote table  |  materialize table identifier
   |
   temporary table identifier  duplicate key update |
  duplicate key  field 
   field  update option  option information 
   option information 
   select query  context  context information 
   context information 
  trace  field  =  identifier[.identifier 
   value  = null |
   number  |  boolean  |
   literal  |  function 
  syntax insert statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/update_statement/update_statement#update-statement</field><field name="content">
  update statement update statement allow modify value certain attribute tuple view verify certain condition directly update underlie datum source
  syntax update statement update  view identifier  set  field 
   field 
  =  value 
   value 
   condition 
  return  return option 
  context  context information 
   context information 
  trace update  view identifier  set  field 
  =  complex value 
   field 
  =  complex value 
   condition 
  return  return option 
  context  context information 
   context information 
  trace update  view identifier  set  field 
   field 
  =  complex select 
   condition 
  return  return option 
  context  context information 
   context information 
  trace  field  =  identifier[.identifier 
   value  = null |
   number  |  boolean  |
   literal  |
   field  |
   function 
   complex value  =  value  |  complex select   condition  =  condition   condition  |
   condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value   unary operator 
   return option  = generate key |  number 
   number 
  |  field 
   field 
   view identifier  = basic element vql statement section return modify row explain return clause work
  example example 1 follow statement update tuple internet_inc view value iinc_id 6 set 10 value attribute specific_field1 specific_field2 update internet_inc set specific_field1 specific_field2 = 10 10
  iinc_id = 6 result execute statement correspond tuple source database alter table associate internet_inc view
  example 2 possible use alternative syntax update internet_inc set specific_field1 = 10 specific_field2 = 10 iinc_id
  = 6 example 3 jdbc datum source possible update tuple internet_inc view value subquery return row update query delegable unique jdbc datum source
  update internet_inc set specific_field1 specific_field2 = select b.rating b.comment internet_inc_rate b b.id = iinc_id iinc_id = 6 example 4 subquery apply single view field update internet_inc set specific_field1 = select b.rate internet_inc_rating b b.id = iinc_id iinc_id = 6 specific_field2 = literal_value iinc_id summary select b.iinc_id b.summary internet_inc_rate b
  b.summary = value_to_update
  update statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/update_statement/update_statement#syntax-of-the-update-statement</field><field name="content">
  syntax update statement update  view identifier  set  field 
   field 
  =  value 
   value 
   condition 
  return  return option 
  context  context information 
   context information 
  trace update  view identifier  set  field 
  =  complex value 
   field 
  =  complex value 
   condition 
  return  return option 
  context  context information 
   context information 
  trace update  view identifier  set  field 
   field 
  =  complex select 
   condition 
  return  return option 
  context  context information 
   context information 
  trace  field  =  identifier[.identifier 
   value  = null |
   number  |  boolean  |
   literal  |
   field  |
   function 
   complex value  =  value  |  complex select   condition  =  condition   condition  |
   condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value   unary operator 
   return option  = generate key |  number 
   number 
  |  field 
   field 
  syntax update statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/delete_statement/delete_statement#delete-statement</field><field name="content">
  delete statement delete statement delete tuple view verify certain condition update underlie datum source
  syntax delete statement delete  view identifier 
   condition 
  context  context information 
   context information 
  trace  condition  =  condition   condition  |
   condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value   unary operator 
  example follow statement delete tuple internet_inc view value iinc_id attribute great 4 delete internet_inc iinc_id  4 result execute statement correspond tuple source database delete table associate internet_inc view
  note statement work microsoft excel source limitation excel odbc driver provide microsoft window
  finally delete condition subquery delete query delegable unique jdbc datum source delete v
  d select b.id v2 b b.field2 = beta
  delete statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/delete_statement/delete_statement#syntax-of-the-delete-statement</field><field name="content">
  syntax delete statement delete  view identifier 
   condition 
  context  context information 
   context information 
  trace  condition  =  condition   condition  |
   condition   condition  |  condition  |
   condition 
  |  value  
  binary operator   value 
   value 
  
  |  value   unary operator 
  syntax delete statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/return_modified_rows/return_modified_rows#return-modified-rows</field><field name="content">
  return modify row time useful obtain value row insert modify database
  insert update statement support return clause allow single statement
  clause avoid execute query insert update obtain value row insert modify insert update
  return clause indicate field want obtain value
  add return insert useful obtain type value value field auto incremental
  field new row database automatically assign identifier
  value field auto generate
  field database assign value calculate base value field row
  value field default value
  field database automatically assign value insert provide
  example insert employee email deparment_id value jackson peter pjackson@acme.com 10 return salary insert return value field salary employee
  example assume database automatically assign value field salary new employee insert provide   
  update datum available return new "content" modify row
  example update employee set salary = salary 1.03 department = hr return salary bonus statement modify value column salary return bonus new salary employee department human resource
  limitation  
  feature available view datum come jdbc database type source
  feature rely underlie database return request field
  database support return limitation field pass return clause
  example database ignore return clause update statement update modify row
  database support return value primary key etc
  execution engine denodo check limitation pass database field return clause
  underlie database return error insert update try obtain value database return
  return modify row
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/return_modified_rows/return_modified_rows#limitations</field><field name="content">
  limitation  
  feature available view datum come jdbc database type source
  feature rely underlie database return request field
  database support return limitation field pass return clause
  example database ignore return clause update statement update modify row
  database support return value primary key etc
  execution engine denodo check limitation pass database field return clause
  underlie database return error insert update try obtain value database return
  limitation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/inserts_updates_and_deletes_over_views/use_of_with_check_option/use_of_with_check_option#use-of-with-check-option</field><field name="content">
  use check option create view use sql standard clause check option cascade
  view create option datum update inconsistent definition view reject
  example incidents_acme view define follow statement create view incidents_acme select internet_inc taxid = b78596011 check option
  follow insert statement fail insert incidents_acme iinc_id summary ttime taxid specific_field1 specific_field2 value 6 error adsl router 31 mar-2005 22h 35 m 24 b78596015 5 6
  statement fail value taxid field meet condition incidents_acme view
  view create check option cascade clause server check insert value meet condition view condition subview
     automatic simplification query enable execute insert update delete query derive view server assume view create option check option
  result server check datum insert update delete meet condition definition view
  use check option
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/refresh_views/refresh_views#refreshing-views</field><field name="content">
  refreshing view virtual dataport refresh datum base view
  refresh command refresh datum store underlie datum source
  delete current datum store table insert new datum
  datum obtain execute datum load query create remote table
  command support base view create create_remote_table store procedure
  refresh statement refresh statement allow refreshing datum view
  command update datum underlie datum source
  follow step truncate remote table datum source
  remote table exist vdp create
  execute vdp server data load query create remote table
  insert table row obtain execution query previous step
  remote table exist vdp recreate index remote table
  syntax refresh statement refresh  crt_base_view identifi  option  option information   option information 
  context  context information 
   context information 
  trace  crt_base_view  = base view create create_remote_table procedure create remote table form basic element vql statement
   option information 
  = optional parameter configure refresh
  create remote table command information option available
   context information  = clause modify certain configuration preference execute query override value configure default syntax context clause
  privilege require user need privilege insert view connect write database view
  execute view reference datum load query
  example follow example refresh base view create create_remote_table store procedure
  command create remote table sales_current_year base view sales_year
  create_remote_table('sales_current_year false select sale
  year = getyear(current_date data_source_database_name data_source_name null schema_name denodo_database_name sales_year false command refresh datum base view sales_year
  refresh sales_year refresh command follow step truncate sales_year insert sales_year select sale year = getyear(current_date
  refreshing view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/refresh_views/refresh_views#refresh-statement</field><field name="content">
  refresh statement refresh statement allow refreshing datum view
  command update datum underlie datum source
  follow step truncate remote table datum source
  remote table exist vdp create
  execute vdp server data load query create remote table
  insert table row obtain execution query previous step
  remote table exist vdp recreate index remote table
  syntax refresh statement refresh  crt_base_view identifi  option  option information   option information 
  context  context information 
   context information 
  trace  crt_base_view  = base view create create_remote_table procedure create remote table form basic element vql statement
   option information 
  = optional parameter configure refresh
  create remote table command information option available
   context information  = clause modify certain configuration preference execute query override value configure default syntax context clause
  privilege require user need privilege insert view connect write database view
  execute view reference datum load query
  example follow example refresh base view create create_remote_table store procedure
  command create remote table sales_current_year base view sales_year
  create_remote_table('sales_current_year false select sale
  year = getyear(current_date data_source_database_name data_source_name null schema_name denodo_database_name sales_year false command refresh datum base view sales_year
  refresh sales_year refresh command follow step truncate sales_year insert sales_year select sale year = getyear(current_date
  refresh statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/refresh_views/refresh_views#syntax-of-the-refresh-statement</field><field name="content">
  syntax refresh statement refresh  crt_base_view identifi  option  option information   option information 
  context  context information 
   context information 
  trace
  syntax refresh statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/transactions_in_virtual_dataport/transactions_in_virtual_dataport#transactions-in-virtual-dataport</field><field name="content">
  transaction virtual dataport virtual dataport allow define transaction follow clause begin
  begin transaction
  commit
  confirm active transaction rollback
  undo change active transaction
  transaction virtual dataport distribute nature
  datum source implement phase commit protocol
  database vendor implement protocol
  addition custom wrapper store procedure transaction provide necessary operation implement
  virtual dataport impose certain limit duration transaction transaction 30 minute
  transaction time rollbacke
  limit change execute command administrator account
  command set transaction timeout hour 3600 second
  set com.denodo.vdb.engine.session.transactiontimeout = 3600
  client start transaction idle 29 second
  i.e. execution statement finish client execute statement 30 second
  transaction rollbacke
  change limit execute command administrator account
  command set inactivity timeout minute 60 second
  set com.denodo.vdb.engine.session.inactivetransactiontimeout = 60 want datum source participate distribute transaction set source configuration property supportsdistributedtransaction
  note use transaction actually need
  i.e. surround query begin commit actually need query perform inside transaction
  reason virtual dataport use distribute transaction manager use 2 phase commit protocol
  protocol introduce overhead query
  add begin commit need query run unnecessarily slow
  default odbc interface denodo ignore request start transaction
  section disable transaction developer guide
  default jdbc driver denodo ignore invocation method jdbc api responsible manage transaction
  behavior control property autocommit
  property parameter jdbc driver default value   
  connect monitor interface server jmx interface obtain number active transaction
  section attribute vdbservermanagementinfo mbean administration guide
  transaction virtual dataport
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/stored_procedures#stored-procedures</field><field name="content">
  store procedure develop store procedure java import virtual dataport server invoke virtual dataport client
  follow subsection describe import denodo store procedure vql language invoke denodo store procedure describe box store procedure
  section develop store procedure developer guide explain develop denodo store procedure
  store procedure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/importing_a_stored_procedure/importing_a_stored_procedure#importing-a-stored-procedure</field><field name="content">
  import store procedure statement create procedure add new store procedure virtual dataport server
  syntax create procedure statement create replace procedure  identifi  classname  classname literal  classpath  classpath literal 
  jar  jar literal 
   jar literal 
  folder =  literal 
  description =  literal 
  classname java class implement store procedure
  class load server section import extension administration guide
  classpath list path jar file contain java class procedure
  use parameter recommend import jar file virtual dataport server reference jar clause
  way depend jar particular location
  jar list jar file upload virtual dataport server procedure depend
  use replace modifier specifie procedure indicate replace new procedure
  lead recalculation schemas query capability derive view procedure
  create store procedure modify alter procedure statement
  syntax alter procedure statement alter procedure  identifi 
  classname  classname literal 
  classpath =  classpath literal 
   classpath literal 
  jar  jar literal 
   jar literal 
  mean classname classpath clause create procedure statement
  import store procedure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/importing_a_stored_procedure/importing_a_stored_procedure#syntax-of-the-create-procedure-statement</field><field name="content">
  syntax create procedure statement create replace procedure  identifi  classname  classname literal  classpath  classpath literal 
  jar  jar literal 
   jar literal 
  folder =  literal 
  description =  literal 
  syntax create procedure statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/importing_a_stored_procedure/importing_a_stored_procedure#syntax-of-the-alter-procedure-statement</field><field name="content">
  syntax alter procedure statement alter procedure  identifi  classname  classname literal 
  classpath =  classpath literal 
   classpath literal 
  jar  jar literal 
   jar literal 
  syntax alter procedure statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/use_of_stored_procedures/use_of_stored_procedures#use-of-stored-procedures</field><field name="content">
  use store procedure  
  way invoke denodo store procedure invoke procedure clause select statement provide input parameter clause
  example select database_name type description view_type swap_active folder get_view
  input_database_name
  = customer360 input_init_create_date = addday(current_date -1 store procedure invoke way schema result include output parameter store procedure input parameter
  allow invoke store procedure way view join result store procedure
  statement syntax statement  procedurename identifi   paramvalue literal   paramvalue literal 
  context i18n =  literal 
  trace follow statement invoke store procedure get_view parameter input_database_name
  = customer360 get_view customer360 null null null null null null null null null null null input parameter store procedure optional pass null
  invoke procedure clause select statement
  example select avgrevenue calculateavgrevenue row('b78596011 row('b78596012 example input parameter calculateavgrevenue procedure array register
  register contain single field client tax d.   
  recommend invoke store procedure way query contain input parameter easy understand query
  know meaning parameter
  need provide value parameter
  unlike invoke procedure select statement allow join result procedure view
  use store procedure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/use_of_stored_procedures/use_of_stored_procedures#syntax-of-the-call-statement</field><field name="content">
  syntax statement  procedurename identifi   paramvalue literal   paramvalue literal 
  context i18n =  literal 
  trace
  syntax statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/predefined_stored_procedures#predefined-stored-procedures</field><field name="content">
  predefine store procedure follow subsection describe store procedure include box virtual dataport cache_"content" catalog_element catalog_fks catalog_metadata_view catalog_permission catalog_pks catalog_vdp_metadata_view catalog_view clean_cache_database column_dependencie compact_hadoop_cache compact_metadata_tables create_remote_table create_tags_from_collibra create_tags_from_view drop_remote_table dual
  generate_smart_stats_for_field generate_smart_stats_for_fields_by_tablename generate_stat generate_stats_for_field generate_vql_to_create_jdbc_base_view get_active_logg get_association get_available_stats_mode get_cache_column get_cache_configuration get_cache_table get_catalog_effective_permissions get_catalog_metadata_ws get_database get_delegated_sqlsentence get_element get_exported_keys get_foreign_key get_jdbc_datasource_table get_parameter get_primary_keys get_procedure_columns get_server_connectivity get_session get_source_change get_source_columns get_source_table get_stats_for_field get_type_attributes get_user_defined_types get_view_columns get_view_indexes get_view_statistics get_view_tags get_view list_jdbc_datasource_table logcontroller maintain_metadata_table migrate_date_type ping_data_source source_change view_dependencie wait webcontainer_element webcontainer_element_status writelogerror writeloginfo metadata denodo jdbc driver invoke procedure get_element get_exported_keys get_foreign_key get_primary_key get_procedure_columns get_type_attributes get_user_defined_type get_view get_view_columns get_view_indexes
  invoke procedure filter input parameter possible
  query finish fast strain denodo server
  predefine store procedure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/cache_"content"#cache-"content"</field><field name="content">
  cache_"content" description store procedure cache_"content" return information cache "content"
  query datum cache server store query pattern later know query solve datum store cache
  store procedure cache_"content" return information query pattern store cache
  section cache module administration guide information query pattern
  syntax cache_"content" databasename text viewname text databasename database
  null procedure return information query pattern database currently connect
  viewname view want obtain field
  null procedure return information query pattern databasename
  procedure return field querypatternid d query pattern
  databasename database
  viewname view
  numcondition number condition
  apply view cache mode partial
  cache mode 0 condition list condition query pattern
  apply view cache mode partial projectedfield list project field
  null field view project expirationdate view cache partial expiration date query pattern
  view cache date late cache refresh
  status status query pattern
  value valid query pattern view cache mode partial datum cache database valid invalid query pattern view cache mode partial datum cache database invalid
  processing query pattern view cache mode partial cache engine currently insert datum cache database preload query pattern view cache mode  
  temporary query pattern temporary table
  remark procedure return information valid "content" cache database include view cache mode set datum valid
  i.e. set cache mode cache engine return datum cache
  privilege require parameter databasename null user need administrator
  parameter databasename null user need administrator local administrator database
  cache "content"
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_elements#catalog-elements</field><field name="content">
  catalog_element note store procedure deprecate remove major version denodo platform
  use procedure get_element instead get_element search database connect return information
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure catalog_element return list element datum source view web service etc virtual dataport database connect
  filter result parameter element type etc syntax catalog_element text type null | folder | datasource | storedprocedure | wrapper | view | webservice | widget | association | jmslistener usercreator text lastusermodifi text initcreatedate timestamptz endcreatedate timestamptz initlastmodificationdate timestamptz endlastmodificationdate timestamptz description text
  invoke procedure want filter parameter pass null usercreator optional owner element
  filter usercreator and/or description comparison perform contain operator
  e.g. usercreator adm procedure return element creator contain string adm
  provide value initcreatedate endcreatedate initlastmodificationdate endlastmodificationdate procedure return element interval
  i.e. provide value initcreatedate endcreatedate procedure return element create date
  initcreatedate null procedure return element create endcreatedate
  endcreatedate null procedure return element create initcreatedate
  search initlastmodificationdate endlastmodificationdate work way
  input parameter type timestamptz provide localdate   timestamp
  privilege require privilege require execute procedure
  example example 1 select resultname resulttype resultsubtype resultusercreator resultlastusermodifier resultcreatedate resultlastmodificationdate resultdescription catalog_element
  type = webservice initcreatedate = trunc(current_timestamp month endcreatedate = current_timestamp
  procedure return web service create current month
  example 2 select catalog_element
  usercreator = jsmith return element user jsmith
  catalog element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_fks#catalog-fks</field><field name="content">
  catalog_fks note store procedure deprecate remove major version denodo platform
  use procedure get_foreign_key instead get_foreign_key search database connect return information
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure catalog_fks return list field foreign key view view database connect
  foreign key field set field establish link datum view
  foreign key reference field hold primary key value view reference column set column table
  create foreign key constraint virtual dataport create association view mark referential constraint
  section association administration guide explain
  syntax catalog_fks input_view_name text input_view_name optional view want obtain list field foreign key
  need connect database view
  procedure return row field foreign key
  output schema follow field pkdatabase_name database view foreign key relationship i.e. principal association
  pkview_name view foreign key relationship i.e. principal association
  pkcolumn_name field primary key view foreign key relationship i.e. principal association
  fkdatabase_name database view foreign key
  database connect fkview_name view foreign key
  fkcolumn_name field foreign key fk_name constraint
  association
  pk_name primary key
  view foreign key relationship follow pk
  database_name database hold association
  association store different database view association
  privilege require procedure return information view user metadata privilege
  example let define view order_detail primary key field order_id order_line_id
  execute follow view order primary key field orderid
  association view like screenshot association referential constraint check box screenshot consider foreign key constraint
  screenshot order principal association order_detail dependent
  order detail need link order
  multiplicity end point order 1 mean row order_detail link row order
  multiplicity end point order_detail + mean row order link row order_detail
  execute follow query select pkdatabase_name pkview_name pkcolumn_name fkdatabase_name fkview_name fkcolumn_name fk_name pk_name database_name catalog_fks
  input_view_name
  =
  order_detail result pkdatabase_na pkview_name pkcolumn_name fkdatabase_na fkview_name admin order orderid admin order_detail fkcolumn_name fk_name pk_name database_name orderid order_details_fk orders_pk admin visibility reason column display table
  catalog fks
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_metadata_views#catalog-metadata-views</field><field name="content">
  catalog_metadata_views description store procedure catalog_metadata_views return information field view
  information include type field precision case number etc
  filter view and/or database
  note recommend procedure catalog_vdp_metadata_view instead provide information
  i.e. catalog_vdp_metadata_view return description field addition field column_vdp_type_name provide type field
  syntax catalog_metadata_views input_database_name text input_view_name text input_database_name database input_view_name view want obtain field
  procedure return row field view
  input_database_name input_view_name null procedure return field view database
  input_view_name null procedure return field view input_database_name
  output schema follow field database_name database view field belong
  view_name view field
  view_type type view 0 base view
  1 derive view
  column_name field
  column_type_name type field source type property field
  e.g. varchar nchar integer bigint etc
  constant define class java.sql
  type jdbc api column_type number represent type field
  value field define class java.sql
  type jdbc api
  e.g. int = 4 varchar = 12 etc column_type_precision mean depend type field field type text indicate maximum length field
  numeric type indicate precision
  int long field number 0 column_type_length maximum length byte value field
  column_type_scale number fractional digit value field store column_vdp_type_database database column type define complex type null type primitive i.e. text long
  privilege require procedure return information view user metadata privilege
  implication follow user administrator procedure return information view database
  procedure return information view database user local administrator
  procedure return information view database user connect metadata privilege
  note procedure return privilege error
  example let user execute select catalog_metadata_views i.e. obtain information field view database user connect metadata privilege database testing
  scenario procedure return information view testing database view database
  example select column_name column_type_name column_type_length catalog_metadata_views input_database_name='customer360 input_view_name
  = invoice
  result column_name column_type_name column_type_length invoiceid integer 11 customerid integer 11 invoicedate timestamp 23 billingaddress varchar 70 billingcity varchar 40 billingstate varchar 40 billingcountry varchar 40 billingpostalcode varchar 10 total decimal 12
  catalog metadata view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_permissions#catalog-permissions</field><field name="content">
  catalog_permission description store procedure catalog_permission return information privilege custom policy grant user and/or role
  privilege return row
  row privilege grant user role database view store procedure
  user execute procedure result different depend user administrator
  administrator privilege grant user role non administrator privilege grant directly role
  procedure return information kerbero ldap user i.e. user create virtual dataport user run store procedure
  syntax catalog_permission username_in text rolename_in text username_in user want obtain privilege rolename_in role want obtain privilege
  user execute procedure administrator consider follow parameter null procedure return privilege grant user role
  useful want obtain privilege set virtual dataport server connect
  rolename_in null username_in procedure return privilege grant user privilege grant role user
  username_in null rolename_in procedure return privilege grant role role role
  parameter value procedure return privilege directly grant username_in privilege grant role rolename_in
  case username_in need role rolename_in grant
  procedure fail
  user execute procedure administrator behavior similar follow exception procedure return privilege user
  username_in null user execute procedure
  procedure return error
  rolename_in null user run procedure role grant directly transitively
  procedure return error
  privilege custom policy grant user role return row
  output schema follow field username user privilege belong
  null row refer privilege grant role
  input parameter username_in null username_in rolename_in null hold user
  case field null privilege grant role
  globaladmin possible value null row represent privilege grant role user
  true row represent privilege grant user role user administrator role serveradmin
  false userrolename field null mean row represent privilege inherit role value
  field username null row represent privilege user inherit role
  field rolename null row represent privilege role inherit role
  field null privilege directly grant user role
  rolename privilege inherit transitively
  user inherit privilege role inherit role
  column contain original role permission grant
  dbname database privilege grant
  elementname element database privilege grant
  null privilege grant database single element elementtype type element database privilege grant
  possible value datum source view procedure web service widget elementsubtype null element type equal datum source
  type datum source
  possible value df essbase jdbc json custom odbc olap salesforce sapbwbapi saperp ws xml
  dbadmin dbconnect dbcreate dbcreatedatasource dbcreatedataservice dbcreateview dbcreatefolder dbexecute dbwrite dbmetadata dbfile represent privilege grant database
  null row represent privilege grant database e.g. individual element
  elementmetadata elementexecute elementwrite elementinsert elementupdate elementdelete represent privilege grant element database database columnpermission null row represent privilege grant view column privilege
  case field contain comma separate list field project rowpermission null row represent privilege grant view row restriction
  case field array follow field sensitivefield sensitive field restriction condition condition restriction action action restriction condition meet custompermission null array represent list custom policy grant user role view
  privilege require information return procedure change depend type user execute procedure administrator procedure return information privilege user role
  user include administrator database procedure return information privilege grant user execute procedure role grant user
  procedure return error case non administrator user request privilege grant user
  non administrator user request privilege grant role user role
  input user kerbero ldap user i.e. user create virtual dataport user run procedure
  case procedure return error user exist
  catalog permission
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_pks#catalog-pks</field><field name="content">
  catalog_pks note store procedure deprecate remove major version denodo platform
  use procedure get_primary_key instead get_primary_key search database connect return information
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure catalog_pks return list field primary key view view database
  syntax catalog_pks input_view_name text input_view_name optional view want obtain list primary key field
  need connect database view
  null return list primary key field view database currently connect
  procedure return row field primary key view
  output schema follow field database_name database view belong
  view_name view
  column_name field primary key
  pk_name primary key
  view follow pk
  privilege require procedure return information view user metadata privilege
  example let view order_line primary key field order_id order_line_id
  execute follow query select database_name view_name column_name pk_name catalog_pks
  input_view_name = order_line result database_name view_name column_name pk_name admin order_line order_id order_line pk admin order_line order_line_id order_line pk
  catalog pks
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_vdp_metadata_views#catalog-vdp-metadata-views</field><field name="content">
  catalog_vdp_metadata_view description store procedure catalog_vdp_metadata_view return information field view virtual dataport database
  information include type field precision case number etc filter view and/or database
  syntax catalog_vdp_metadata_view input_database_name text input_view_name text input_database_name database input_view_name view want obtain field
  procedure return row field view
  input_database_name input_view_name null procedure return field view database
  input_view_name null procedure return field view database
  output schema follow field database_name database view field belong
  view_name view field
  view_type type view 0 base view
  1 derive view
  column_name field
  column_type_name type field source type property field
  e.g. varchar nchar integer bigint etc
  constant define class java.sql
  type jdbc api column_type number represent type field source type property field
  value field define class java.sql
  type jdbc api
  e.g. int = 4 varchar = 12 etc column_type_precision mean depend type field field type text indicate maximum length field
  numeric type indicate precision
  int long field number 0 column_type_length maximum length byte value field
  column_type_scale number fractional digit value field store
  column_vdp_type_name type virtual dataport
  value different column_type_name return type set source type property field
  column_description description field
  field description value string
  column_vdp_type_database database column type define complex type null type primitive i.e. text long
  privilege require procedure return information view user metadata privilege
  implication follow user administrator procedure return information view database
  procedure return information view database user local administrator
  procedure return information view database user connect metadata privilege
  note procedure return privilege error
  example let user execute select catalog_vdp_metadata_view i.e. obtain information field view database user connect metadata privilege database testing
  scenario procedure return information view testing database view database
  catalog vdp metadata view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/catalog_views#catalog-views</field><field name="content">
  catalog_view note store procedure deprecate remove future major version denodo platform
  use procedure get_view instead get_view search database connect return information
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure catalog_view return list base view derive view virtual dataport database connect
  filter result parameter view view type etc
  syntax catalog_view text usercreator text lastusermodifi text initcreatedate date endcreatedate date initlastmodificationdate date endlastmodificationdate date viewtype 0
  | 1 | 2 | 3 swapactive 0
  | 1 | 2 cachestatus 0
  | 1 | 2 | 3 | 4 | 5 description text usercreator optional owner element
  want filter parameter pass null
  filter usercreator and/or description comparison perform contain operator
  e.g. usercreator adm procedure return element creator contain string adm
  provide value initcreatedate endcreatedate initlastmodificationdate endlastmodificationdate procedure return element interval
  i.e. provide value initcreatedate endcreatedate procedure return element create date
  initcreatedate null procedure return element create endcreatedate
  endcreatedate null procedure return element create initcreatedate
  search initlastmodificationdate endlastmodificationdate work way
  viewtype null procedure return view certain type
  valid value 0 return base view
  1 return derive view
  2 return interface view
  3 return materialize table
  swapactive null procedure return view certain swap status
  valid value 0 view swap status set default 1 swap set 2 swap set
  cachestatus null procedure return view certain cache mode
  valid value 0 cache mode 1 partial exact 2 partial 3 4 partial exact preload 5 partial preload
  privilege require procedure return information view user metadata privilege
  implication follow user administrator administrator database procedure return information view
  procedure return information view user metadata privilege
  example select catalog_views viewtype = 1 procedure return derive view database
  catalog view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/clean_cache_database#clean-cache-database</field><field name="content">
  clean_cache_database description procedure launch cache maintenance task
  section cache maintenance task administration guide explain task
  syntax clean_cache_database database_name text database_name database
  return follow field view_name deleted_tuple row view_name string deleleted_tuple number query pattern remove table vdb_cache_querypattern
  follow row contain view number row procedure remove table hold cache datum view
  procedure return view cache enable row expire mark invalid
  privilege require administrator invoke procedure
  clean cache database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/column_dependencies#column-dependencies</field><field name="content">
  column_dependencie description store procedure column_dependencie return lineage column view
  list datum source view value field obtain
  difference lineage column tree view   tree view provide information view
  lineage column deep level column
  procedure allow obtain programmatically information administration tool display datum lineage dialog derive view
  want obtain dependency view need dependency field recommend procedure view_dependencie instead
  output simple output procedure
  syntax column_dependencie input_view_database_name text input_view_name text input_column_name text input_view_database_name database view input_view_name view
  input_column_name optional field want obtain dependency
  null procedure return dependency field view
  row result procedure represent dependency field derive view view_name field element dependency derive view base view data source
  output schema follow field view_database_name database view field view_name belong
  view_name derive view
  column_name column
  view_identifier identifi view
  autogenerate store procedure change execution procedure
  example understand use value private_view true view field view_name private false
  view private view_name represent join minus intersect view join minus intersect view view internally create virtual dataport user
  example create derive view j_v join view v1 join v2 join v3 internally virtual dataport create join view v1 v2
  j_v result join internal view v3
  example join v1 v2 private view j_v public
  information private view allow know order join minus intersect view view perform
  view_type type view
  i.e. base view select join interface etc
  type view join value field include follow information order type join inner leave outer right outer   outer
  join method   hash nest nest parallel   merge
    mean user select method execute join create view execution engine select method runtime
  order join   order   reverseorder
    mean user select order execute join create view execution engine select order runtime dependency_database_name database dependency belong
  dependency_name element view datum source view view_name field depend dependency_column_name field field column_name depend
  value field comma separate list field column_name result evaluate expression involve field
     expression field row contain expression
  dependency_identifier internal identifi element view datum source view view_name field depend
  number identify dependency derive view element
  row represent dependency field view v1 view v2 dependency_identifier
  identifi autogenerate store procedure change execution procedure
  dependency_type type dependency element
  expression null expression assign field view column_name
  depth distance view field view_name dependency
  row represent direct dependency value field 1
  direct dependency dependency view directly depend
  e.g. base view projection view create base view direct dependency
  row represent transitive dependency value field great 1
  transitive dependency dependency view depend view
  let create selection view p_v create base view bv1
  example transitive dependency p_v datum source view bv1
  example follow example assume user execute query administrator administrator database view mention example
  procedure return information datum source
  example 1 let view orders_of_european_customer database tpc_h execute obtain lineage field view
  select column_dependencie input_view_database_name = tpc_h input_view_name
  = orders_of_european_customer example 2 let view orders_of_european_customer database tpc_h execute obtain datum source(s datum column total_amount obtain
  note field trace source
  example field result concatenate field source
  select column_dependencie input_view_database_name = tpc_h input_view_name
  = orders_of_european_customer input_column_name
  = total_amount position('datasource dependency_type  0
  depth = 1 example
  3 let create view customer_invoice like customer_invoice like client_df leave outer join invoice inner join product add field customer_invoice expression concatenation field first_name last_name client_df table
  follow image screenshot result execute select column_dependencie input_view_database_name = customer360 input_view_name
  = customer_invoice input_column_name
  = date format purpose column display
  sample result execute procedure column_dependencie understand result account follow row 2 3 represent dependency private view field private true row
  private view leave outer join employee order
  row 4 till describe dependency view customer_invoice
  note view_identifier
  dependency view view_identifier
  row value dependency_identifier 5 represent direct transitive dependency df datum source client_df row 1 represent direct dependency base view client_df df data source
  dependency direct value depth field 1
  row 3 transitive dependency private view df datum source
  dependency transitive depth great 1
  row 6 transitive dependency view customer_invoice df datum source
  dependency transitive depth 2 row 4 value field expression expression assign field full_name view customer_invoice
  privilege require information return procedure change depend type user execute procedure administrator procedure return information field dependency
  administrator database user administrator database input parameter database procedure return information field view database
  user metadata privilege database procedure return information dependency field view database
  return dependency view datum source
  user metadata privilege view database procedure return information dependency field view user metadata privilege grant
  user metadata privilege grant dependency value field dependency_type   privilege
  return dependency view datum source
  column dependency
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/column_dependencies#sample-result-of-executing-the-procedure-column-dependencies</field><field name="content">
  sample result execute procedure column_dependencie
  sample result execute procedure column dependency
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/compact_hadoop_cache#compact-hadoop-cache</field><field name="content">
  compact_hadoop_cache description procedure launch task cache compaction
  task execute database use hadoop datum source cache impala prestodb prestosql spark hive
  important task perform cache datum source restrict database input parameter
  mean datum source global cache share database cache affect procedure
  execution perform operation remove outdate row control table
  delete storage table expire temporary table vdp server
  nature operation invoker ensure vdp server perform task involve affect cache datum source
  syntax compact_hadoop_cache database_name text database_name database
  database cache datum source compact
  note compaction affect datum source database datum source cache affect
  procedure return value
  privilege require global administrator local administrator input database invoke procedure
  compact hadoop cache
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/compact_metadata_tables#compact-metadata-tables</field><field name="content">
  compact_metadata_table description store procedure compact_metadata_tables reclaim unused space database virtual dataport metadata store
  virtual dataport store metadata local database
  virtual database create create database set table store metadata table datum source view web service etc
  time user create delete element space metadata database grow database return unused space operating system
  run procedure size directory  denodo_home/metadata db dbmetadata grow gigabyte
  procedure compact table metadata database
  maintain_metadata_tables
  important account follow procedure effect virtual dataport configure store metadata external database
  compact table acquire exclusive lock table
  lock prevent virtual dataport read write datum table
  lock release table compact
  memory intensive process
  depend mode select parameter mode create temporary file
  problem disk
  try run procedure time load server low load
  server belong cluster denodo server remove cluster avoid affect external application connect denodo
  important procedure time execute vql statement administrator account create procedure compact_metadata_tables
  classname = com.denodo.vdb.contrib.storedprocedure
  compactmetatadatatablesprocedure syntax compact_metadata_tables compaction_type int compaction_type mode compact table
  procedure compact table metadata database
  possible value 0 sequential mode table metadata database procedure compact table time index
  1 sequential mode table metadata database procedure compact table finish compact table compact index
  2 place mode use temporary table index
  row space
  mode 0 non sequential 1 sequential guarantee recover maximum free space mode 2 place cost temporarily create new table index
  mode 0 1 database copy active row newly allocate space finish copy row release space old table
  mode 2 work space
  mode 0 use memory disk space mode 1
  compact index temporary file create
  mode 0 index table compact simultaneously temporary file index create time
  mode 1 index table compact time temporary file index
  hand mode 0 fast mode 1
  reason mode 0 cpu intensive mode 1
  mode 2 guarantee recover available space hard drive sure space temporary database increase
  output schema procedure follow field compaction_type_name mode compact
  mode enter parameter metadata_tables_compacte number table metadata database compact error database invoke procedure table metadata database
  field hold number time execution procedure fail
  compact metadata table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_remote_table#create-remote-table</field><field name="content"> create_remote_table description store procedure create_remote_table component feature remote table
  section remote table administration guide explain detail remote table
  procedure follow create table underlie database jdbc datum source
  execute query virtual dataport server
  insert result query table database create step 1
  create base view table create step 1 perform step 1 3 procedure invoke command create remote table create base view step 4
  procedure drop_remote_table drop base view create procedure table create underlie database
  syntax create_remote_table remote_table_name text replace_remote_table_if_exist boolean query text datasource_database_name text datasource_name text datasource_catalog text datasource_schema text base_view_database_name text base_view_name text base_view_folder text replace_base_view_if_exist boolean option text remote_table_name new table underlie database jdbc data source
  valid identifi target database
  replace_remote_table_if_exist optional true table exist database schema catalog procedure drop table create
  default value false table exist procedure fail query query execute virtual dataport server obtain datum insert new table database datasource_database_name
  optional database jdbc datum source new table create
  null look datasource_name current database
  datasource_name jdbc data source point database table create
  datasource_catalog catalog database table create
  mandatory database support catalog set null
  datasource_schema schema database table create
  mandatory database support schema set null base_view_database_name optional virtual dataport database base view create
  null base view create current database base_view_name optional new base view
  null value remote_table_name base_view_folder optional folder base view create
  folder exist procedure create
  null base view create root folder
  replace_base_view_if_exist optional true view exist virtual dataport database procedure drop view create
  default value false view exist procedure fail option optional option modify default value property create remote table command
  format option1 = value1 option2 = value2
  create remote table command information option available
  store procedure result procedure return row status phase
  store procedure result contain follow column store procedure result text summary task phase phase int phase number
  3 phase
  remote_table text remote table create underlie database base_view text base view create procedure base_view_database text database procedure create base view
  inserted_row int number row insert remote table
  error boolean true error execute phase false status text state describe result phase
  list status ok unknown invalid_base_view_name view_already_exists catalog_schema_not_specifie no_create_folder_privilege invalid_folder_name empty_query more_than_one_query invalid_query datasource_does_not_exist invalid_catalog invalid_schema remote_table_already_exist example create_remote_table store procedure result store procedure result phase remote_table base_view database inserted_row error status step 1 3 create remote table  table_name  successfully
  1 table_name null null null false ok step 2 3 insert 2 row remote table  table_name 
  2 table_name null null 2 false ok step 3 3 create base view  view_name  successfully  vdp_database  database
  3 null view_name vdp_database null false ok remark target database base hdfs hadoop impala hive enable bulk datum load datum source execute procedure
  procedure work jdbc datum source adapter support cache engine list database support cache engine
  insert datum teradata execution engine prioritize teradata fastload mechanism incremental load teradata insert  view  duplicate key update  select query 
  teradata fastload allow insert duplicate row table primary index
  execution engin check select query create remote table teradata contain duplicate row
  query return duplicate row include de primary key view contain group return duplicate row create remote table primary index
  return duplicate row create remote table primary index
  vdp use fastload case
  hand incremental load feature work case table create primary index
  privilege require user need privilege connect database jdbc data source
  execute jdbc datum source
  connect create view virtual dataport database base view create
  create folder database base view create procedure create base view folder folder exist
  execute view reference query
  user account jdbc data source able create table underlie database
  example select create_remote_table
  datasource_database_name
  = common_source datasource_name = ds_jdbc_oracle datasource_catalog =
  datasource_schema = report remote_table_name = reporting_customer360_state_ca
  replace_remote_table_if_exist = true query = select customer state =
  base_view_database_name = customer360 base_view_name
  = customer360_state_ca base_view_folder
  = /reporting_customer
  replace_base_view_if_exist = false note query literal single quote escape
  example follow check schema report database datum source ds_jdbc_oracle table reporting_customer360_state_ca
  delete table
  schema create table reporting_customer360_state_ca store result query
  execute query insert result table
  create folder /reporting_customer
  create jdbc base view customer360_state_ca folder query table reporting_customer360_state_ca database datum source ds_jdbc_oracle
  virtual dataport administration tool open base view create procedure source query box datum load query dialog
  tab metadata edit dialog view
  create remote table
   remote table c reate</field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_collibra#create-tags-from-collibra</field><field name="content">
  create_tags_from_collibra description store procedure create_tags_from_collibra connect collibra instance extract define information attribute tag assignment view column
  procedure read collibra datum create assign attribute tag virtual dataport
  note feature available subscription bundle enterprise plus
  find bundle open dialog design studio administration tool
  section denodo platform subscription bundle
  syntax create_tags_from_collibra input_scope text input_action text input_database text input_include_tag boolean input_tag_name array input_include_attribute boolean input_attribute_name array input_search_since_last_execution_time boolean input_search_since timestamp input_unassign_tags_mode text input_unused_collibra_tags_mode text input_attribute_name_as_prefix boolean input_scope collibra scope virtual dataport search metadata
  community domain accessible scope access mandatory
  input_action indicate procedure
  possible value read procedure access collibra return retrieve information default
  create procedure access collibra return retrieve information store information virtual dataport
  input_database virtual dataport database tag information import
  parameter want override database retrieve collibra
  input_include_tag collibra tag retrieve
  default value false input_tag_name collibra tag want retrieve
  define tag find accessible element retrieve input_include_attribute collibra attribute retrieve
  default value false input_attribute_names collibra attribute want retrieve security classification personally identifiable information
  mandatory input_include_attribute = true
  input_search_since_last_execution_time indicate virtual dataport execute incremental search late execution instant indicate input_search_since
  option ignore case input_include_tag = true input_search_since instant search collibra metadata
  case input_search_since_last_execution_time = true value parameter search use late time procedure execute recommend method
  input_unassign_tags_mode indicate virtual dataport pre existent tag view column database find collibra metadata
  possible value pre existent tag unassigne view column
  option intend tag assignment collibra only_collibra pre existent tag import external system import procedure unassigne view column
  option useful allow define tag manually view column import information collibra
  default input_unused_collibra_tags_mode indicate virtual dataport import tag collibra long view column
  possible value retain tag remove virtual dataport
  default drop_unassigne tag long view column remove virtual dataport
  note exist tag element global security policy
  case tag remove option
  drop_unassigned_cascade tag long view column remove virtual dataport element global security policy remove case remove tag input_attribute_name_as_prefix indicate tag create virtual dataport collibra attribute attribute prefix
  useful identify origin tag create virtual dataport
  example column confidential value attribute security classification ` collibra
  procedure create tag virtual dataport security classification 
  confidential parameter true confidential case false
  default value true
  output schema follow field execution_time instant procedure access collibra instance
  incremental search input_search_since parameter
  element_type type element return current tuple
  example database tag view database_name database case current element database database contain current element case
  view_name view case current element view column
  column_name column case current element column
  tag tag case current element tag tag_description tag description case current element tag
  assignment_statu indicate tag correctly assign case current tuple represent tag assignment
  privilege require administrator invoke procedure
  configuration currently exist dialog configure access collibra
  configure property
  configuration property available com.denodo.vdb.contrib.ext.datagov.collibra.connection.url connection url com.denodo.vdb.contrib.ext.datagov.collibra.connection.user user authenticate
  com.denodo.vdb.contrib.ext.datagov.collibra.connection.password.secret password user authenticate
  receive clear value encrypt
  case value prefix encrypt
  example clear set com.denodo.vdb.contrib.ext.datagov.collibra.connection.password.secret = my_secret_password encrypt set com.denodo.vdb.contrib.ext.datagov.collibra.connection.password.secret = encrypted:encrypted_value  encrypt password execute statement encrypt_password
  example encrypt_password my_secret_password com.denodo.vdb.contrib.ext.datagov.collibra.connection.proxyenable use proxy access collibra
  possible value automatic default use default configuration http proxy com.denodo.vdb.contrib.ext.datagov.collibra.connection.proxyhost host use proxy com.denodo.vdb.contrib.ext.datagov.collibra.connection.proxyport port number connect host proxy
  com.denodo.vdb.contrib.ext.datagov.collibra.connection.proxyuser user connect proxy
  com.denodo.vdb.contrib.ext.datagov.collibra.connection.proxypassword.secret password connect proxy
  value follow format user password
  clear value encrypt prefix encrypt com.denodo.vdb.contrib.ext.datagov.collibra.connection.proxypacuri pac uri use automatic status set com.denodo.vdb.contrib.ext.datagov.collibra.connection.attribute list collibra attribute access case want specify invoke procedure
  value valid json string list
  note value parameter input_attribute_names specify
  example set com.denodo.vdb.contrib.ext.datagov.collibra.connection.attributes'='[\security classification personally identifiable information example need configure access collibra
  let credential url https://acme.collibra.com user cl user password cl password set configuration property
  secure password value encrypt
  encrypt_password cl password copy return encrypted value let like uq2ldx0oxtiscuu kmivtzffag
  execute command set com.denodo.vdb.contrib.ext.datagov.collibra.connection.url'='https://acme.collibra.com set com.denodo.vdb.contrib.ext.datagov.collibra.connection.user'='cl user set com.denodo.vdb.contrib.ext.datagov.collibra.connection.password.secret'='encrypte uq2ldx0oxtiscuu kmivtzffag follow example assume load virtual dataport database collibra instance
  example denodo collibra integration example upload metadata collibra contain view customer employee
  collibra add follow tag attribute customer view add tag customers_data sensitive
  column phone tag sensitive_value restrict value security classification first_name mark personally identifiable information last_name mark personally identifiable information
  employee view add tag sensitive employees_data
  column first_name mark personally identifiable information last_name mark personally identifiable information password tag password picture mark personally identifiable information highly confidential value security classification salary value restrict security classification
  let virtual dataport metadata upload collibra domain accesible scope denodo collibra integration `
  example 1 let want use procedure information tag attribute collibra
  interested tag value attribute security classification personally identifiable information
  execute obtain datum
  select element_type database_name view_name column_name tag tag_description assignment_status create_tags_from_collibra input_scope = denodo collibra integration input_attribute_names = row('security classification row('personally identifiable information input_include_tag = true input_include_attribute = true input_action = read input_attribute_name_as_prefix = true follow image screenshot result execute previous query
  sample result execute procedure create_tags_from_collibra result mean depend element_type column database database present collibra instance
  create execution affect change
  tag description retrieve tag retrieve collibra tuple contain value
  view assignment view
  contain tag column tag
  tag find mean view long tag attribute collibra
  second scenario happen incremental search execute
  column assignment column
  contain tag column tag
  example 2 example want apply collibra tag attribute virtual dataport metadata
  execute previous query create input_action
  select element_type database_name view_name column_name tag tag_description assignment_status create_tags_from_collibra input_scope = denodo collibra integration input_attribute_names = row('security classification row('personally identifiable information input_include_tag = true input_include_attribute = true input_action = create input_attribute_name_as_prefix = true execute refresh design studio administration tool tag create assign virtual dataport
  tag import procedure create_tags_from_collibra view
  employee view import tag example 3 example want information collibra attribute collibra tag
  use parameter input_include_tag false value
  select element_type database_name view_name column_name tag tag_description assignment_status create_tags_from_collibra input_scope = denodo collibra integration input_attribute_names = row('security classification row('personally identifiable information input_include_tag = false input_include_attribute = true input_action = create input_attribute_name_as_prefix = true refresh client tool open view collibra attribute assign
  example employee view long tag employees_data sensitive password
  employee view import tag access collibra tag test input_search_since_last_execution_time parameter
  execute specify true parameter result return change collibra import process
  collibra remove personally identifiable information column first_name view employee
  execute procedure incrementally tag information view employee retrieve unique modify element import
  select element_type database_name view_name column_name tag tag_description assignment_status create_tags_from_collibra input_scope = denodo collibra integration input_attribute_names = row('security classification row('personally identifiable information input_include_tag = false input_include_attribute = true input_action = create input_attribute_name_as_prefix = true input_search_since_last_execution_time = true follow image screenshot result execute previous query
  sample result execute procedure create_tags_from_collibra incrementally note first_name long tag change apply view
  create tag collibra
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_collibra#sample-result-of-executing-the-procedure-create-tags-from-collibra</field><field name="content">
  sample result execute procedure create_tags_from_collibra
  sample result execute procedure create tag collibra
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_collibra#tags-imported-using-the-procedure-create-tags-from-collibra</field><field name="content">
  tag import procedure create_tags_from_collibra
  tag import procedure create tag collibra
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_collibra#tags-imported-to-employees-using-the-procedure-create-tags-from-collibra-1</field><field name="content">
  employee view import tag
  tag import employee procedure create tag collibra 1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_collibra#tags-imported-to-employees-view-using-the-procedure-create-tags-from-collibra-2</field><field name="content">
  employee view import tag
  tag import employee view procedure create tag collibra 2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_collibra#sample-result-of-executing-the-procedure-create-tags-from-collibra-incrementally</field><field name="content">
  sample result execute procedure create_tags_from_collibra incrementally
  sample result execute procedure create tag collibra incrementally
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#create-tags-from-view</field><field name="content">
  create_tags_from_view description store procedure create_tags_from_view allow load tag assignment read information virtual dataport view
  view follow predefined schema return datum follow predefine structure
  note specify view type example tag define csv file access external system json datum source rest api
  note feature available subscription bundle enterprise plus
  find bundle open dialog design studio administration tool
  section denodo platform subscription bundle
  syntax create_tags_from_view input_database_view_name text input_view_name text input_action text input_unassign_tags_mode text input_unused_external_tags_mode text input_incremental boolean input_database_view_name database contain view execute procedure input_view_name view execute procedure input_action indicate procedure information read view
  possible value read procedure execute view return retrieve information default
  create procedure execute view return retrieve information store information virtual dataport
  input_unassign_tags_mode indicate virtual dataport pre existent tag view column database find execute view
  possible value pre existent tag unassigne view column
  option intend tag assignment procedure
  only_external pre existent tag import external system import procedure unassigne view column
  option useful allow define tag manually view column import information procedure
  default input_unused_external_tags_mode indicate virtual dataport import tag procedure long view column
  possible value retain tag remove virtual dataport
  default drop_unassigne tag long view column remove virtual dataport
  note exist tag element global security policy
  case tag remove option
  drop_unassigned_cascade tag long view column remove virtual dataport element global security policy remove case remove tag
  input_incremental indicate execute view return datum incrementally new change loading
  note change view column set tag view present datum
  output schema follow field element_type type element return current tuple
  posible value database tag view column
  database_name database case current element database database contain current element case
  view_name view case current element view column
  column_name column case current element column
  tag tag case current element tag tag_description tag description case current element tag
  assignment_statu indicate tag correctly assign case current tuple represent tag assignment
  privilege require administrator invoke procedure
  view definition procedure expect input view schema certain column
  recommend define interface follow correct schema assign desire view implementation
  expect schema create replace interface view i_tags_definition element_type text database_name text view_name text column_name text tag text tag_description text
  procedure execute query extract datum view select element_type database_name view_name column_name tag tag_description  input_database_name.input_view_name  datum structure
  view return datum follow structure virtual dataport expect understand change
  return datum section database affect database return single row database
  row element_type value database column database_name
  note input_action create value view database lose tag favor return execute view depend procedure parameter
  row 1 table
  input_unassign_tags_mode value view lose tag
  value only_external lose tag import external system like procedure
  input_incremental true value view lose tag tag assignment view return datum
  unassigned tag depend value input_unassign_tags_mode parameter
  tag description want add description tag information return row tag
  element_type value tag column tag description tag_description
  tag description require include tuple tag value
  row 2 table
  assignment tag assignment view column
  view tag assign view return row assignment
  element_type value view database_name database view view_name view
  finally tag column contain tag
  row 3 table
  column tag assign column return row assignment
  element_type value column database_name database view view_name view column_name column
  finally tag column contain tag
  row 4 table
  incremental note datum structure incremental loading execute
  new assignment appear
  change assignment view column tag information view column appear datum
  view long tag tuple refer view tag appear order remove tag view column
  mean tuple element_type view database_name view_name identify view
  row 5 table
  datum section element_type database_name view_name column_name tag tag_description 1 database  database_name  2 tag  tag_name   tag_description  3 view  database_name   view_name   tag_name  4 column  database_name   view_name   column_name   tag_name  5 view  database_name   view_name
   example follow table example datum return view
  note order relevant
  row 1 2 database affect tag
  row 3 5 description tag
  row 6 8 tag assignment view
  example row 6 assignment tag hr_data view hr.employee
  row 9 end tag assignment column
  example row 10 assignment tag pii column first_name view hr.employee
  element_type database_name view_name column_name tag tag_description 1 database hr 2 database sale 3 tag pii personally identifiable information 4 tag hide datum hide 5 tag zip postal code 6 view hr employee hr_data 7 view sale customer_payment customers_data
  8 view sale customer_payment payments_data 9 column hr employee first_name pii 10 column hr employee last_name pii 11 column hr employee email pii 12 column hr employee picture hide 13 column hr employee password hide 14 column sale customer_payment first_name pii 15 column sale customer_payment last_name pii 16 column sale customer_payment email pii 17 column sale customer_payment postal_code zip 18 column sale customer_payment payment datum csv file use delimited file datum source create virtual dataport view
  view implementation interface follow expect schema procedure
  example i_tags_definition
  image interface i_tags_definition implementation delimit file base view previous datum
  note note implementation view type complexity
  definition interface i_tags_definition  
  execute procedure create_tags_from_view read tag definition interface i_tags_definition
  select element_type database_name view_name column_name tag tag_description create_tags_from_view
  input_database_view_name = admin input_view_name = i_tags_definition input_action = read note input_action value read procedure retrieve datum
  return datum create_tags_from_view procedure access interface i_tags_definition check return datum correct persist tag assignment invoke procedure input parameter input_action value create
  select element_type database_name view_name column_name tag tag_description create_tags_from_view
  input_database_view_name = admin input_view_name = i_tags_definition input_action = create affected view column tag assignment
  view customer_payment execute procedure create_tags_from_view create option  
  execute incremental loading
  want remove tag view customer_payment column
  datum tuple reference view tag assignment add new tag description view store_manager
  datum tuple tag description tuple assignment view add new tag description column username view store_manager
  datum tuple assignment column
  finally add assignment column store_manager tag pii hide
  datum tuple assignment
  new csv file datum
  element_type database_name view_name column_name tag tag_description 1 database hr 2 database sale 3 tag store_data datum store 4 view sale customer_payment 5 view hr store_manag store_data 6 column hr store_manag first_name pii 7 column hr store_manager last_name pii 8 column hr store_manag email pii 9 column hr store_manag picture hide 10 column hr store_manag password hide delimited file datum source point new file execute procedure input_incremental = true
  select element_type database_name view_name column_name tag tag_description assignment_status create_tags_from_view
  input_database_view_name = admin input_view_name = i_tags_definition input_action = create input_incremental = true view customer_payment tag employee view tag store_manager view new tag assignment
  view customer_payment execute procedure create_tags_from_view input_incremental = true  
  finally execute incremental loading
  previous example forget add tag view store_manag
  tag
  d staff_id store_id column
  tag staff_data view
  modify view store_manager add tag information view column
  new csv file datum
  element_type database_name view_name column_name tag tag_description 1 database hr 2 database sale 3 tag
  d internal identifi 4 view hr store_manag store_data 5 view hr store_manager staff_data 6 column hr store_manag first_name pii 7 column hr store_manager last_name pii 8 column hr store_manag email pii 9 column hr store_manag picture hide 10 column hr store_manag password hide 11 column hr store_manager
  staff_id d 12 column hr store_managers store_id d remember tag information view include
  previous tag new
  delimit file datum source point new file execute procedure input_incremental = true
  select element_type database_name view_name column_name tag tag_description assignment_status create_tags_from_view
  input_database_view_name = admin input_view_name = i_tags_definition input_action = create input_incremental = true view store_manager new tag store_data column staff_id store_id tag d.
  view change
  view store_manag execute procedure create_tags_from_view input_incremental = true
  create tag view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#id1</field><field name="content">
   
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#interface-i-tags-definition</field><field name="content">
  definition interface i_tags_definition
  interface tag definition
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#returned-data-by-create-tags-from-view-procedure-accessing-to-the-interface-i-tags-definition</field><field name="content">
  return datum create_tags_from_view procedure access interface i_tags_definition
  return datum create tag view procedure access interface tag definition
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#view-customer-payments-after-executing-procedure-create-tags-from-view</field><field name="content">
  view customer_payment execute procedure create_tags_from_view create option
  view customer payment execute procedure create tag view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#view-customer-payments-after-executing-procedure-create-tags-from-view-with-input-incremental-true</field><field name="content">
  view customer_payment execute procedure create_tags_from_view input_incremental = true
  view customer payment execute procedure create tag view input incremental true
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/create_tags_from_view#view-store-managers-after-executing-procedure-create-tags-from-view-with-input-incremental-true</field><field name="content">
  view store_manag execute procedure create_tags_from_view input_incremental = true
  view store manager execute procedure create tag view input incremental true
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/drop_remote_table#drop-remote-table</field><field name="content">
  drop_remote_table description drop_remote_table store procedure delete base view summary view remote table access view jdbc data source oracle postgresql db2 hive impala redshift etc
  note store procedure allow dropping base view create create_remote_table store procedure summary view
  syntax drop_remote_table base_view_database_name text base_view_name text drop_base_view_on_cascade boolean base_view_database_name optional vdp database base view delete
  value parameter null procedure use vdp database user connect
  base_view_name base view delete drop_base_view_on_cascade optional value true base view dependent element delete
  default value false
  store procedure result row result step procedure
  example execution drop_base_view_on_cascade = false step 1 2 remote table  remote table  drop successfully step 2 2 delete view  view  successfully  vdp database  database
  example execution drop_base_view_on_cascade = true step 1 3 remote table  remote table  drop successfully step 2 3 delete view  view  successfully  vdp database  database step 3 3 delete view dependent element
  privilege require user follow privilege able execute drop_remote_table procedure connect privilege vdp database view
  write privilege view
  write privilege view dependent element
  connect privilege vdp database datum source view
  execute privilege datum source view
  furthermore user vdp data source connect database drop table privilege
  example example use vdp database contain base view vdp_base_view create create_remote_table store procedure
  select drop_remote_table base_view_database_name = customer360_db base_view_name = customer drop_base_view_on_cascade = true example procedure perform step delete remote table access base view customer
  delete base view customer
  delete base view dependent element
  drop remote table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/dual#dual</field><field name="content">
  dual description store procedure dual special procedure return field dummy type text
  input parameter return row
  main use execute low cost query ping query external client access virtual dataport jdbc odbc interface
  execute vql function
  syntax dual privilege require privilege require execute procedure
  example example 1 select current_date dual query project function current_date return today date
  example 2 select 1 dual query low cost query pe query external client
  example 3 select 1 query return previous example
  server assume query clause reference dual procedure
  dual
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/generate_smart_stats_for_fields#generate-smart-stats-for-fields</field><field name="content">
  generate_smart_stats_for_field note store procedure deprecate remove major version denodo platform
  use procedure get_stats_for_field instead
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure generate_smart_stats_for_field gather store statistic field jdbc base view minimum value maximum value etc field number row view
  obtain statistic query system table database instead execute select query aggregation function procedure generate_stat generate_stats_for_field
  benefit approach obtain statistic view fast
  procedure gather statistic jdbc base view
  gather statistic type view use generate_stat generate_stat generate_stats_for_field generate_stats_for_field
  obtain statistic jdbc base view sure source database oracle ibm db2 etc statistic table
  statistic present outdate statistic gather accurate execution plan select cost base optimizer suboptimal
  syntax generate_smart_stats_for_field mode text view_name text field array table_stat boolean database_name text mode set procedure gather statistic
  valid value smart_only procedure gather statistic system table database
  mode equivalent clear check box complete miss statistic   statistic tab view option
  smart_then_atsource_through_vdp procedure gather statistic system table database
  execute select statement gather statistic obtain system table database
  mode equivalent select check box complete miss statistic   statistic tab view option
  atsource_through_vdp_only procedure query system table
  instead execute select statement
  mode equivalent execute procedure generate_stat generate_stats_for_field
  option available administration tool
  view_name procedure gather statistic view case
  field array register field statistic want gather
  register field field
  stat array statistic want collect field_count_distinct distinct value field_avg_len average size field_max max value field_min
  min value field_num_null null value
  null gather statistic field
  source_stat_name object database hold statistic view
  source like microsoft sql server allow user generate multiple statistic field set field store different object
  null obtain statistic default object
  value ignore applicable
  table_stat true procedure obtain number row table
  false databasename database view_name belong
  null procedure look view_name current database
  example example 1 generate_smart_stats_for_fields('smart_only internet_inc row('iinc_id',null null row('specific_field1',null null row('taxid',null null true
  gather statistic field iinc_id specific_field1 taxid view internet_inc
  query system table database
  example 2 generate_smart_stats_for_fields('smart_only internet_inc row('iinc_id',null null row('specific_field1',null null row('taxid',null null false
  previous example gather number row table note value late parameter
  example 3 generate_smart_stats_for_fields('smart_only internet_inc row('summary row('field_num_null row('field_count_distinct row('field_avg_len null true gather number row view statistic null value distinct value   average size field summary
  parameter smart_only query system table database
  example 4 generate_smart_stats_for_fields('smart_only internet_inc row('iinc_id',null null row('specific_field1',null null row('taxid',null null true example
  gather statistic field iinc_id specific_field1 taxid view internet_inc belong database example
  generate smart stat field
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/generate_smart_stats_for_fields_by_tablename#generate-smart-stats-for-fields-by-tablename</field><field name="content">
  generate_smart_stats_for_fields_by_tablename description store procedure generate_smart_stats_for_fields_by_tablename behave procedure generate_smart_stats_for_field difference generate_smart_stats_for_fields_by_tablename gather statistic base view table view database link base view
  use procedure gather statistic base view table database customer_final want obtain statistic table customer
  difference procedure generate_smart_stats_for_field
  syntax generate_smart_stats_for_fields_by_tablename mode text view_name text field array table_stat boolean source_table_name text source_schema_name text source_catalog_name text database_name text source_table_name table want gather statistic source_schema_name schema table want gather statistic
  enter null database schema source_catalog_name catalog table want gather statistic
  enter null database catalog
  input parameter mean generate_smart_stats_for_field
  generate smart stat field tablename
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/generate_stats#generate-stats</field><field name="content">
  generate_stat note store procedure deprecate remove major version denodo platform
  use procedure get_stats_for_field instead
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure generate_stat gather store statistic field view minimum value maximum value etc field number row view
  gather statistic execute select statement aggregation function order obtain statistic like average size field number distinct value etc
  want gather store statistic field view section generate_stats_for_field
  syntax generate_stat viewname text databasename text viewname procedure gather statistic view case databasename database viewname belong
  null procedure look viewname current database
  privilege require user write privilege view execute procedure
  mean follow user execute procedure administrator administrator database
  user connect write privilege database
  user connect privilege database write privilege view
  example select generate_stat databasename = customer360_db viewname = top_customer_by_region
  generate stat
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/generate_stats_for_fields#generate-stats-for-fields</field><field name="content">
  generate_stats_for_field note store procedure deprecate remove major version denodo platform
  use procedure get_stats_for_field instead
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure generate_stats_for_fields gather store statistic field view minimum value maximum value etc field number row view
  work procedure generate_stat section generate_stat difference obtain statistic field indicate
  possible use procedure generate_smart_stats_for_field query system table database obtain statistic instead execute regular select statement
  syntax generate_stats_for_field viewname text field array databasename text viewname procedure gather statistic view case field array field procedure obtain statistic
  specify field view procedure delete statistic field view gather
  null procedure gather statistic field view
  array i.e. procedure gather number row view obtain statistic field
  databasename database viewname belong
  null procedure look viewname current database
  privilege require user write privilege view execute procedure
  mean follow user execute procedure administrator administrator database
  user connect write privilege database
  user connect privilege database write privilege view
  example example 1 select generate_stats_for_field databasename = customer360_db viewname = top_customer_by_region field = row('region row('customer_id row('amount statement gather store statistic field region customer_id view top_customer_by_region
  parameter field array use construct row row define array field
  detail construct section condition compound value
  example 2 select generate_stats_for_field databasename = customer360_db viewname = top_customer_by_region field =
  statement gather store number row view obtain statistic field view
  previously obtain statistic view statistic field remain place refresh number row
  generate stat field
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/generate_vql_to_create_jdbc_base_view#generate-vql-to-create-jdbc-base-view</field><field name="content">
  generate_vql_to_create_jdbc_base_view description store procedure generate_vql_to_create_jdbc_base_view return vql statement necessary create jdbc base view table view underlie database jdbc datum source
  note actually create view return vql statement
  combination procedure get_jdbc_datasource_table automate process base view table view source database
  note procedure create base view return vql statement
  obtain vql statement create base view type datum source df xml json use denodoconnect component denodo vql generation
  available support site documentation denodo community
  syntax generate_vql_to_create_jdbc_base_view data_source_name text catalog_name text schema_name text table_name text base_view_name text folder text i18n text database_name text data_source_name datum source
  catalog_name catalog source database contain table create base view
  pass null database support catalog
  schema_name schema source database contain table create base view
  pass null database support schema
  table_name table view create base view base_view_name base view create
  null auto generate
  folder folder place create base view
  result include vql statement create folder(s
  null vql specify folder i18n i18n base view create
  null procedure assign i18n virtual dataport database datum source belong
  recommend set null
  database_name database jdbc data source belong
  null procedure use current database   
  procedure return row vql statement necessary create base view creation_vql statement necessary create desire base view
  procedure return error schema catalog table exist database
  privilege require user execute privilege datum source
  generate vql create jdbc base view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_active_loggers#get-active-loggers</field><field name="content">
  get_active_logg description store procedure get_active_logg return information log category set virtual dataport server
  return category set file  denodo_home/conf vdp log4j2.xml set procedure logcontroller
  syntax get_active_logg procedure input parameter  procedure return log_category log category logger
  log_level log level logger
  possible value trace debug info warn error fatal
  active logger
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_associations#get-associations</field><field name="content">
  get_association description store procedure get_association return information association association view involve association publish web service
  row represent association
  syntax get_association input_database_name text input_name text input_type element type
   element type 
  = | view | webservice input_database_name database view web service want obtain association
  input_name view web service want obtain association
  null filter
  input_type mandatory type element want obtain association
  webservice procedure return association publish web service
  view procedure return association view involve
  input_type webservice input_database_name input_name mandatory
  procedure return row association field database_name database element belong element
  association_name association
  association_description description association left_view_name view leave endpoint association
  left_view_database database view leave endpoint association
  left_role role view leave endpoint association
  left_multiplicity multiplicity leave endpoint association right_view_name view right endpoint association right_view_database database view right endpoint association
  right_role role view right endpoint association
  right_multiplicity multiplicity right endpoint association mapping comma separate list condition mapping association
  valid true valid association
  is_left_principal true left endpoint association principal view false left_role_precondition role precondition view leave endpoint association
  right_role_precondition role precondition view right endpoint association is_referential_constraint true association referential constraint
  represent primary key foreign key constraint false
  privilege require procedure return information association user metadata privilege endpoint association
  example example 1 select get_association input_database_name
  = customer_report = invoice input_type = view obtain association view invoice database customer_report
  example 2 select get_association
  input_database_name = customer_report input_type = view obtain association database customer_report
  example 3 select get_association = invoice input_type = view obtain association view invoice database
  example 4 select get_association input_type = view obtain association server
  example 5 select get_association
  input_database_name = customer_report = invoice input_type = webservice obtain association publish web service invoice database customer_report
  return information rest web service soap web service publish association
  association
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_available_stats_modes#get-available-stats-modes</field><field name="content">
  get_available_stats_mode description store procedure get_available_stats_mode return mode available store procedure get_stats_for_field view
  syntax get_available_stats_mode input_database_name text input_view_name text input_empty_on_failure boolean input_database_name database view_name belong input_view_name view input_table_stats true procedure return result error occur
  false procedure execution fail
  procedure return row mode field database_name database
  view_name view
  view_type type view
  stats_mode gather statistic mode available true statistic view gather mode
  false description reason mode gather statistic view
  description_code code description available_smart_stats array list statistic obtain system table mode
  is_smart true statistic gather system table
  false is_aggregate true statistic gather select query aggregation function
  false
  is_cache true statistic gather database view cache
  false
  example get_available_stats_modes('admin internet_inc false
  available stat mode
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_cache_columns#get-cache-columns</field><field name="content">
  get_cache_column description procedure return information column table cache database hold cache datum specific view
  find useful procedure get_cache_table
  syntax get_cache_column input_database_name text input_view_name text input_database_name database input_view_name view   
  procedure return row column view field database_name database view
  view_name view
  column_name field view cache_catalog_name catalog table store cache datum cache_schema_name schema table store cache datum
  cache_table_name table store cache datum cache_column_name field table cache database
  usually value column_name
  different column_name reserve word cache database
  case cache engine create table different field
  like field follow number
  cache_column_type_name type field source type property field
  e.g. varchar nchar integer bigint etc
  constant define class java.sql
  type jdbc api cache_column_type_id number represent type field cache database
  value field define class java.sql
  type jdbc api
  e.g. int = 4 varchar = 12 etc cache_column_type_size mean depend type field cache database field type text indicate maximum length field
  numeric type indicate precision
  int long field number 0 cache_column_type_decimal number fractional digit value field store
  cache column
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_cache_configuration#get-cache-configuration</field><field name="content">
  get_cache_configuration description store procedure get_cache_configuration return cache configuration server cache configuration virtual dataport database
  syntax get_cache_configuration database_name text database_name database want obtain cache configuration
  null procedure return cache configuration database global cache configuration
  procedure return row contain global cache configuration row field database_name set null row database
  row field configure administration tool database_name database
  row represent global cache configuration field null
  database_datasource_name database contain cache datum source
  database specific cache configuration value admin
  datasource_name cache datum source
  database specific cache configuration value vdpcachedatasource adapter_database_name adapter cache datum source adapter_database_version version adapter cache datum source adapter_driver_name driver class adapter cache datum source status
  cache enable database
  disable
  batch_size batch insert size number row
  time_to_live default time live database second
  0 database cache configuration value field default mean use time live set global cache configuration
  maintenance true cache maintenance task enable
  false
  maintainer_period server run cache maintenance task second
  privilege require procedure require privilege
  example example 1 obtain global cache configuration cache configuration database execute select database_name status batch_size time_to_live maintenance maintainer_period get_cache_configuration
  result like database_name status batch_size time_to_live maintenance maintainer_period null 200 120000 true 21600 customer360 200 120000 true 21600
  row represent global cache configuration database_name null
  example 2 execute obtain global cache configuration select get_cache_configuration database_name null example 3 execute obtain cache configuration specific database select get_cache_configuration database_name = customer360
  cache configuration
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_cache_table#get-cache-table</field><field name="content">
  get_cache_table description store procedure get_cache_table return table cache database hold cache datum specific view
  return additional information cache configuration view
  find useful procedure get_cache_column
  syntax get_cache_table input_database_name text input_view_name text input_database_name database input_view_name view   
  procedure return row field database_name database
  view_name view
  view_type type view
  i.e. base view select join interface etc
  type view join value field include follow information order type join inner leave outer right outer   outer
  join method   hash nest nest parallel   merge
    mean user select method execute join create view execution engine select method runtime
  order join   order   reverseorder
    mean user select order execute join create view execution engine select order runtime cache_catalog_name catalog table store cache datum cache_schema_name schema table store cache datum
  cache_table_name table store cache datum
  effective_ttl
  time live cache datum
  -1 set expire
  vdp_view_timezone time zone view
  cache_timezone time zone cache database
  return error cache disabled view
  privilege require need metadata privilege view input_view_name
  procedure return error
  cache table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_catalog_effective_permissions#get-catalog-effective-permissions</field><field name="content">
  get_catalog_effective_permission store procedure get_catalog_effective_permission return effective privilege grant user
  return row database row element user privilege
  important procedure return privilege user exist active directory identity provider organization i.e. user create virtual dataport input username username run query
  procedure catalog_permission return information privilege result different catalog_permission return privilege role grant user role
     get_catalog_effective_permission return effective privilege user element
  example let grant role read user database
     catalog_permission return row indicate privilege
     get_catalog_effective_permission return row element database
  syntax get_catalog_effective_permission input_user_name text input_database_name text input_user_name mandatory user input_database_name optional null procedure return element user privilege
  null return privilege user element database
  procedure return row element user privilege
  row field username user
  value input_user_name globaladmin true input_user_name administrator
  false
  dbname database privilege grant
  elementname element privilege grant
  null privilege grant database single element elementtype type element database privilege grant
  possible value database datum source view procedure web service widget elementsubtype null element type equal datum source
  type datum source
  possible value df essbase jdbc json custom odbc olap salesforce sapbwbapi saperp ws xml
  dbadmin dbconnect dbcreate dbcreatedatasource dbcreatedataservice dbcreateview dbcreatefolder dbexecute dbwrite dbmetadata dbfile represent privilege grant database elementmetadata elementexecute elementwrite elementinsert elementupdate elementdelete represent privilege grant element database database
  null row represent privilege grant database e.g. individual element
  columnpermission null row represent privilege grant view column privilege
  case field contain comma separate list field project rowpermission true row represent privilege view user row restriction view global security policy check
  false custompermission true row represent privilege view user custom policy apply view
  false
  note column columnpermission rowpermission custompermission affect configuration property com.denodo.vdb.catalog.user
  user.enablecheckviewrestrictionalway
  mean value column null false restriction apply element property set true
  section column privilege explain mean property
  privilege require result procedure change depend privilege user run administrator procedure return information privilege user
  user include administrator database procedure return information privilege grant user execute procedure
  procedure return error case input parameter input_user_name username exist
  input parameter input_database_name database exist
  non administrator user request privilege grant user
  input user kerbero ldap user i.e. user create virtual dataport user run procedure
  case procedure return error user exist
  catalog effective permission
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_catalog_metadata_ws#get-catalog-metadata-ws</field><field name="content">
  get_catalog_metadata_ws description store procedure get_catalog_metadata_ws return information web service create denodo
  syntax get_catalog_metadata_ws input_database_name text input_ws_name text
  input_database_name input_ws_name null procedure return information web service database
  input_ws_name null procedure return information web service database   
  rest web service procedure return row view
  soap web service procedure return row input parameter output parameter operation
  procedure return row field field database_name database web service
  ws_name web service
  operation_name soap web service operation
  rest web service view
  ws_type type element
  value rest soap   web service create denodo 4.7 version early column_name field column_type_name type field
  input soap web service true input parameter false output parameter
  rest web service true default false field mark searchable option remove input output soap web service false input parameter true output parameter
  rest web service true default false field mark output option remove output mandatory true mandatory input parameter false output parameter operator input parameter soap web service operator parameter null field
  visibility type operation
  soap web service 1 parameter belong query operation
  10 parameter belong insert operation
  11 parameter belong update operation
  12 parameter belong delete operation
  rest web service value 1 is_fetch true row represent input parameter soap web service indicate number row fetch
  field add option add pagination administration tool
  false is_offset true row represent input parameter soap web service indicate number row skip result set
  field add option add pagination administration tool
  false is_order_by true row represent input parameter soap web service order result return service
  field add option add order administration tool
  false
  schema_database database element publish locate
  schema_name view publish
  soap web service denodo store procedure
  schema_type type element publish
  possible value view storedprocedure soap web service remark procedure return result input_database_name input_ws_name exist
  privilege require result procedure change depend privilege grant user run
  administrator user role serveradmin obtain information web service
  user administrator database procedure return information service database
  procedure return information web service user metadata privilege
  procedure fail user lack require privilege
  example example 1 select distinct database_name ws_name get_catalog_metadata_ws ws_type = soap return soap web service database
  ws_type input parameter procedure execution engine execute procedure filter service type soap
  example 2 select get_catalog_metadata_ws('customer_report customer_ws obtain information web service customer_ws database customer_report
  user privilege metadata grant web service procedure return row
  example 3 select distinct database_name ws_name ws_type get_catalog_metadata_ws schema_database = customer_report schema_name = customer schema_type = view query return web service publish view customer database customer_report
  catalog metadata ws
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_databases#get-databases</field><field name="content">
  get_database description store procedure get_database return information database
  row represent database
  syntax get_database input_db_name text
  parameter pass procedure return information database server invoker user right access
  parameter input_db_name pass procedure return information specify database
  procedure return field db_name database description description database charset_default possible value true database charset set default
  false charset possible value restrict database charset set restrict case insensitive
  unicode database charset restrict case sensitive cost_optimization_default possible value true database set automatic cost base optimization query set default
  false cost_optimization possible value automatic cost base optimization query enable database
  automatic cost base optimization query disabled database query_simplification_default possible value true database set automatic simplification query set default
  false
  query_simplification possible value automatic query simplification enable database
  automatic query simplification disabled database summary_rewrite_default possible value true database set use summary query acceleration set default
  false
  summary_rewrite possible value usage summary query acceleration enable database
  usage summary query acceleration disable database
  vcs possible value unversione version control disabled database
   vcs system  version control enable version control system database
  authentication possible value local database authentication configure use internal user
  ldap database authentication configure ldap
  odbc_authentication possible value normal database odbc authentication configure
  kerbero database odbc authentication configure kerbero cache_default possible value true database cache configuration set default
  false cache possible value cache enable database
  cache disabled database memory_config_default possible value true database memory usage configuration set default
  false check_view_restrictions_default possible value true database check view restriction configuration change server default
  false check_view_restriction possible value database configure check view restriction
  direct_queries_only database configure check view restriction direct query database
  value charset_default,``cost_optimization_default ` ` query_simplification_default summary_rewrite_default memory_config_default check_view_restrictions_default true database configure property default database configuration
  value lead procedure return false value default server configuration database configuration
  privilege require output procedure change depend privilege grant user run
  user administrator user procedure return information database user connect privilege
  user administrator privilege database procedure return information specify previous section
  user connection privilege database procedure return field set null field db_name description
  example example 1 select get_database return row database caller user access
  example 2 select get_database input_db_name = employee return row datum database employee
  example 3 select db_name get_database
  cost_optimization = return database automatic cost optimization query enable
  database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_delegated_sqlsentence#get-delegated-sqlsentence</field><field name="content">
  get_delegated_sqlsentence description store procedure get_delegated_sqlsentence return sql statement execution engine push database execute query
  order query follow condition query select statement
  query fully push single jdbc datum source
  syntax get_delegated_sqlsentence vdp_query text
  procedure return field database_name database de datum source locate datasource_name datum source sql push delegated_query sql execution engine execute underlie database datum source
  delegated_query generate assume source configuration property allow literal parameter jdbc data source false regardless actual value
  usage note use context clause query pass procedure
  cache mode view involve query affect result
  example procedure return error pass query view join jdbc base view xml base view
  query meet condition list
  cache view enable procedure return sql execution engine push cache datum source
  example select get_delegated_sqlsentence vdp_query = select int_field text_field join_view context(''cache''=''off obtain query delegate source cache disable
  delegate sqlsentence
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_elements#get-elements</field><field name="content">
  get_element description store procedure get_element return information element datum source view web service etc
  filter result parameter element type etc
  row represent element
  want obtain information view use procedure get_view provide information
  syntax get_element input_database_name text input_name text input_type element type input_user_creator text input_last_user_modifi text input_init_create_date date input_end_create_date date input_init_last_modification_date date input_end_last_modification_date date input_description text
   element type  = null | folder | datasource | storedprocedure | wrapper | view | webservice | widget | association | jmslistener invoke procedure want filter parameter pass null
  procedure evaluate input parameter condition
  e.g. pass value input_database_name input_name input_description procedure search return element database contain description
  procedure evaluate follow parameter operator like instead equal input_name input_user_creator input_last_user_modifi input_description mean value parameter use wildcard operator use like
  search description case insensitive
  provide value input_init_create_date input_end_create_date input_init_last_modification_date input_end_last_modification_date procedure return element interval
  i.e. provide value input_init_create_date input_end_create_date procedure return element create date
  input_init_create_date null procedure return element create input_end_create_date
  input_end_create_date null procedure return element create input_init_create_date
  search input_init_last_modification_date input_end_last_modification_date work way   
  procedure return field database_name database element belong element type type element
  value association datasource folder storedprocedure type view webservice widget wrapper subtype subtype element string element subtype
  element subtype subtype view base derive interface materialize datasource custom df essbase jdbc json ldap odbc olap salesforce sapbwbapi saperp ws xml wrapper custom df essbase html jdbc json ldap odbc olap salesforce sapbwbapi saperp ws xml user_creator owner element last_user_modifi user modify element time
  element modify value user_creator create_date date element create
  last_modification_date date element modify time
  element modify value create_date description description element
  folder folder element lowercase
  element folder value base_view_type wrapper subtype base view null element base view
  subtype custom df essbase html jdbc json ldap odbc olap salesforce sapbwbapi saperp ws xml
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow parameter input_database_name null procedure return error user connect privilege database
  procedure return information element user metadata privilege
  example example 1 select get_element input_database_name
  = customer_report folder = /base view obtain element database customer_report inside particular folder
  note folder input parameter procedure
  execution engine execute procedure pass parameter input_database_name
  result information element database
  execution engine filter result return folder base view
  example 2 select get_element input_database_name = customer_report input_init_create_date = addday(current_date -1 obtain element database customer_report create yesterday 12 example 3 select get_element input_type = view input_description = report% query return view description contain word report
  element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_exported_keys#get-exported-keys</field><field name="content">
  get_exported_key description store procedure get_exported_keys return column reference foreign key view export key
  row result represent field export key
  procedure opposite get_foreign_key
  foreign key field collection field view uniquely identify row view view
  example view order primary key d order_detail
  view field order_id value d order belong
  define foreign key create association order   order_detail
  mapping field order_id   order_detail   d   order
  select option referential constraint
  consider foreign key
  end point order principal player dependent
  end point order cardinality 1
  mean row order_detail refer row order
  section association administration guide explain useful create
  syntax get_exported_key input_database_name text input_view_name text invoke procedure want filter parameter pass null
  input_database_name input_view_name null procedure return reference field view database
  input_view_name null procedure return reference field view database   
  procedure return field pk_database_name database view primary key belong
  pk_view_name view primary key
  pk_column_name field primary key
  pk_name primary key
  fk_database_name database view foreign key belong
  fk_view_name view foreign key
  fk_column_name field foreign key fk_name association
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow parameter input_database_name null procedure return error user connect privilege database
  procedure return information export key view user metadata privilege view view foreign key
  example let view like figure figure configuration association view player   game example 1 select pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name get_exported_key
  input_database_name
  = example pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name player id_player primary winner player_fk winner_player game id_game primary player game_fk game_player pass value input parameter input_view_name pass null result procedure get_foreign_key
  example 2 select pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name get_exported_key
  input_database_name = example input_view_name='game result pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name game id_game primary player game_fk game_player example 3 select pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name get_exported_keys input_database_name
  = example input_view_name='winner query return row foreign key reference view winner
  example procedure get_foreign_key understand difference procedure
  export key
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_foreign_keys#get-foreign-keys</field><field name="content">
  get_foreign_key description store procedure get_foreign_key return foreign key view
  row result represent field foreign key
  procedure opposite get_exported_key
  foreign key field collection field view uniquely identify row view view
  example view order primary key d order_detail
  view field order_id value d order belong
  define foreign key create association order   order_detail
  mapping field order_id   order_detail   d   order
  select option referential constraint
  consider foreign key
  end point order principal player dependent
  end point order cardinality 1
  mean row order_detail refer row order
  section association administration guide explain useful create
  syntax get_foreign_key input_database_name text input_view_name text
  input_database_name input_view_name null procedure return foreign key view database
  input_view_name null procedure return foreign key view database   
  procedure return field pk_database_name database view primary key belong
  pk_view_name view primary key
  pk_column_name field primary key
  pk_name primary key
  fk_database_name database view foreign key belong
  fk_view_name view foreign key
  fk_column_name field foreign key fk_name association
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow parameter input_database_name null procedure return error user connect privilege database
  procedure return information foreign key view user metadata privilege view reference view
  example let view like figure figure configuration association view player   game example 1 select pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name get_exported_key
  input_database_name
  = example pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name player id_player primary winner player_fk winner_player game id_game primary player game_fk game_player pass value input parameter input_view_name pass null result procedure get_exported_key
  example 2 select pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name get_foreign_key
  input_database_name = example input_view_name='player result pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name game id_game primary player game_fk game_player example 3 select pk_view_name pk_column_name pk_name fk_view_name fk_column_name fk_name get_foreign_key input_database_name
  = example input_view_name='game
  query return row foreign key reference view game
  example procedure get_exported_keys understand difference procedure
  foreign key
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_jdbc_datasource_tables#get-jdbc-datasource-tables</field><field name="content">
  get_jdbc_datasource_table description store procedure get_jdbc_datasource_table return list table view underlie database jdbc data source match search criterion
  combination procedure generate_vql_to_create_jdbc_base_view automate process base view table view source database
  syntax get_jdbc_datasource_table input_datasource_name text input_catalog_name text input_schema_name text input_table_name text input_type text input_database_name text input_datasource_name datum source want list table input_catalog_name optional catalog want list table
  datum source support catalog set null
  null datum source support catalog procedure return matching table catalog
  input_schema_name optional schema want list table
  datum source support schema set null
  null datum source support schema procedure return matching table schema
  input_table_name optional table
  input_type optional type element want find
  null return type element
  possible value parameter depend underlie database
  know value pass parameter execute procedure pass null parameter value parameter type input_database_name optional database datum source belong
  null procedure use current database   
  procedure return row table view underlie database jdbc data source match search criterion catalog_name catalog table
  schema_name schema table
  table_name table type type catalog table
  privilege require user need privilege execute datum source
  jdbc datasource table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_parameter#get-parameter</field><field name="content">
  get_parameter description store procedure get_parameter return information value configuration property virtual dataport server web container
  syntax get_parameter input_property_name text input_is_web_container_property boolean input_property_name property value want input_is_web_container_property optional true property search web container configuration property set
  property search virtual dataport configuration property set
  default value false   
  procedure return row follow field property_value value request property
  procedure return row
  property exist value property_value null
  privilege require global administrator invoke procedure
  parameter
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_primary_keys#get-primary-keys</field><field name="content">
  get_primary_key description store procedure get_primary_key return list field primary key view
  row represent field primary key
  syntax get_primary_key input_database_name text input_view_name text
  input_database_name input_view_name null procedure return field primary key database
  input_view_name null procedure return field primary key view input_database_name   
  procedure return field database_name database element belong view_name view
  column_name field
  primary_key_name value primary
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow input_database_name null procedure return error user connect privilege database
  procedure return information primary key view user metadata privilege
  example select view_name column_name primary_key_name get_primary_key
  input_database_name = chinook result view_name column_name primary_key_name chinook_custom customerid primary playlisttrack playlistid primary playlisttrack trackid primary genre genreid primary playlist playlistid primary invoiceline invoicelineid primary track trackid primary invoice invoiceid primary album albumid primary chinook_employee employeeid primary mediatype mediatypeid primary artist artistid primary
  primary key
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_procedure_columns#get-procedure-columns</field><field name="content">
  get_procedure_columns description store procedure get_procedure_columns return information field store procedure user metadata privilege
  procedure return row field procedure
  filter procedure and/or database
  syntax get_procedure_columns input_database_name text input_procedure_name text input_database_name database input_procedure_name procedure want obtain field
  procedure evaluate parameter input_procedure_name operator like instead equal
  mean value parameter use wildcard operator use like
  input_database_name input_procedure_name null procedure return field predefine procedure procedure database
  input_procedure_name null procedure return field procedure input_database_name   
  procedure return field database_name database procedure parameter belong procedure_name procedure
  column_name procedure parameter
  column_vdp_type type virtual dataport int text float etc column_sql_type type parameter source type property field
  e.g. varchar nchar integer bigint etc
  constant define class java.sql
  type jdbc api column_sql_type_code integer represent type parameter source type property parameter
  value field define class java.sql
  type jdbc api
  e.g. int = 4 varchar = 12 etc column_type possible value input parameter
  output parameter inout input output parameter
  column_is_nullable true value field null false
  privilege require result procedure change depend privilege grant user run
  user administrator user consider procedure return information predefine store procedure and/or procedure user metadata privilege
  implication follow user administrator procedure return information procedure database
  procedure return information procedure database user local administrator
  procedure return information procedure database user connect metadata privilege
  note procedure return privilege error
  example let user execute select get_procedure_columns i.e. obtain information field procedure database user connect metadata privilege database testing
  scenario procedure return information procedure testing database procedure database
  procedure column
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_server_connectivity#get-server-connectivity</field><field name="content">
  get_server_connectivity description store procedure get_server_connectivity return tcp ip port number virtual dataport listen incoming connection
  syntax get_server_connectivity procedure return single row field server_port port incoming connection jdbc application jmx application denodo monitor monitor tool administration tool
  odbc_port odbc port
  http_port http port web container denodo https_enable true https enable web container communication web container client false
  note true communication http_port plain text
  https_port https port web container denodo ssl_enable true ssl tls enable traffic virtual dataport client false
  privilege require privilege require execute procedure
  example example 1 select get_server_connectivity
  server connectivity
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_sessions#get-sessions</field><field name="content">
  get_session description store procedure get_session return information open session
  procedure return information connection open jmx client
  procedure return information connection open jms client time client execute query
  syntax get_session database_name text database_name database
  null return information session
  return information session database
  procedure return row field connection
  procedure return field database_name database connect connection_id unique identifi connection
  connection_start_time instant connection open
  client_ip ip address client
  case web service ip address final client
  i.e. send http request user_agent application perform request
  set user agent application useful know application open connection
  section set user agent application administration guide explain set
  access_interface type client perform request jdbc odbc jmx vdp admintool etc
  table possible value attribute access interface administration guide list possible value attribute session_id unique identifi session
  session_start_time instant session open user_name user client
  web_service_name soap rest web service web service
  jms_queue_name jms connection jms queue query send
  intermediate_client_ip soap rest global restful web service ip address service run
  service deploy web container embed denodo ip virtual dataport server
  ip address jee container service deploy user_authentication_type type authentication client
  value local ldap kerbero saml2   oauth2
  admin_user true user administrator user role serveradmin
  false session_status true session active
  false
  query_runne query client execute right finish
  active query query_running_id unique identifi query client execute right
  active query query_running_queue true client execute query query wait server reach max concurrent request limit limit section limit number concurrent request administration guide last_executed_query query execute client last_executed_query_end_time instant query finish
  active_transaction boolean true session run transaction single_user_mode boolean true statement session currently run switch database single user mode
  occur query run create view web service etc single_user_mode_database comma separate list database switch single user mode
  single statement switch database single user mode affect database
  example create view database db_1 project view db_2 database switch single user mode creation view
  privilege require information return procedure depend privilege user
  administrator user obtain information session
  user administrator database obtain information session connect database
  user obtain information session
  session
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_source_changes#get-source-changes</field><field name="content">
  get_source_change description store procedure get_source_changes detect difference schema base view underlie datum source
  example jdbc base view detect difference schema table database schema base view
  syntax get_source_change db_name text table_name text db_name denodo database table_name belong
  null look table_name current database
  table_name base view
  procedure return row field view row field present source base view
  field array register return row subfield
  output schema procedure follow field field field view
  row represent new field field source type new type field
  field change value old_type
  field remove source value
  old_type old type field
  type field change value type
  row represent new field value modification possible value field   string field change
     new field row represent field add source
     delete field row represent field delete source
     type change type field change
     property change source type property field change
     compound structure change subfield field change
  level level field value 1 remark default procedure return error find source
  example return error table_name jdbc base view table view delete underlie database
  table_name json base view json file exist etc
  want procedure fail source exist execute follow statement vql shell need administrator set com.denodo.vdb.contrib.storedprocedure
  sourcechangesprocedure.errorsasresults'='true restart virtual dataport server apply change
  change procedure return row instead field modification field hold error
  procedure return error table_name base view
  procedure return error db_name table_name exist
  privilege require user metadata privilege base view execute privilege datum source execute procedure
  mean follow user execute procedure administrator administrator database
  user connect privilege database metadata privilege base view execute privilege datum source
  example let suppose internet_inc jdbc base view database customer360 current schema source table source database change base view create table new field customer_id
  field specific_field1 remove table type field ttime change text type field summary property change select field type old_type modification depth get_source_change db_name = customer360
  table_name = incident result invoke previous query follow field type old_type modification depth iinc_id long long 1 summary text text property change 1 ttime text date type change 1 taxid text text 1 specific_fiel d1 text delete field 1 customer_id long new field 1
  source change
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_source_columns#get-source-columns</field><field name="content">
  get_source_columns description store procedure get_source_columns return information column source jdbc base view
  specifically jdbc base view create table view return row column table view database
  jdbc base view create sql query return row column project query
  jdbc base view create store procedure return column parameter procedure
  obtain information procedure query database
  information base metadata base view
  field add table base view base view create procedure return new column
  update metadata base view source refresh view
  detect change view programmatically procedure source_change
  procedure get_source_table
  syntax get_source_columns input_database_name text input_view_name text
  parameter mandatory   
  procedure return row column view database_name database base view belong
  view_name view
  column_name column base view field source_column_name column_depth 1 column simple type
  compound type depth field
  view_wrapper_name jdbc wrapper base view source_catalog_name catalog table view source database
  null base view create sql query store procedure database concept catalog source_schema_name schema table view source database
  null base view create sql query store procedure database concept schema source_table_name table view procedure database
  null base view create sql query
  sqlsentence sql statement base view
  null base view create sql statement source_column_name base view create table view column source table
  base view create store procedure parameter
  base view create sql statement alia column query
  sql statement column alias result depend database source_column_type_name type column
  e.g. varchar nchar integer bigint etc
  constant define jdbc api class java.sql.type source_column_type_id integer represent type field source type property field
  e.g. int = 4 varchar = 12 etc
  value field define jdbc api class java.sql.type
  source_column_type_size mean depend type field column store text value indicate maximum length field
  numeric type precision
  column store integer 0 source_column_type_decimal column store number decimal maximum number decimal
  0 type field source_package_name package hold store procedure database
  null procedure belong package base view create store procedure source_column_parameter_type possible value 1 parameter mode 2 parameter mode inout 4 parameter mode 0 mode parameter unknown   
  procedure return error input_database_name input_view_name exist
  base view jdbc base view
  privilege require procedure return error user metadata privilege base view
  example select get_source_columns
  input_database_name = hr input_view_name
  = employee
  source column
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_source_table#get-source-table</field><field name="content">
  get_source_table description store procedure get_source_table return information source jdbc base view
  specifically jdbc base view create table view return table view database schema catalog
  jdbc base view create sql query return query
  jdbc base view create store procedure return procedure
  obtain information procedure query database
  information base metadata base view
  table base view different schema base view create procedure return old schema
  update metadata base view source refresh view
  detect change view programmatically procedure source_change
  need obtain information column table view database procedure get_source_columns
  syntax get_source_table input_database_name text input_view_name text
  parameter mandatory   
  procedure return single row field database_name database base view belong
  view_name base view
  view_type value field base
  view_wrapper_name jdbc wrapper base view source_catalog_name catalog table view source database
  null base view create sql query store procedure database concept catalog source_schema_name schema table view source database
  null base view create sql query store procedure database concept schema source_table_name table view procedure database
  null base view create sql query
  sqlsentence sql statement base view
  null base view create sql statement
  is_procedure true view create store procedure database false source_package_name package hold store procedure database
  null procedure belong package base view create store procedure specific_name unique identifi distinguish overloaded store procedure database
  null identifier exist base view create store procedure   
  procedure return error input_database_name input_view_name exist
  base view jdbc base view
  privilege require procedure return error user metadata privilege base view
  example select get_source_table
  input_database_name = hr input_view_name
  = employee
  source table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_stats_for_fields#get-stats-for-fields</field><field name="content">
  get_stats_for_field description store procedure get_stats_for_field gather return statistic field jdbc base view minimum value maximum value etc field number row view
  obtain statistic query system table jdbc database execute select query aggregation function instead
  obtain statistic jdbc base view sure source database oracle ibm db2 etc statistic table
  statistic present outdate statistic gather accurate execution plan select cost base optimizer suboptimal
  syntax get_stats_for_field input_mode text input_database_name text input_view_name text input_field array input_table_stats boolean input_no_delegate boolean input_return_querie boolean input_save boolean input_mode set procedure gather statistic
  valid value smart_only procedure gather statistic system table database smart_then_atsource_through_vdp procedure gather statistic system table database
  execute select statement gather statistic obtain system table database
  atsource_through_vdp_only procedure query system table
  instead execute select statement
  smart_cache_only procedure gather statistic system table database vdp cache view
  smart_cache_then_atcache_through_vdp procedure gather statistic system table database vdp cache view
  execute select statement gather statistic obtain system table cache database
  aggregation query execute database vdp cache view
  atcache_through_vdp_only procedure query system table
  instead execute select statement
  aggregation query execute database vdp cache view input_database_name database view_name belong
  null procedure look input_view_name current database input_view_name procedure gather statistic view case
  input_field array register field statistic want gather
  register field field_name field
  stat array statistic want collect field_count_distinct distinct value field_avg_len average size field_max max value field_min
  min value field_num_null null value
  null gather statistic field
  source_stat_name object database hold statistic view
  source like microsoft sql server allow user generate multiple statistic field set field store different object
  null obtain statistic default object
  value ignore applicable
  input_table_stats true procedure obtain number row table
  false input_no_delegate true procedure push source aggregation function execute select statement
  false input_return_querie true procedure return statement query execute obtain statistic table
  false input_save true procedure store gather statistic table instead return
  false store procedure return statistic persist
  example example 1 get_stats_for_fields('smart_only admin internet_inc row('iinc_id',null null row('specific_field1',null null row('taxid',null null true false false false gather statistic field iinc_id specific_field1 taxid view internet_inc
  query system table database
  example 2 get_stats_for_fields('smart_only admin internet_inc row('iinc_id',null null row('specific_field1',null null row('taxid',null null false false false false previous example gather number row table note value late parameter
  example 3 get_stats_for_fields('smart_only admin internet_inc row('summary row('field_num_null row('field_count_distinct row('field_avg_len null true false false false gather number row view statistic null value distinct value   average size field summary
  parameter smart_only query system table database
  example 4 get_stats_for_fields('smart_only admin internet_inc row('iinc_id',null null row('specific_field1',null null row('taxid',null null true false false true gather statistic field iinc_id specific_field1 taxid view internet_inc store value instead return
  stat field
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_type_attributes#get-type-attributes</field><field name="content">
  get_type_attribute description store procedure get_type_attributes return information member type
  row represent member type
  note create view compound field register array administration tool automatically create type compound field
  syntax get_type_attributes input_database_name text input_type_name text input_attribute_name text invoke procedure want filter parameter pass null
  procedure evaluate parameter input_type_name input_attribute_name operator like instead equal
  mean value parameter use wildcard operator use like
  input_database_name input_type_name null procedure return member type define user
  input_type_name null procedure return member type define user database input_database_name   
  procedure return field database_name database type belong type_name type type register array attribute_name member type
  attribute_vdp_type type member
     basic type int float text etc compound type
  attribute_sql_type integer represent type member accord jdbc api class java.sql
  type
  attribute_sql_type_code type member accord jdbc api class java.sql
  type attribute_type_decimal numeric type maximum number decimal support type
  type null attribute_type_precision maximum number fractional digit value type store
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow parameter input_database_name null procedure return error user connect metadata privilege database
  query pass value input_database_name procedure return information member type create database user connect metadata privilege
  example select type_name type attribute_name attribute_vdp_type attribute_sql_type_code get_type_attributes input_database_name='chinook result type_name type attribute_name attribute_vdp_type attribute_sql_type_code register_text register value text 12 register_artistid_name register artistid int 4 register_artistid_name register text 12 array_register_text array value text 12 array_register_artistid_name array artistid int 4 array_register_artistid_name array text 12 relation_link register rel text 12 relation_link register rel_db text 12 relation_link register title text 12 relation_link register href text 12
  type attribute
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_user_defined_types#get-user-defined-types</field><field name="content">
  get_user_defined_type description store procedure get_user_defined_types return information type
  row represent type
  note create view compound field register array administration tool automatically create type compound field
  want obtain structure specific type use procedure get_type_attribute
  syntax get_user_defined_type input_database_name text input_type_name text
  invoke procedure want filter parameter pass null
  procedure evaluate parameter input_type_name operator like instead equal
  mean value parameter use wildcard operator use like
  input_database_name input_type_name null procedure return type define user
  input_type_name null procedure return type define user database input_database_name   
  procedure return field database_name database type belong type_name type
  vdp_type register array
  sql_type type type accord jdbc api
  struct array
  sql_type_code integer represent type type jdbc api
  2002 register 2003 array
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow parameter input_database_name null procedure return error user connect execute privilege database
  query pass value input_database_name procedure return information type create database user connect execute privilege
  example select database_name type_name vdp_type sql_type sql_type_code get_user_defined_type input_database_name='chinook result database_name type_name vdp_type sql_type sql_type_code chinook register_text register struct 2002 chinook register_artistid_name register struct 2002 chinook array_register_text array array 2003 chinook array_register_artistid_name array array 2003 chinook relation_link register struct 2002
  user define type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_view_columns#get-view-columns</field><field name="content">
  get_view_columns store procedure get_view_columns return information field view
  information include type field length precision case number etc
  procedure return row field view
  filter view and/or database
  procedure similar catalog_metadata_views internally work similarly
  difference return different field parameter input_view_name   get_view_columns evaluate like operator
  syntax get_view_columns  input_database_name text   input_view_name text  input_database_name database input_view_name view want obtain field
  procedure evaluate parameter input_view_name operator like instead equal
  mean value parameter use wildcard operator use like
  input_database_name input_view_name null procedure return field view database
  input_view_name null procedure return field view input_database_name   
  procedure return field database_name database view field belong view_name view
  column_name view field
  column_vdp_type type virtual dataport int text float etc column_sql_type type field source type property field
  e.g. varchar nchar integer bigint etc
  constant define class java.sql
  type jdbc api column_sql_type_code integer represent type field source type property field
  value field define class java.sql
  type jdbc api
  e.g. int = 4 varchar = 12 etc column_size mean depend type field field type text indicate maximum length field
  numeric type maximum precision
  value decimal int long number 0 column_decimal field type decimal value type decimal   source type property field
  0
  type field
  column_radix number fractional digit value field store column_is_primary_key true field field primary key view false column_is_nullable true value field null false
  column_remark description field
  field description value null
  column_is_autoincrement true value field generate incrementally false column_is_generate true field auto generate false
  ordinal_position integer represent ordinal position field
  field view ordinal_position 1 column_vdp_type_database database column type define complex type null type primitive i.e. text long
  privilege require result procedure change depend privilege grant user run
  user administrator user consider procedure return information procedure user metadata privilege
  implication follow user administrator procedure return information view database
  procedure return information view database user local administrator
  procedure return information view database user connect metadata privilege
  note procedure return privilege error
  example let user execute select get_procedure_columns i.e. obtain information field view database user connect metadata privilege database testing
  scenario procedure return information view testing database view database
  example select view_name column_name column_vdp_type column_sql_type column_is_primary_key get_view_columns input_database_name
  = chinook input_view_name
  = invoice% result view_name column_name column_vdp_type column_sql_type column_is_primary_key invoiceline invoicelineid int integer true invoiceline invoiceid int integer false invoiceline trackid int integer false invoiceline unitprice decimal decimal false invoiceline quantity int integer false invoice invoiceid int integer true invoice customerid int integer
  false invoice invoicedate date timestamp false invoice billingaddress text varchar false invoice billingcity text varchar false invoice billingstate text varchar false invoice billingcountry text varchar false invoice billingpostalcode text varchar false invoice total decimal decimal false
  result include field view invoiceline   invoice input parameter input_view_name use wildcard  
  view column
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_view_indexes#get-view-indexes</field><field name="content">
  get_view_indexes description store procedure get_view_indexes return list index view
  index administration tool tab index option view
  row represent field index
  syntax get_view_indexes input_database_name text input_view_name text
  invoke procedure want filter parameter pass null
  input_database_name input_view_name null procedure return field index
  input_view_name null procedure return field index input_database_name   
  procedure return field database_name database element belong view_name view
  unique true field belong unicity index false
  index_name index type type index
  1 cluster index
  2 hash index
  3 style index
  ordinal_position column sequence number index
  column 1 column_name column asc_or_desc column sort sequence ascend d descend null sort sequence support filter_condition filter condition null filter condition
  privilege require result procedure change depend privilege grant user run
  user administrator user consider follow parameter input_database_name null procedure return error user connect privilege database
  procedure return information index view user metadata privilege
  example select unique index_name type get_view_indexes
  input_database_name = chinook input_view_name
  = album result index_name unique type pk_index true 3 ifk_albumartistid false 3
  view index
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_view_statistics#get-view-statistics</field><field name="content">
  get_view_statistic description store procedure get_view_statistic return statistic view
  row result represent statistic field view
  statistic view gather procedure return 0 row
  gather statistic view store procedure generate_smart_stats_for_field administration tool dialog option 
  statistic view
  syntax get_view_statistic input_database_name text input_name text input_database_name mandatory database view
  input_name mandatory view
  procedure return row field view field database_name database view
  view
  field_name field
  rows_number number row view
  value row view
  average_size text field average length field type average size byte
  min_value minimum value field
  max_value maximum value field
  distinct_value number distinct value field
  null_value number null value field
  remark procedure return 0 row situation user privilege execute view
  view exist
  statistic view gather
  privilege require procedure return information view user execute privilege view
  return row
  example example 1 select field_name rows_number average_size min_value max_value distinct_value null_value get_view_statistic
  input_database_name = customer_report input_name = invoice query obtain statistic field view invoice database customer_report
  view statistic
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_view_tags#get-view-tags</field><field name="content">
  get_view_tags description store procedure get_view_tags return information tag assignment view column
  row represent assignment
  syntax get_view_tags input_database_name text input_view_name text input_column_name element type input_tag_name array input_database_name database view belong optional input_view_name view optional input_column_name column optional input_tag_names tag search optional
  output schema follow field database_name database view belong
  view_name view
  column_name column
  tag_name tag
  example example 1 select get_view_tag
  input_database_name = acme obtain tag assignment information view column database acme
  example 2 select get_view_tag
  input_database_name
  = acme
  input_tag_names = row('restricte row('confidential obtain view column database acme tag restrict confidential
  view tag
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/get_views#get-views</field><field name="content">
  get_view description store procedure get_view return information view
  filter result parameter view view type etc
  row represent view
  want obtain information type element view use procedure get_element
  syntax get_view input_database_name text input_name text input_user_creator text input_last_user_modifi text input_init_create_date date input_end_create_date date input_init_last_modification_date date input_end_last_modification_date date  input_view_type   input_swap_active   input_cache_status  input_description text input_retrieve_invalid_views_only boolean
   input_view_type  = 0
  base view | 1
  derive view |
  2 interface view | 3 materialize table  input_swap_active  = 0
  swap status default | 1
  swap status | 2 swap status  input_cache_status  = 0
  cache mode | 1
  cache mode partial exact | 2 cache mode partial | 3 cache mode | 4 cache mode partial exact preload
  | 5 cache mode partial preload invoke procedure want filter parameter pass null
  procedure evaluate input parameter condition
  e.g. pass value input_database input_name input_description procedure search return view database contain description
  procedure evaluate follow parameter operator like instead equal input_name input_user_creator input_last_user_modifi input_description mean value parameter use wildcard operator use like
  search description case insensitive
  provide value input_init_create_date input_end_create_date input_init_last_modification_date input_end_last_modification_date procedure return view interval
  i.e. provide value input_init_create_date input_end_create_date procedure return view create date
  input_init_create_date null procedure return view create input_end_create_date
  input_end_create_date null procedure return view create input_init_create_date
  search input_init_last_modification_date input_end_last_modification_date work way   
  procedure return field database_name database view belong view
  type value view
  user_creator owner view last_user_modifi user modify view time
  view modify value user_creator create_date date view create
  last_modification_date date view modify time
  view modify value create_date description description view
  view_type possible value 0 base view 1 derive view 2 interface view 3 materialize table swap_active possible value 0 swap status default 1 swap status   2 swap status   cache_status possible value 0 cache mode   1 cache mode partial exact 2 cache mode partial 3 cache mode   4 cache mode partial exact preload 5 cache mode partial preload folder folder view lowercase
  view folder value view_status possible value ok interface_not_implemente invalid
  privilege require result procedure change depend privilege grant user run
  user administrator user consider procedure return information procedure user metadata privilege
  implication follow user administrator procedure return information view
  user administrator database procedure return information view database
  procedure return information view user metadata privilege
  example example 1 select get_view
  input_database_name = customer_report folder = /base view obtain view database customer_report inside particular folder
  note folder input parameter procedure
  execution engine execute procedure pass parameter input_database_name
  result information view database
  execution engine filter result return folder base view
  example 2 select view_info.database_name view_info.type view_type user_creator owner index_name view_index.type index_type ordinal_position column_name asc_or_desc filter_condition get_view
  view_info leave outer join get_view_indexes view_index view_info.database_name = view_index.input_database_name view_info.name
  = view_index.input_view_name view_info.input_database_name = customer360 query return view index database customer360
  query leave outer join get_view   get_view_indexes view index add result
  example 3 select get_view
  input_database_name = customer_report input_init_create_date = addday(current_date -1 obtain view database customer_report create yesterday 12
  example 4 select get_view input_description = report% query return view description contain word report
  view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/list_jdbc_datasource_tables#list-jdbc-datasource-tables</field><field name="content">
  list_jdbc_datasource_table note store procedure deprecate remove major version denodo platform
  use procedure get_jdbc_datasource_table instead get_jdbc_datasource_table input parameter filter information obtain source speed query
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure list_jdbc_datasource_table return table view underlie database jdbc datum source
  combination procedure generate_vql_to_create_jdbc_base_view automate process base view table view source database
  syntax list_jdbc_datasource_table data_source_name text data_source_name datum source like list table   
  procedure return row table view underlie database jdbc data source catalog_name catalog table
  schema_name schema table
  table_name table type type catalog table
  privilege require user need execute privilege datum source
  list jdbc datasource table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/logcontroller#logcontroller</field><field name="content">
  logcontroller description store procedure logcontroller change level log category subcategorie
  change perform procedure lose server stop section configure log system administration guide
  important set log level trace   debug instruct support team denodo
  reason avoid set log level trace   debug log system log sensitive information like datum retrieve datum source
  example set log category com.denodo   com.denodo.vdb.catalog.type   trace log system log result query
  troubleshoot difficult log file fill message irrelevant problem hand
  example set com.denodo   com.denodo.vdb.interpreter   trace log system log lot information process parse query receive virtual dataport
  necessary problem parse fill log unnecessary message problem different
  production server avoid set log category com.denodo   debug   trace reduce performance virtual dataport message log system store
  syntax logcontroller category text  level 
   level  = trace | debug | info | warn | error | fatal category category log level type message want log category
  privilege require administrator invoke procedure
  example example 1 logcontroller('com.denodo.vdp.request info
  default configuration execute query request send server log  denodo_home/logs vdp vdp requests.log
  example 2 logcontroller('com.denodo.vdp.request info logcontroller('com.denodo error second command set log category com.denodo child error
  execute second command request log vdp-requests.log file
  logcontroller
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/maintain_metadata_tables#maintain-metadata-tables</field><field name="content">
  maintain_metadata_table description store procedure maintain_metadata_table execute maintenance operation table database store metadata virtual dataport
  apply virtual dataport store metadata embe derby database default option store external database
  element view datum source remove virtual dataport occasionally reference element mark delete leave metadata database
  procedure purge row
  procedure different compact_metadata_table procedure external database configure store metadata compact_metadata_tables useful metadata embed derby
  procedure remove unused row database compact_metadata_table reclaim unused space local catalog database
  important metatada store external database virtual dataport server point database sure node start execute procedure
  syntax maintain_metadata_tables
  input_action action type
   action type  = purge_row action type action execute catalog table
  currently support value purge_row remove row mark delete
  output schema follow field action action execute catalog table element catalog element process
  affect number affect row
  instance number purge tuple
  error error message case problem happen process current element
  example select maintain_metadata_tables
  input_action = purge_row privilege require administrator invoke procedure
  maintain metadata table
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/migrate_date_types#migrate-date-types</field><field name="content">
  migrate_date_type description store procedure migrate_date_type automatically scan base view interface view complex type update change column type date deprecate datetime type add denodo 7.0
  syntax get_view input_database_name text input_process_base_view boolean input_process_interface_view boolean input_process_complex_type boolean
  provide non null value input_database_name scan element database
  note update element database propagate change element database
  pass null parameter update element server
  set input_process_base_view input_process_interface_view input_process_complex_type false skip processing kind element
  procedure change field type date new type follow way jdbc base view virtual dataport look field sourcetypename statement create wrapper jdbc base view adapter datum source base view
  information export date field new type
  non jdbc base view derive view look property sourcetypeid field create table statement property sourcetypeid date field update localdate type denodo represent date value time equivalent type date sql
  time field update time
  timestamp field remain date deprecate
  information know field timestamp timestamptz
  field source type field remain date deprecate
  information export field new date type field export date
  occur non jdbc base view field source type d define field derive view result apply function
  row return procedure field database_name database element describe row
  element_name element update
  element_type type element update
     base interface   register column_name field date type update column_new_type new type assign field
  status message describe result procce migrate field
  example ok list view modify change propagation error
  privilege require user run procedure administration privilege database process
  example example 1 select migrate_date_type input_process_base_view = true
  input_process_interface_view = true input_process_complex_type = true scan database search base view interface view complex type field date update accord rule describe
  return row column date type
  example 2 select database_name element_name element_type nest(column_name column_new_type status migrate_date_types input_process_base_view = true input_process_interface_view = true input_process_complex_type = true group
  database_name element_name element_type return row element
  information column view register nest array
  migrate date type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/ping_data_source#ping-data-source</field><field name="content">
  ping_data_source description store procedure ping_data_source check specify datum source accessible virtual dataport
  try open new connection datum source time window return follow value
  connection establish datum source accessible virtual dataport
  problem try connect datum source
  timeout
  successful unsuccessful response time window
  effect update ping relate attribute corresponding datasourcemanagementinfo mbean
  syntax ping_data_source database_name text data_source_type  ping_data_source_type  data_source_name text timeout long
   ping_data_source_type  = jdbc | odbc | ldap | olap | sapbwbapi | saperp | salesforce database_name database datum source reside
  data_source_type type datum source
  account subset datum source type support ping invocation data_source_name datum source
  timeout time millisecond store procedure wait answer datum source
  parameter optional
  null store procedure consider default timeout value 15000
  store procedure return row follow field database_name database datum source reside
  data_source_type type datum source data_source_name datum source status result ping invocation value timeout
  startime instant ping datum source actually start
  duration result ping time millisecond datum source respond null
  down_cause result ping message explain cause problem null
  privilege require user connect privilege database datum source reside execute privilege datum source able execute store procedure
  ping data source
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/source_changes#source-changes</field><field name="content">
  source_change note store procedure deprecate remove major version denodo platform
  use procedure get_source_change instead get_source_change search database connect return information
  section feature deprecate denodo platform 8.0 list feature deprecate
  description store procedure source_change detect difference schema base view underlie datum source
  example jdbc base view detect difference schema table database schema base view
  note recommend procedure get_source_change instead search change base view database
     source_change work base view current database
  syntax source_change table_name text table_name base view
  view exist derive view procedure return error
  procedure return row field view row field present source base view
  field array register row subfield
  output schema procedure follow field field field view
  row represent new field field source type new type field
  field change value old_type
  field remove source value
  old_type old type field
  type field change value type
  row represent new field value
  modification field change
  value new field row represent field add source
     delete field row represent field delete source
     type change type field change
     compound structure change subfield field change
  level level field value 1 remark default procedure return error find source
  example return error table_name jdbc base view table view delete database table_name json base view json file exist etc
  want procedure fail source exist execute follow statement vql shell need administrator set com.denodo.vdb.contrib.storedprocedure
  sourcechangesprocedure.errorsasresults'='true restart virtual dataport server apply change
  change procedure return row instead field modification field hold error
  privilege require user metadata privilege base view execute privilege datum source execute procedure
  mean follow user execute procedure administrator administrator database
  user connect privilege database metadata privilege base view execute privilege datum source
  example let suppose internet_inc jdbc base view current schema table database change base view create table new field customer_id
  field specific_field1 remove table type field ttime change text select field type old_type modification depth source_change table_name = internet_inc result invoke previous query follow field type old_type modification depth iinc_id long long 1 summary text text 1 ttime text date type change 1 taxid text text 1 specific_fiel d1 text delete field 1 customer_id long new field 1
  source change
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/view_dependencies#view-dependencies</field><field name="content">
  view_dependencie description store procedure view_dependencie return lineage view
  list view datum source view build
  procedure allow obtain programmatically information administration tool display tree view dialog derive view
  syntax view_dependencie input_view_database_name text input_view_name text include_tag boolean input_view_database_name database view want obtain dependency input_view_name view want obtain dependency
  parameter optional input_view_database_name input_view_name null procedure return dependency view database
  input_view_database_name null input_view_name procedure return dependency view database
  input_view_name null input_view_database_name procedure return dependency view database note view dependency view database include_tag specifie result contain tag dependency view column false default
  row result procedure represent dependency derive view field view_name element dependency derive view base view data source
  output schema follow field view_database_name database view field view_name belong
  view_name derive view view_identifier identifi view
  autogenerate store procedure change execution procedure
  example understand use value
  view_type type view
  i.e. base view select join interface etc
  type view join value field include follow information order type join inner leave outer right outer   outer
  join method   hash nest nest parallel   merge
    mean user select method execute join create view execution engine automatically select method runtime
  order join   order   reverseorder
    mean user select order execute join create view execution engine select order runtime
  private_view true view field view_name private false
  view private view_name represent join minus intersect view join minus intersect view view internally virtual dataport user
  example create derive view j_v join view v1 join v2 join v3 internally virtual dataport create join view v1 v2
  j_v result join internal view v3
  example join v1 v2 private view j_v public
  information private view allow know order join minus intersect view view perform dependency_database_name database dependency belong
  value field view_database_name dependency_name element view datum source view view_name field depend
  dependency_identifier internal identifi element view datum source view view_name field depend
  autogenerate store procedure change execution procedure
  dependency_type type element view view_name field depend depth distance view field view_name dependency
  row represent direct dependency value field 1
  direct dependency dependency view directly depend
  e.g. base view projection view create base view direct dependency
  row represent transitive dependency value field great 1
  transitive dependency dependency view depend view
  let create selection view p_v create base view bv1
  example transitive dependency p_v datum source view bv1   
  invoke procedure denodo store procedure filter input parameter possible
  query finish fast strain denodo server
  example execute obtain dependency view correct way invoke procedure view_dependencie  select view_dependencie
  input_database_name
  = tpc_h input_view_name
  = orders_of_european_customer position('datasource dependency_type
   0 execution engine pass value input_database_name   input_view_name store procedure store procedure calculate dependency view orders_of_european_customer
  execution engine evaluate condition position(\u2018datasource dependency_type  0 row represent dependency view
  wrong way invoke procedure view_dependencie  select view_dependencie
  view_database_name = tpc_h view_name = orders_of_european_customer position('datasource dependency_type 
  0 query return result
  store procedure calculate dependency view database receive value input parameter
  store procedur return dependency view execution engine select meet condition
     real life deployment denodo query millisecond second minute
  privilege require information return procedure change depend type user execute procedure administrator procedure return information dependency
  administrator database procedure return information view database
  return information dependency view database
  user metadata privilege database procedure return information dependency view database
  return dependency view datum source
  user metadata privilege view database procedure return information dependency field view user metadata privilege grant
  user metadata privilege grant dependency value field dependency_type   privilege
  procedure return dependency view datum source
  example follow example assume user execute query administrator administrator database view mention example
  procedure return information datum source
  example 1 let view orders_of_european_customer database tpc_h execute obtain dependency view select distinct dependency_type dependency_database_name dependency_name view_dependencie input_view_database_name = tpc_h input_view_name
  = orders_of_european_customer private_view = false view start private view
  substr(dependency_name 1 1   example 2 let view orders_of_european_customer database tpc_h execute obtain datum source datum view obtain select distinct dependency_database_name data_source_database dependency_name data_source view_dependencie input_view_database_name = tpc_h input_view_name
  = orders_of_european_customer position('datasource dependency_type
   0
  depth = 1 example
  3 let create view customer_invoice like client_df leave outer join invoice inner join product follow image screenshot result execute select view_name view_identifier view_type private_view dependency_name dependency_identifier dependency_type depth view_dependencie input_view_database_name = customer360 input_view_name
  = customer_invoice format purpose column display
  sample result execute procedure view_dependencie understand result account follow row 5 9 represent dependency private view field private true row
  private view leave outer join client invoice
  row 11 12 till describe dependency view product
  note view_identifier
  dependency view view_identifier
  row value dependency_identifier 9 represent direct transitive dependency xml datum source invoicing row 2 represent direct dependency base view invoice xml data source
  dependency direct value depth field 1
  row 4 transitive dependency view invoice xml data source
  dependency transitive depth 2 row 9 transitive dependency private view xml datum source
  dependency transitive depth great 1
  view dependency
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/view_dependencies#id1</field><field name="content">
  correct way invoke procedure view_dependencie  select view_dependencie
  input_database_name = tpc_h input_view_name
  = orders_of_european_customer position('datasource dependency_type
   0
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/view_dependencies#id2</field><field name="content">
  wrong way invoke procedure view_dependencie  select view_dependencie
  view_database_name = tpc_h view_name = orders_of_european_customer position('datasource dependency_type  0
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/view_dependencies#sample-result-of-executing-the-procedure-view-dependencies</field><field name="content">
  sample result execute procedure view_dependencie
  sample result execute procedure view dependencie
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/wait#wait</field><field name="content">
  wait description store procedure wait wait specify time millisecond syntax wait timeinmillis long
  return row wait specify time
  privilege require privilege require execute procedure
  example example 1 wait minute wait(60000 example 2 wait 10 second select timeinmilli wait
  timeinmillis = 10000 example different way invoke wait select
  way equivalent
  difference invoke wait select statement combine result view usually need
  page use store procedure provide detail invoke store procedure denodo
  wait
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/webcontainer_elements#webcontainer-elements</field><field name="content">
  webcontainer_element description store procedure webcontainer_element return information web service soap rest widget virtual dataport database
  filter database type web service service look service deploy etc
  note store procedure deprecate remove major version denodo platform
  use procedure webcontainer_element_status instead provide information
  section feature deprecate denodo platform 8.0 list feature deprecate
  syntax webcontainer_element input_database_name text  input_service   input_service_type  input_service_name text input_description text input_modifie boolean input_deploye boolean
   input_service  = webservice | widget  input_service_type  = rest | soap | soap rest parameter optional
  parameter null procedure filter parameter
  input_database_name database want search web service and/or widget
  null search database service
  input_service type service look
  value case insensitive
  search widget enter widget
  search web service enter webservice
  search enter null input_service_type type service look
  widget subtype look enter value widget service parameter set null
  search rest web service enter rest
  search soap web service enter soap
  search web service import virtual dataport 4.7 early enter soap rest
  input_service_name provide procedure return service contain value
  account parameter input_database_name null procedure return service database match
  currently connect input_description provide procedure return service description contain value
  input_modifie true return service deploy modify deploy
  false return service deploy modify input_deploye true return service deploy
  false return service deploy
  privilege require procedure return information web service widget belong database user administrator
  implication follow user administrator procedure return information web service widget
  procedure return information web service widget database user local administrator
  procedure return privilege error
  example let user request information web service database
  server database admin testing
  user local administrator testing database admin database
  scenario procedure return information web service testing database web service admin database
  example example 1 obtain rest web service database test select service service_type service_name description deploy modify context user webcontainer_element
  input_database_name
  = test input_service_type
  = rest example 2 obtain deploy web service auxiliary web service widget select database_name service service_type service_name description deploy modify context user webcontainer_element input_deploye = true example 3 obtain deploy web service definition change deploy select database_name service service_type service_name description deploy modify context user webcontainer_element input_deploye = true input_modifie = true case set parameter deploy true null equivalent deploy service mark modify
  webcontainer element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/webcontainer_elements_status#webcontainer-element-status</field><field name="content">
  webcontainer_element_status description store procedure webcontainer_element_status return information web service soap rest widget virtual dataport database
  filter database type web service service look service deploy etc
  syntax webcontainer_element_status input_database_name text  input_service   input_service_type  input_service_name text input_description text input_modifie boolean input_deploye boolean
   input_service  = webservice | widget  input_service_type  = rest | soap | soap rest parameter optional
  parameter null procedure filter parameter
  input_database_name database want search web service and/or widget
  null search database service
  input_service type service look
  value case insensitive
  search widget enter widget
  search web service enter webservice
  search enter null input_service_type type service look
  widget subtype look enter value widget service parameter set null
  search rest web service enter rest
  search soap web service enter soap
  search web service import virtual dataport 4.7 early enter soap rest
  input_service_name provide procedure return service contain value
  account parameter input_database_name null procedure return service database match
  currently connect input_description provide procedure return service description contain value
  input_modifie true return service deploy modify deploy
  false return service deploy modify input_deploye true return service deploy
  false return service deploy
  procedure return row web service field database_name database service widget web service
  service type service
  possible value webservice widget service_type type service
  possible value rest rest web service
  soap soap web service
  null widget
  service_name service widget web service
  ws_description description deploy true service deploy web container denodo
  false modify true service modify deploy web container denodo
  false ws_context context denodo web container service deploy
  null service deploy web container denodo ws_user user account service use connect server execute query
  null service deploy web container denodo
  privilege require procedure return information web service widget belong database user administrator
  implication follow user administrator procedure return information web service widget
  procedure return information web service widget database user local administrator
  procedure return privilege error
  example let user request information web service database
  server database admin testing
  user local administrator testing database admin database
  scenario procedure return information web service testing database web service admin database
  example example 1 obtain rest web service database test select webcontainer_element_status
  input_database_name
  = test input_service_type
  = rest example 2 obtain deploy web service auxiliary web service widget select webcontainer_element_status input_deploye = true example 3 obtain deploy web service definition change deploy select webcontainer_element_status input_deploye = true input_modifie = true case set parameter deploy true null equivalent deploy service mark modify
  webcontainer element status
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/writelogerror#writelogerror</field><field name="content">
  writelogerror description store procedure writelogerror write message server log error level
  syntax writelogerror message text
  privilege require administrator invoke procedure
  writelogerror
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/stored_procedures/predefined_stored_procedures/writeloginfo#writeloginfo</field><field name="content">
  writeloginfo description store procedure writeloginfo write message server log info level
  syntax writeloginfo message text
  privilege require administrator invoke procedure
  writeloginfo
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#tags</field><field name="content">
  tag virtual dataport allow assign tag element
  create tag syntax create tag use statement create tag create tag
  syntax create tag statement create replace
  tag  tag definition tag  create replace
  tag  tag definition tag 
   tag definition tag 
   tag definition  =  identifi 
  description
  =  description literal 
   assignation 
   assignation  = add_to view  view list add_to_views  column  column list add_to_column  remove_from view  view list add_to_views  column  column list add_to_column 
   view list  =  view identifi view 
   view identifi view 
   column list  =  column identifi column 
   column identifi column 
   view identifier  =  database identifier.view identifi   column identifier  =  database identifier.view identifier.column identifi  example
  create tag create tag ssn create tag ssn description = social security number create tag assignation create assign column view create tag ssn description = social security number add_to view column acme.employees.social_sec_number remove_from view column employee description = view employee information add_to view acme.employee column remove_from view column alter tag syntax edit exist tag use alter tag
  syntax alter tag statement alter tag  identifi 
  description
  =  description literal 
   assignation 
   assignation  = create tag syntax example
  example alter tag statement alter tag ssn description = social security number add_to view column acme.employees_and_customers.social_sec_number remove_from view column acme.employees.social_sec_number drop tag syntax remove exist tag use drop tag drop tag
  syntax drop tag statement drop tag exist
   identifi  cascade
  drop tag
  exist
   identifi   identifi 
  cascade example
  example drop tag statement drop tag exist ssn employee
  tag
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#syntaxes-of-the-create-tag-statements</field><field name="content">
  syntax create tag statement create replace
  tag  tag definition tag  create replace
  tag  tag definition tag 
   tag definition tag 
   tag definition  =  identifi 
  description
  =  description literal 
   assignation 
   assignation  = add_to view  view list add_to_views  column  column list add_to_column  remove_from view  view list add_to_views  column  column list add_to_column 
   view list  =  view identifi view 
   view identifi view 
   column list  =  column identifi column 
   column identifi column 
   view identifier  =  database identifier.view identifi   column identifier  =  database identifier.view identifier.column identifi 
  syntax create tag statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#creating-a-tag-named-ssn</field><field name="content">
  create tag ssn create tag ssn description = social security number
  create tag name ssn
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#creating-two-and-assign-them-to-a-column-and-a-view</field><field name="content">
  create assign column view create tag ssn description = social security number add_to view column acme.employees.social_sec_number remove_from view column employee description = view employee information add_to view acme.employee column remove_from view column
  create assign column view
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#syntax-of-the-alter-tag-statement</field><field name="content">
  syntax alter tag statement alter tag  identifi 
  description
  =  description literal 
   assignation 
   assignation  = create tag syntax
  syntax alter tag statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#example-of-the-alter-tag-statement</field><field name="content">
  example alter tag statement alter tag ssn description = social security number add_to view column acme.employees_and_customers.social_sec_number remove_from view column acme.employees.social_sec_number
  example alter tag statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#syntaxes-of-the-drop-tag-statements</field><field name="content">
  syntax drop tag statement drop tag exist
   identifi  cascade
  drop tag
  exist
   identifi   identifi 
  cascade
  syntax drop tag statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/tags/tags#example-of-the-drop-tags-statement</field><field name="content">
  example drop tag statement drop tag exist ssn employee
  example drop tag statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_other_elements_of_the_catalog#defining-other-elements-of-the-catalog</field><field name="content">
  define element catalog follow subsection explain create element catalog create folder define datum type define map define jar extension define jms listener define kafka listener
  define element catalog
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#creating-folders</field><field name="content">
  create folder element create virtual dataport organize folder
  datum source store procedure wrapper view web service widget
  element organize folder create element database locate different folder
  create folder use statement create folder
  manage exist folder use alter folder
  delete folder use drop folder   
  syntax create folder statement create replace
  folder  folder_name literal 
  description  description  folder_name path new folder
  mean parameter start character
  example create folder /folder1
  create subfolder /foldera subfoldera create folder foldera subfoldera create subfolder create folder /foldera create folder /foldera subfoldera  manage exist folder "content" use statement alter folder
  follow action change description folder
  rename folder folder folder
  copy element datum source view etc folder
  syntax statement alter folder alter folder  source folder literal   operation   operation  = rename  target folder literal 
  description  description literal 
  | description  description literal  |  element   identifi  | copy  element   element old identifier 
   element new identifi   element  = datasource  datum source type  | wrapper  wrapper type  | table
  |
  view | procedure | webservice | widget  datum source type  = custom | df | essbase | jdbc | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  wrapper type  =  datum source type  | itp  delete folder use statement drop folder
  syntax statement drop folder drop folder  folder path literal  cascade folder element drop folder cascade clause fail
  add clause cascade command delete folder subfolder "content"
  example change description folder change description folder /data source  alter folder /data source description folder contain datum source rename folder rename folder datum source   jdbc data source  alter folder /data source rename /jdbc datum source folder folder folder jdbc data source   datum source   
  alter folder /jdbc datum source rename /data source jdbc datum source target folder exist
  element folder jdbc datum source ds_jdbc_oracle folder /data source  alter folder /data source datasource jdbc ds_jdbc_oracle view customer360 folder /final view  alter folder /final view view customer360 target folder exist
  copy element copy view customer360
  copy customer360_final  alter folder /final view copy view customer360 customer360_final copy df datum source
     web_container_access_log  alter folder /data source copy datasource df web_container_access_log ds_df_web_access_log drop folder element drop folder /data source cascade
  create folder
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#syntax-of-the-create-folder-statement</field><field name="content">
  syntax create folder statement create replace
  folder  folder_name literal 
  description  description 
  syntax create folder statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#creating-a-subfolder</field><field name="content">
  create subfolder create folder /foldera create folder /foldera subfoldera
  create subfolder
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#syntax-of-the-statement-alter-folder</field><field name="content">
  syntax statement alter folder alter folder  source folder literal   operation   operation  = rename  target folder literal 
  
  description  description literal 
  | description  description literal  |  element   identifi  | copy  element   element old identifier 
   element new identifi   element  = datasource  datum source type  | wrapper  wrapper type  | table
  |
  view | procedure | webservice | widget  datum source type  = custom | df | essbase | jdbc | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  wrapper type 
  =  datum source type  |
  itp
  syntax statement alter folder
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id1</field><field name="content">
  syntax statement drop folder drop folder  folder path literal  cascade
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id2</field><field name="content">
  change description folder /data source  alter folder /data source description
  folder contain datum source
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id3</field><field name="content">
  rename folder datum source   jdbc data source  alter folder /data source rename /jdbc datum source
  id3
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#moving-a-folder-into-another-folder</field><field name="content">
  folder jdbc data source   datum source  alter folder /jdbc datum source rename /data source jdbc datum source
  move folder folder
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id4</field><field name="content">
  jdbc datum source ds_jdbc_oracle folder /data source  alter folder /data source datasource jdbc ds_jdbc_oracle
  id4
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id5</field><field name="content">
  view customer360 folder /final view  alter folder /final view view customer360
  id5
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id6</field><field name="content">
  copy view customer360
  copy customer360_final  alter folder /final view copy view customer360 customer360_final
  id6
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/creating_folders/creating_folders#id7</field><field name="content">
  copy df data source web_container_access_log  alter folder /data source copy datasource df web_container_access_log ds_df_web_access_log
  id7
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_data_type/defining_a_data_type#defining-a-data-type</field><field name="content">
  define data type virtual dataport catalog incorporate series predefine datum type section datum type
  mention datum type include divide group basic type compound type
  virtual dataport allow new compound datum type define statement create type
  statement create follow datum type array register section management compound value explain detail handle compound type array register
  syntax create type statement create replace type  identifi   array  |  register   array  = array  register   register  = register  register element 
   register element 
   register element  =  identifier:type identifi   property 
  =  property value 
  
  type field register blob indicate "content" type field property "content"type
  value property constant e.g. application pdf expression
  section work blob field base view administration guide
  create new register type need specify datum type element contain
  create register datum type register datum type create contain personal datum attribute type text surname attribute surname type text telephone attribute phone type arrayphone salary attribute pay type decimal birthday attribute birth type date
  create register datum type create type registerpersonaldata register text surname text phone arrayphone pay decimal birth date define array datum type register type element contain indicate
  create data type array register type contain array datum type arrayphone create encapsulate list telephone telephone represent integer
  element arrayphone register type registerphone
  type registerphone encapsulate element type int number
  create data type array register type contain create type registerphone register number int create type arrayphone array registerphone use replace modifier specifie type indicate exist type replace new type
  new type compatible previous view depend type type definition mark erroneous
  type consider compatible field new type superset field previous type
  i.e. new type add new field maintain previous type
  define data type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_data_type/defining_a_data_type#syntax-of-the-create-type-statement</field><field name="content">
  syntax create type statement create replace type  identifi   array  |  register   array  = array  register   register  = register  register element 
   register element 
   register element  =  identifier:type identifi   property 
  =  property value 
  syntax create type statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_data_type/defining_a_data_type#creating-a-register-data-type</field><field name="content">
  create register datum type create type registerpersonaldata register text surname text phone arrayphone pay decimal birth date
  create register datum type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_data_type/defining_a_data_type#creating-a-data-type-array-and-the-register-type-it-contains</field><field name="content">
  create data type array register type contain create type registerphone register number int create type arrayphone array registerphone
  create data type array register type contain
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_map/defining_a_map#defining-a-map</field><field name="content">
  define map map represent list key value pair
  follow type map exist simple
  type map function map appendix map replacemap appendix replacemap
  i18n
  type map represent internationalization configuration refer specific location
  example parameter configure file symbol decimal date format etc
  virtual dataport i18n map common internationalization setting map replace delete
  create new
  section internationalization detail internationalization feature virtual dataport
  create map use statement create map
  specify type map i18n simple map list key value pair form map
  syntax create map statement create map i18n | simple  identifi   literal 
  =  value literal]+
  follow example create simple map currency_code map iso 4217 currency code
  creation map type simple create map simple currency_code ae = united arab emirates dirham afn = afghan afghani = albanian lek amd = armenian dram ang = netherland antillean guilder aoa = angolan kwanza ar = argentine peso aud = australian dollar awg = aruban florin azn = azerbaijani manat bam = bosnia herzegovina virtual dataport establish dependency custom map create view use
  user try delete map dependency view statement fail cascade clause end
  add clause server delete custom map element depend
  define map
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_map/defining_a_map#syntax-of-the-create-map-statement</field><field name="content">
  syntax create map statement create map i18n | simple  identifi   literal  =  value literal]+
  syntax create map statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_a_map/defining_a_map#creation-of-a-map-of-type-simple</field><field name="content">
  creation map type simple create map simple currency_code ae = united arab emirates dirham afn = afghan afghani = albanian lek amd = armenian dram ang = netherland antillean guilder aoa = angolan kwanza ar = argentine peso aud = australian dollar awg = aruban florin azn = azerbaijani manat bam = bosnia herzegovina
  creation map type simple
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_jar_extensions/defining_jar_extensions#defining-jar-extensions</field><field name="content">
  define jar extension store procedure custom function custom wrapper develop java
  section develop extension developer guide explain develop
  note strongly recommend administration tool load extension section import extension administration guide
  create jar statement add new java librarie jar file server
  syntax create jar statement create replace jar  identifi   jar encode base64 literal 
  identifi specify jar file "content" code string byte
  replace modifi replace file exist
  virtual dataport establish dependency jar file import server denodo store procedure custom wrapper use java class provide jar
  user execute statement drop jar delete jar jar dependency statement fail
  case execute drop jar
    cascade delete jar file respectively
  statement delete jar file element depend
  define jar extension
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/defining_jar_extensions/defining_jar_extensions#syntax-of-the-create-jar-statement</field><field name="content">
  syntax create jar statement create replace jar  identifi   jar encode base64 literal 
  syntax create jar statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#defining-jms-listeners</field><field name="content">
  define jms listener virtual dataport subscribe jms server listen request
  client instead connect virtual dataport jdbc odbc web service send request jms server forward virtual dataport
  response send queue "topic" jms server forward client s. create jms listener set execute vql statement receive jms server
  define query interpolation variable @jmsexpression jms listener runtime replace variable value receive jms server
  output jms listener xml document json document
  example option work client send message select internet_inc iinc_id = 1 jms server
  jms server forward virtual dataport send response like xml response message send jms listener select output xml like json response message send jms listener select output json
  xml response message send jms listener  xml version=\1.0 encoding=\utf-8 
   response   item   iinc_id1.00/iinc_id 
   summary  error adsl
  router/summary   ttime29 jun-2005 19h 19 m 41s/ttime   taxid  b78596011/taxid   specific_field11/specific_field1   specific_field21/specific_field2 
   /item   /response  json response message send jms listener iinc_id 1 summary error adsl router ttime 2005 06 29 taxid b78596011 specific_field1 1 specific_field2 1
  request dml sentence alter view incident cache invalidate response xml response message dml query json response message dml query
  xml response message dml query  xml version=\1.0 encoding=\utf-8
    response  json response message dml query  
  example option b work create jms listener follow query sample query define jms listener select incident taxid = @jmsexpression listener receive value b78596014 server execute follow query
  select incident taxid = b78596014 query define jms listener contain @jmsexpression variable value receive listener ignore query execute  
  follow figure contain syntax command deal jms listener
  syntax create listener jms statement create replace listener jms  identifi  vendor activemq | webspheremq |
  jndi
  
  destination
  =  literal 
  ignorereplyto
  replyto =  literal  queue | "topic" output = xml | json user =  literal  password
  =
   literal  vdpuser =  literal  messagescontainvariable = true
  | false query
  =  query literal 
  enable = true
  | false property  property 
   property 
  folder =  folder literal 
  description =  description literal 
   property  =  key literal 
  =  value literal  vendor
  use value jndi jms server listener connect apache active mq ibm websphere mq
  destination queue "topic" virtual dataport subscribe wait request
  depend vendor jms server create jms destination create automatically listener try subscribe
  replyto jms queue "topic" response send
  response send destination jms message contain reply field
  clause replyto present response send destination indicate reply field jms request
  jms request field server send response
  clause ignorereplyto present listener send response
  queue "topic"
  use parameter depend type destination listener connect output
  parameter xml output listener xml document
  json json document user password
  credential access jms server
  vdpuser username virtual dataport use check listener privilege execute query
  e.g. virtual dataport server user admin administrator user promote local administrator database access view database
  user1 normal user execute privilege database
  parameter vdpuser admin listener able execute query
  vdpuser user1 create drop insert update delete query fail user1 execute privilege
  messagescontainvariable query present messagescontainvariable true listener receive jms message server replace variable @jmsexpression query "content" jms message
  server execute result query enable
  true enable listener
  create listener try connect jms server listen request
  false disable
  property
  list property obtain connection jms server
  appendix jms connection detail jndi property administration guide contain list property require connect popular vendor
  | usually jms listener need property java.naming.factory.initial javax.naming.context.initial_context_factory java.naming.provider.url javax.naming.context
  provider_url
  transport.jms
  connectionfactoryjndiname
  connection factory jndi context jms server folder
  path folder listener store
  e.g. folder = /jms listener description
  description listener
  command enable disable jms listener
  alter listener jms alter listener jms  identifi  enable eq true \\| false enable = true false try connect jms server listen request
  enable = false true close connection jms server
  rename jms listener use statement rename syntax statement
  rename listener jms rename listener jms  identifier   new identifi  example  
  rename listener jms jms_listener_order
  jms_order_full
  define jms listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#xml-response-message-sent-by-a-jms-listener</field><field name="content">
  xml response message send jms listener  xml version=\1.0 encoding=\utf-8 
   response   item   iinc_id1.00/iinc_id 
   summary  error adsl
  router/summary   ttime29 jun-2005 19h 19 m 41s/ttime   taxid  b78596011/taxid   specific_field11/specific_field1   specific_field21/specific_field2 
   /item   /response 
  xml response message send jms listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#json-response-message-sent-by-a-jms-listener</field><field name="content">
  json response message send jms listener iinc_id 1 summary error adsl router ttime 2005 06 29 taxid b78596011 specific_field1 1 specific_field2 1
  json response message send jms listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#xml-response-message-to-a-dml-query</field><field name="content">
  xml response message dml query  xml version=\1.0 encoding=\utf-8
    response 
  xml response message dml query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#json-response-message-to-a-dml-query</field><field name="content">
  json response message dml query  
  json response message dml query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#sample-query-defined-in-a-jms-listener</field><field name="content">
  sample query define jms listener select incident taxid = @jmsexpression
  sample query define jms listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#syntax-of-the-create-listener-jms-statement</field><field name="content">
  syntax create listener jms statement create replace listener jms  identifi  vendor activemq | webspheremq |
  jndi
  
  destination
  =  literal 
  ignorereplyto
  replyto =  literal  queue | "topic" output = xml | json user =  literal  password
  =
   literal  vdpuser =  literal  messagescontainvariable = true
  | false query
  =  query literal 
  enable = true
  | false property  property 
   property 
  folder =  folder literal 
  description =  description literal 
   property  =  key literal 
  =  value literal 
  syntax create listener jms statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#command-to-enable-disable-a-jms-listener-alter-listener-jms</field><field name="content">
  command enable disable jms listener
  alter listener jms alter listener jms  identifi  enable eq true \\| false
  command enable disable jms listener alter listener jms
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#id1</field><field name="content">
  syntax statement rename listener jms rename listener jms  identifier   new identifi 
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_jms_listeners/definining_jms_listeners#id2</field><field name="content">
  example rename listener jms jms_listener_order jms_order_full
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#defining-kafka-listeners</field><field name="content">
  define kafka listener virtual dataport subscribe kafka server listen request
  client instead connect virtual dataport jdbc odbc web service send request kafka server forward virtual dataport
  response send "topic" kafka server forward client s. create kafka listener set execute vql statement receive kafka server
  define query interpolation variable @listenerexpression kafka listener runtime replace variable value receive kafka server
  output kafka listener xml document json document binary document
  example option work client send message select internet_inc iinc_id = 1 kafka server
  kafka server forward virtual dataport send response like xml response message send kafka listener select output xml like json response message send kafka listener select output json like binary response message send kafka listener
  xml response message send kafka listener  xml version=\1.0 encoding=\utf-8 
   response   item   iinc_id1.00/iinc_id 
   summary  error adsl
  router/summary   ttime29 jun-2005 19h 19 m 41s/ttime   taxid  b78596011/taxid   specific_field11/specific_field1   specific_field21/specific_field2 
   /item   /response  json response message send kafka listener iinc_id 1 summary error adsl router ttime 2005 06 29 taxid b78596011 specific_field1 1 specific_field2 1
  request dml sentence alter view incident cache invalidate response xml response message dml query json response message dml query
  xml response message dml query  xml version=\1.0 encoding=\utf-8
    response  json response message dml query  
  example option b work create kafka listener follow query sample query define kafka listener select incident taxid = @kafkaexpression listener receive value b78596014 server execute follow query
  select incident taxid = b78596014 query define kafka listener contain @listenerexpression variable value receive listener ignore query execute  
  follow figure contain syntax command deal kafka listener
  syntax create listener kafka statement create replace listener kafka  identifi 
  d =  d literal  groupid =  literal  input"topic"
  =  literal 
  reply"topic" =  literal 
  ignorereply"topic"
  input = plain |
  binary
  output = json | xml | binary
  vdpdatabase =  literal  vdpuser
  =  literal  messagescontainvariable = true | false query
  =  query literal 
  enable = true | false authentication = | saslplaintext | saslgssapi kafkaserver =
   literal 
  chunksize =  chunksize literal 
  dlq =  dql literal 
  property  property 
   property 
  folder =  folder literal 
  description =  description literal 
   property  =  key literal 
  =  value literal  groupid establish group d multiple listener load balance case belong consumer
  depend vendor kafka server create kafka destination create automatically listener try subscribe
  input"topic" establish kafka listener receive message
  reply"topic" kafka queue "topic" response send
  require ignorereply"topic" present
  clause ignorereply"topic" present listener send response
  input
  parameter plain accept json xml plain value binary accept byte
  output
  parameter xml output listener xml document
  json json document binary binary document
  binary limitation 1 row 1 column response
  parameter require ignorereply"topic" present
  vdpuser username virtual dataport use check listener privilege execute query
  e.g. virtual dataport server user admin administrator user promote local administrator database access view database
  user1 normal user execute privilege database
  parameter vdpuser admin listener able execute query
  vdpuser user1 create drop insert update delete query fail user1 execute privilege
  messagescontainvariable query present messagescontainvariable true listener receive kafka message server replace variable @listenerexpression query "content" kafka message
  server execute result query enable
  true enable listener
  create listener try connect kafka server listen request
  false disable
  authentication
  specify 3 different authentication method listener connect kafka server plaintext protocol saslplaintext listener connect protocol saslplaintext
  require specify username password
  saslgssapi listener connect kerberos protocol
  provide principal location keytab file contain credential connect server need upload file computer virtual dataport run service
  kafkaserver ip port kafka server property
  list property obtain connection kafka server
  property follow format key = value key property
  require associate value property
  folder
  path folder listener store
  e.g. folder = /kafka listener description
  description listener
  command enable disable kafka listener alter listener kafka  
  alter listener kafka  identifi  enable eq true \\| false enable = true false try connect kafka server listen request
  enable = false true close connection kafka server
  rename kafka listener use statement rename syntax statement
  rename listener kafka rename listener kafka  identifier   new identifi  example  
  rename listener kafka kafka_listener_order kafka_order_full
  define kafka listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#xml-response-message-sent-by-a-kafka-listener</field><field name="content">
  xml response message send kafka listener  xml version=\1.0 encoding=\utf-8 
   response   item   iinc_id1.00/iinc_id 
   summary  error adsl
  router/summary   ttime29 jun-2005 19h 19 m 41s/ttime   taxid  b78596011/taxid   specific_field11/specific_field1   specific_field21/specific_field2 
   /item   /response 
  xml response message send kafka listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#json-response-message-sent-by-a-kafka-listener</field><field name="content">
  json response message send kafka listener iinc_id 1 summary error adsl router ttime 2005 06 29 taxid b78596011 specific_field1 1 specific_field2 1
  json response message send kafka listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#xml-response-message-to-a-dml-query</field><field name="content">
  xml response message dml query  xml version=\1.0 encoding=\utf-8
    response 
  xml response message dml query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#json-response-message-to-a-dml-query</field><field name="content">
  json response message dml query  
  json response message dml query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#sample-query-defined-in-a-kafka-listener</field><field name="content">
  sample query define kafka listener select incident taxid = @kafkaexpression
  sample query define kafka listener
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#syntax-of-the-create-listener-kafka-statement</field><field name="content">
  syntax create listener kafka statement create replace listener kafka  identifi 
  d =  d literal  groupid =  literal  input"topic"
  =  literal 
  reply"topic" =  literal 
  ignorereply"topic"
  input = plain |
  binary
  output = json | xml | binary
  vdpdatabase =  literal  vdpuser
  =  literal  messagescontainvariable = true | false query
  =  query literal 
  enable = true | false authentication = | saslplaintext | saslgssapi kafkaserver =
   literal 
  chunksize =  chunksize literal 
  dlq =  dql literal 
  property  property 
   property 
  folder =  folder literal 
  description =  description literal 
   property  =  key literal 
  =  value literal 
  syntax create listener kafka statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#command-to-enable-disable-a-kafka-listener-alter-listener-kafka</field><field name="content">
  command enable disable kafka listener alter listener kafka  
  alter listener kafka  identifi  enable eq true \\| false
  command enable disable kafka listener alter listener kafka
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#id1</field><field name="content">
  syntax statement rename listener kafka rename listener kafka  identifier   new identifi 
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/defining_other_elements_of_the_catalog/definining_kafka_listeners/definining_kafka_listeners#id2</field><field name="content">
  example rename listener kafka kafka_listener_order kafka_order_full
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/creating_databases_users_roles_and_access_privileges#creating-databases-users-roles-and-access-privileges</field><field name="content">
  create database user role access privilege virtual dataport server contain database confuse external database act datum source
  database represent virtual schema comprise datum source view store procedure etc
  section explain concept relate database user role access privilege
  explain vql statement manage
  section database user access right virtual dataport administration guide explain detail concept
  manage database user role privilege virtual dataport server need connect server administrator type user
  create database user role access privilege
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/vql_statements_for_managing_databases/creating_databases#creating-and-modifying-virtual-dataport-databases</field><field name="content">
  create modifying virtual dataport database  
  command manage virtual dataport database create database create new database
  syntax
  administrator run
  alter database modify exist database
  syntax
  administrator run
  desc vql database obtain vql statement element database
  list database return database
  non administrator command return database user connect privilege
  drop database delete database
  database delete component delete datum source view base view
  administrator run
  syntax create database statement create replace
  database  identifi 
   description literal 
  vcs | remotedb =  identifier 
  environment =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  | url =  literal  system
  =  literal  remotedb =  identifi  user
  =  literal 
  password =  literal 
  encrypt
  environment =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  charset unicode | restrict | default
  authentication local | ldap  database identifier.ldap data source identifi  userbase =  literal   literal 
  userattributename =  literal  usersearch
  =  literal  rolebase =  literal   literal 
  
  roleattributename =  literal  rolesearch
  =  literal 
  rolessearchauthentication
  with_allusers_role
  odbc authentication normal | kerbero
  normal default check_view_restriction | direct_queries_only | default
   grant   grant  = section grant privilege database description main parameter create database unicode support charset parameter
  unicode identifi element character
  restrict identifi element character
  default database use default configuration server section identifier charset administration guide
  value parameter determine character user use create editing view administration tool
  affect behavior server add clause
  odbc authentication kerbero enable kerbero authentication odbc ado.net client
  section access odbc developer guide explain configure dsn odbc client use kerbero authentication
  check_view_restriction section column privilege row restriction custom policy propagate upgrade guide explain implication change parameter
  version control system version control system integration vcs support configure database detail section version control system integration administration guide
  vcs deactivate activate default configuration global configuration server activate specific configuration deactivate vcs
  activate default configuration vcs
  parameter configure database use default vcs configuration remotedb
  add parameter database vcs repository different database virtual dataport environment
  add parameter want database use specific vcs environment instead default
  activate specific configuration vcs different set parameter
  case parameter configure addition environment remotedb url
  url version control repository system
  version control system currently svn support
  user
  optional user access repository password optionally encrypt
  password correspond specify user
  repository git choose branch repository associate database
  pass parameter property branch'='name branch 
  authentication method virtual dataport database type access control local access control authentication local
  user access virtual dataport create virtual dataport user create section manage user
  ldap access control authentication ldap
  mean authentication user delegate ldap server
  benefit option rely ldap server authenticate user explicitly create virtual dataport
  server obtain role user belong ldap server
  server use role check action user execute
  note authentication method database ldap read section create database administration guide
  explain step create database
  contain detailed explanation follow parameter
  parameter authentication present new database local access control
  list parameter provide configure database ldap authentication database virtual dataport database ldap datum source connect ldap server authenticate user
  ldap datum source ldap datum source
  userbase node ldap server scope search node represent user
  parameter multiple value server search user node userbase
  server find node represent user search second userbase scope
  fail etc
  server find node represent user deny access user
  userattributename attribute contain user user node represent user
  usersearch pattern generate ldap query execute obtain node represent user try connect server rolebase node ldap server scope search node represent role user database
  parameter multiple value server execute ldap query form pattern rolesearch node indicate parameter
  roleattributename attribute contain role node represent role
  rolesearch pattern generate ldap query execute obtain node represent role user
  pattern contain token @{userdn @{userlogin contain @{userdn replace distinguished user try connect database
  example cn = john cn = user dc = acme dc = loc @{userlogin replace login user try connect database
  example john
  rolessearchauthentication user try connect database ldap authentication server validate password provide execute ldap query obtain role user
  rolessearchauthentication clause present server execute ldap query credential ldap datum source associate database
  query execute credential user try connect database
  with_allusers_role present server grant privilege role alluser user log successfully database role assign user ldap server
  add clause statement equivalent select check box assign alluser role connect user   create new database dialog
  section create database ldap authentication administration guide explain option   
  syntax alter database statement alter database  identifi 
   description literal 
  charset unicode | restrict | default
  cost optimization | | default
  query simplification | | default
  summary rewrite | | default
  vcs | environment =  identifier 
  remotedb =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  | url =  literal  system
  =  literal  remotedb =  identifi  user
  =  literal 
  password =  literal 
  encrypt
  environment =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  authentication local  grant 
  | ldap  database_name identifier.ldap_data_source_name identifi  userbase =  literal   literal 
  userattributename
  =  literal  usersearch
  =  literal  rolebase =  literal   literal 
  
  roleattributename =  literal  rolesearch
  =  literal 
  rolessearchauthentication
  with_allusers_role
  odbc authentication normal | kerbero
  normal default cache default |
  |
  maintenance |
  maintainerperiod  second integer 
  timetolive  second integer  | default | noexpire
  datasource default | custom |
   data_source_name identifi  database  database_name identifi 
  memoryconfig default | swap |
  swapsize  megabyte integer 
  swapblocksize  megabyte integer 
  maxresultsize  megabyte integer 
  maxquerysize  megabyte integer 
  check_view_restriction | direct_queries_only | default
   grant   grant  = syntax grant revoke clause create database alter database statement modify follow set database description database
  authentication mode ldap normal
  authentication mode ldap change access privilege user database section grant privilege database
  default preference cache configuration database section cache swap disk intermediate result query section configure swap policy locale database
  memoryconfig clause correspond set dialog memory usage database management wizard menu administration  database management administration tool
  description main parameter alter database describe create database cost optimization enable disable cost base optimization database
  query simplification enable disable automatic simplification query database
  summary rewrite enable disable summary rewrite optimization database
  value cost optimization query simplification summary rewrite enable feature database disable feature database default database use time current value configure virtual dataport server
  example database set automatic cost base optimization default feature disable globally global value feature dialog query optimization menu administration  server configuration disabled database
  later enable feature globally enable database change specific configuration database
  create modifying virtual dataport database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/vql_statements_for_managing_databases/creating_databases#syntax-of-the-create-database-statement</field><field name="content">
  syntax create database statement create replace
  database  identifi 
   description literal 
  vcs | remotedb =  identifier 
  environment =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  | url =  literal  system
  =  literal  remotedb =  identifi  user
  =  literal 
  password =  literal 
  encrypt
  environment =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  charset unicode | restrict | default
  authentication local | ldap  database identifier.ldap data source identifi  userbase =  literal   literal 
  userattributename =  literal  usersearch
  =  literal  rolebase =  literal   literal 
  
  roleattributename =  literal  rolesearch
  =  literal 
  rolessearchauthentication
  with_allusers_role
  odbc authentication normal | kerbero
  normal default check_view_restriction | direct_queries_only | default
   grant 
  syntax create database statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/vql_statements_for_managing_databases/creating_databases#syntax-of-the-alter-database-statement</field><field name="content">
  syntax alter database statement alter database  identifi 
   description literal 
  charset unicode | restrict | default
  cost optimization | | default
  query simplification | | default
  summary rewrite | | default
  vcs | environment =  identifier 
  remotedb =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  | url =  literal  system
  =  literal  remotedb =  identifi  user
  =  literal 
  password =  literal 
  encrypt
  environment =  identifier 
  property  literal  =  literal 
   literal 
  =  literal 
  authentication local  grant 
  | ldap  database_name identifier.ldap_data_source_name identifi  userbase =  literal   literal 
  userattributename
  =  literal  usersearch
  =  literal  rolebase =  literal   literal 
  
  roleattributename =  literal  rolesearch
  =  literal 
  rolessearchauthentication
  with_allusers_role
  odbc authentication normal | kerbero
  normal default cache default |
  |
  maintenance |
  maintainerperiod  second integer 
  timetolive  second integer  | default | noexpire
  datasource default | custom |
   data_source_name identifi  database  database_name identifi 
  memoryconfig default | swap |
  swapsize  megabyte integer 
  swapblocksize  megabyte integer 
  maxresultsize  megabyte integer 
  maxquerysize  megabyte integer 
  check_view_restriction | direct_queries_only | default
   grant 
  syntax alter database statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/managing_users#managing-users</field><field name="content">
  manage user create user statement syntax create user statement allow create new user server
  type user administrator user create add admin parameter statement
  user perform action database
  restrict privilege administrator user
  administrator user create administrator user
     normal user
  create grant privilege perform operation element server database
  authentication method virtual dataport user normal credential user store virtual dataport
     ldap indicate ldap parameter user try connect server server connect ldap server check password provide user correct
  use authentication method create ldap datum source connect ldap server order check password provide user correct
  parameter ldap parameter datasource
  syntax  databasename.datasourcename 
   databasename  virtual dataport database ldap datum source store  datasourcename  datum source
  username
  user ldap server
  example value cn = test ou = people dc = denodo dc = com identifie test user organizational unit people domain denodo.com
  syntax create user statement create replace user
  admin  identifi   authentication 
   description literal 
   grant 
   authentication  =  password literal  sha512 | ldap datasource  databasename identifier.datasourcename identifi  username  literal   grant  = syntax clause grant revoke create user alter user section modify privilege user explain modify privilege exist user
  sha512 indicate password store sha512 hash
  note ldap authentication user different database ldap authentication
  authentication type user ldap ldap server check password provide user correct
  privilege user manage virtual dataport
  database ldap authentication privilege user obtain ldap server
  note recommend create user ldap authentication
  instead create database ldap authentication simplify management user privilege
  type database section create database ldap authentication administration guide
  note ldap datum source delete cascade section remove element catalog user depend delete
  operation execute administrator user
  example create user privilege database customer encrypt password want new user encrypt_password new password user create user create replace user new_user  result command encrypt_password  encrypt transfer grant connect metadata execute write customer
  manage user
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/managing_users#syntax-of-the-create-user-statement</field><field name="content">
  syntax create user statement create replace user admin
   identifi   authentication 
   description literal 
   grant 
   authentication  =  password literal  sha512 | ldap datasource  databasename identifier.datasourcename identifi  username  literal 
  syntax create user statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_and_deleting_users#modifying-and-deleting-users</field><field name="content">
  modify delete user command list user return list user server
  command desc user  user  return information user include access right exist database view store procedure
  administrator user access datum user
  remain user obtain datum
  administrator user remove user server drop user statement section remove element catalog
  predefine admin administrator delete
  modify user datum statement alter user modify privilege grant user change password and/or description
  syntax alter user statement alter user  identifi 
   authentication 
   description literal 
   grant 
   authentication  = current_password  current_password literal  password  password literal  encrypt sha512 | ldap datasource  databasename identifier.datasourcename identifier 
  username  literal 
   grant  = section grant privilege user role
  user attempt change password user b default password user provide clause current_password order verify identity
  behavior control execution set com.denodo.vdb.security
  localauthenticator.currentpasswordenable =  boolean 
  property set true absent current_password clause require validate
  clause provide error raise
  property set false current_password clause optional validate present
  main use alter user statement change password user
  user usually administration tool imply send password encrypt hash sha512 actual password
  modify privilege grant user
  administrator user user role assignprivilege  
  section modify privilege user
  modifying delete user
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_and_deleting_users#modifying-user-data</field><field name="content">
  modify user datum statement alter user modify privilege grant user change password and/or description
  syntax alter user statement alter user  identifi 
   authentication 
   description literal 
   grant 
   authentication  = current_password  current_password literal  password  password literal  encrypt sha512 | ldap datasource  databasename identifier.datasourcename identifier 
  username  literal 
   grant  = section grant privilege user role
  user attempt change password user b default password user provide clause current_password order verify identity
  behavior control execution set com.denodo.vdb.security
  localauthenticator.currentpasswordenable =  boolean 
  property set true absent current_password clause require validate
  clause provide error raise
  property set false current_password clause optional validate present
  main use alter user statement change password user
  user usually administration tool imply send password encrypt hash sha512 actual password
  modify privilege grant user
  administrator user user role assignprivilege  
  section modify privilege user
  modify user datum
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_and_deleting_users#syntax-of-the-alter-user-statement</field><field name="content">
  syntax alter user statement alter user  identifi 
   authentication 
   description literal 
   grant 
   authentication  = current_password  current_password literal  password  password literal  encrypt sha512 | ldap datasource  databasename identifier.datasourcename identifier 
  username  literal 
  syntax alter user statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/connecting_to_another_database#connecting-to-another-database</field><field name="content">
  connect database establish connection virtual dataport connect database
     initial session
  statement connect create new session
  goal create new session connect database
  switch user account
  close session execute close parameter
  syntax connect statement syntax 1
  connect database connect database  database identifi  user_agent  user agent literal  syntax 2
  create session different user account connect  authentication method 
  database  database identifi 
  user_agent  user agent literal 
   authentication method  = = user  user identifi  password  password literal 
  | token  kerbero token encode base64 literal  |
  oauthtoken  oauth 2.0 token literal  syntax 1 syntax 1 create session current user connect database
  optionally set user agent session parameter user_agent
  syntax 2 syntax 2 create session different user account
  note provide credential user account parameter  authentication method 
  example establish connection virtual dataport user scott execute connect user lisa password my_password moment duration session statement execute lisa establish initial connection
  execution engine use privilege lisa validate query execute diagnostic monitor tool user execute query lisa etc
  optionally indicate database connect different database
  specify session start current database user_agent set user agent session
     syntax 1   syntax 2 parameter user_agent set property user agent session
  section set user agent application explain useful
  note set user agent change privilege grant session
  privilege calculate base privilege grant user account session
  create session parameter user_agent new session inherit user agent current session
  note session organize stack
  establish connection virtual dataport connection create initial session
  initial session create session create etc
  example establish connection virtual dataport
  execute connect
  create session
  let session
  execute connect create session session b
  execute connect create session session c
  execute close
  close session c   session b
  execute close
  close session b   session
  execute close
  close session initial session
  close connection session automatically close
  connect database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/connecting_to_another_database#syntax-of-the-connect-statement</field><field name="content">
  syntax connect statement syntax 1
  connect database connect database  database identifi  user_agent  user agent literal  syntax 2
  create session different user account connect  authentication method 
  database  database identifi 
  user_agent  user agent literal 
   authentication method  = = user  user identifi  password  password literal 
  | token  kerbero token encode base64 literal  |
  oauthtoken  oauth 2.0 token literal 
  syntax connect statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_the_privileges_of_a_user#modifying-the-privileges-of-a-user</field><field name="content">
  modify privilege user grant privilege user administrator database view store procedure
  task execute administrator user user role assignprivilege
  modify privilege user execute database level list user individually user
  grant privilege database create database syntax create database statement alter database syntax alter database statement statement include grant revoke clause grant revoke access right user role database
  privilege grant user database connect create create_data_source create_view create_data_service create_folder execute metadata write file admin
  privilege explain detail section type access right administration guide
  grant privilege privilege equivalent grant connect create create_data_source create_view create_data_service create_folder execute metadata write file
  grant privilege execute equivalent grant execute metadata vice versa
  syntax grant revoke clause create database alter database  grant  = grant  database privilege  role  user identifi  | revoke  database privilege  role  user identifi   database privilege  = admin |
  privilege
  |  database privilege list 
   database privilege list  =  database privilege 
   database privilege 
   database privilege  = connect | create | create_data_service | create_view
  | create_data_service | create_folder | metadata | execute | write |
  file grant privilege user role user privilege grant statement create user syntax create user statement alter user syntax alter user statement
  role privilege grant statement create role alter role
  privilege manage grant assign privilege revoke revoke privilege clause
  case distinguish assign privilege database
  assign privilege specific view store procedure database
  syntax clause grant revoke create user alter user syntax clause grant privilege database specific view procedure database
  grant revoke access right privilege list follow user role database connect
  user connect database
  user privilege database privilege ignore
  create
  user create new element database
  create_data_source
  user create new datum source database create_view
  user create new view database create_data_service
  user create new datum service rest soap web service widget jms listener database create_folder
  user create new folder database metadata
  user access metadata view query execute
  user execute privilege element database
  write
  user write privilege element database file
  user privilege file allow browse directory list dialog file privilege wizard server configuration
  section file privilege administration guide explain enable privilege affect user admin
  user admin local administrator privilege database
  grant revoke list follow privilege user role specific view procedure execute metadata write insert applicable store procedure update applicable store procedure delete applicable store procedure
  create privilege imply create_data_source create_view create_data_service create_folder
  execute privilege imply metadata
  privilege assign specific element account user execute write privilege entire database
  section type access right administration guide list action user perform depend assign privilege
  syntax clause grant revoke create user alter user  grant  = grant  database privilege   database identifi  | grant role  role list  | grant  datasource privilege 
   datum source type   database identifier.datasource identifi  | grant  view privilege 
   database identifier.view identifi  | grant  procedure privilege 
  procedure  database identifier.procedure identifi  | grant  datum service privilege 
   service type   database identifier.data service identifi  |
  grant admin  database identifi  | grant metadata
   database identifi  | grant metadata
   database identifier.view identifi  | grant execute  column list 
   database identifier.view identifi  | grant execute  column list 
  procedure  database identifier.procedure identifi  | grant execute
   column list 
   condition literal 
  
  mask  database identifier.view identifi  | grant execute
   column list 
   condition literal 
  
  mask procedure  database identifier.procedure identifi  | grant execute custom  policy identifi  parameter  parameter list 
   database identifier.view
  identifi  | grant execute custom  policy identifi  parameter  parameter list 
  procedure  database identifier.procedure
  identifi  | revoke  database privilege 
   database identifi  | revoke role  role list  |
  revoke  datasource privilege 
   datum source type   database identifier.datasource identifi  | revoke  view privilege 
   database identifier.view
  identifi  | revoke  procedure privilege 
  procedure  database identifier.procedure
  identifi  | revoke  datum service privilege 
   service type   database identifier.data service
  identifi  | revoke admin  database identifi  |
  revoke metadata  database identifi  | revoke metadata  database identifier.view identifi  | revoke execute  column list 
   database identifier.view identifi  | revoke execute  column list 
  procedure  database identifier.procedure identifi  | revoke execute
   column list 
   condition literal 
  
  mask  database identifier.view identifi  | revoke execute
   column list 
   condition literal 
  
  mask procedure  database identifier.procedure identifi  | revoke execute custom  policy identifi  parameter  parameter list 
   database identifier.view identifi  | revoke execute custom  policy identifi  parameter  parameter list 
  procedure  database identifier.procedure identifi   database privilege  = privilege
  |  database privilege list 
   database privilege list  =  database privilege 
   database privilege 
   database privilege  = connect | create | create_data_source |
  create_view | create_data_service | create_folder | file | execute | metadata | write  role list  =  role identifier 
   role identifier 
   column list 
  =  column identifier 
   column identifier 
   view privilege  = privilege |
   view privilege list   view privilege list  =  view privilege 
   view privilege 
   view privilege  =
  execute | metadata | write |
  insert | update | delete  procedure privilege  = privilege
  |
   procedure privilege list   procedure privilege list  =  procedure privilege 
   procedure privilege 
   procedure privilege  = execute | metadata |
  write | insert | update | delete  datasource privilege 
  = privilege |  datasource privilege list 
   datasource privilege list  =  datum source privilege 
   datum source privilege 
   datasource privilege  = metadata | execute | write  datum source type  = custom |
  df | essbase | itp | jdbc | json | ldap | odbc | salesforce |
  sapbwbapi | saperp | ws | xml  datum service privilege  = privilege |
   data service privilege list 
   data service privilege list  =  datum service privilege 
   datum service privilege 
   datum service privilege  = metadata | write  service type 
  = webservice | widget | listener  parameter list  =  literal  value 
  literal  value 
   value 
  = null |  number  |
   boolean  |
   literal 
  assign specific privilege assign role user parameter grant role section manage user role
  addition assign execute privilege database element assign fine grain privilege column privilege
  user execute privilege view user query view obtain datum
  want user project column view use column privilege
  use follow parameter grant execute  column list 
  restrict column user obtain query certain view
  user able obtain column column list
  grant execute  column list 
  procedure restrict column user obtain execute certain store procedure
  section type access right column privilege administration guide contain information restriction
  user role execute access view add restriction filter row return user
  way user send query view result contain obtain row match certain criterion
  specify filter condition apply query ask list specific field
  use follow parameter grant execute
  
  
   column list 
   condition literal  user query view result contain row match condition
  column list condition evaluate
  condition evaluate query project column column list
  column list modifier present query project field column list query return row
  column list modifier present query project field column list condition evaluate return row match
  grant execute
   column list 
   condition literal  procedure
  previous structure assign privilege virtual dataport store procedure instead view
  custom policy custom
  user role execute access view add custom policy filter row return user role
  custom policy similar restriction account complex information
  parameter contain parameter pass custom policy
  section custom view policy developer guide learn develop custom policy section modify privilege user administration guide learn apply user role
  statement follow create database database1   database2
  create user user1 grant follow privilege database1 database2   admin privilege database database1
  connection permission create element database2
  privilege query insert update delete view1   database2
  project field summary   taxid   internet_inc
  user query view phone_inc server return row match condition description like adsl%
  example assign privilege user create database database1 database1 description create database database2 database2 description create user user1 user1password user1 description grant privilege database1 grant connect create database2 grant execute write database2.view1 grant execute summary taxid
  admin.internet_inc grant execute
  description like cable% admin.phone_inc
  modify privilege user
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_the_privileges_of_a_user#granting-privileges-by-databases</field><field name="content">
  grant privilege database create database syntax create database statement alter database syntax alter database statement statement include grant revoke clause grant revoke access right user role database
  privilege grant user database connect create create_data_source create_view create_data_service create_folder execute metadata write file admin
  privilege explain detail section type access right administration guide
  grant privilege privilege equivalent grant connect create create_data_source create_view create_data_service create_folder execute metadata write file
  grant privilege execute equivalent grant execute metadata vice versa
  syntax grant revoke clause create database alter database  grant  = grant  database privilege  role  user identifi  | revoke  database privilege  role  user identifi   database privilege  = admin |
  privilege
  |  database privilege list 
   database privilege list  =  database privilege 
   database privilege 
   database privilege  = connect | create | create_data_service | create_view
  | create_data_service | create_folder | metadata | execute | write |
  file
  grant privilege database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_the_privileges_of_a_user#syntax-of-the-grant-revoke-clauses-of-create-database-and-alter-database</field><field name="content">
  syntax grant revoke clause create database alter database  grant  = grant  database privilege  role  user identifi  | revoke  database privilege  role  user identifi   database privilege  = admin |
  privilege
  |  database privilege list 
   database privilege list  =  database privilege 
   database privilege 
   database privilege  = connect | create | create_data_service | create_view
  | create_data_service | create_folder | metadata | execute | write |
  file
  syntax grant revoke clause create database alter database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_the_privileges_of_a_user#granting-privileges-to-a-user-role</field><field name="content">
  grant privilege user role user privilege grant statement create user syntax create user statement alter user syntax alter user statement
  role privilege grant statement create role alter role
  privilege manage grant assign privilege revoke revoke privilege clause
  case distinguish assign privilege database
  assign privilege specific view store procedure database
  syntax clause grant revoke create user alter user syntax clause grant privilege database specific view procedure database
  grant revoke access right privilege list follow user role database connect
  user connect database
  user privilege database privilege ignore
  create
  user create new element database
  create_data_source
  user create new datum source database create_view
  user create new view database create_data_service
  user create new datum service rest soap web service widget jms listener database create_folder
  user create new folder database metadata
  user access metadata view query execute
  user execute privilege element database
  write
  user write privilege element database file
  user privilege file allow browse directory list dialog file privilege wizard server configuration
  section file privilege administration guide explain enable privilege affect user admin
  user admin local administrator privilege database
  grant revoke list follow privilege user role specific view procedure execute metadata write insert applicable store procedure update applicable store procedure delete applicable store procedure
  create privilege imply create_data_source create_view create_data_service create_folder
  execute privilege imply metadata
  privilege assign specific element account user execute write privilege entire database
  section type access right administration guide list action user perform depend assign privilege
  syntax clause grant revoke create user alter user  grant  = grant  database privilege   database identifi  | grant role  role list  | grant  datasource privilege 
   datum source type   database identifier.datasource identifi  | grant  view privilege 
   database identifier.view identifi  | grant  procedure privilege 
  procedure  database identifier.procedure identifi  | grant  datum service privilege 
   service type   database identifier.data service identifi  |
  grant admin  database identifi  | grant metadata
   database identifi  | grant metadata
   database identifier.view identifi  | grant execute  column list 
   database identifier.view identifi  | grant execute  column list 
  procedure  database identifier.procedure identifi  | grant execute
   column list 
   condition literal 
  
  mask  database identifier.view identifi  | grant execute
   column list 
   condition literal 
  
  mask procedure  database identifier.procedure identifi  | grant execute custom  policy identifi  parameter  parameter list 
   database identifier.view
  identifi  | grant execute custom  policy identifi  parameter  parameter list 
  procedure  database identifier.procedure
  identifi  | revoke  database privilege 
   database identifi  | revoke role  role list  |
  revoke  datasource privilege 
   datum source type   database identifier.datasource identifi  | revoke  view privilege 
   database identifier.view
  identifi  | revoke  procedure privilege 
  procedure  database identifier.procedure
  identifi  | revoke  datum service privilege 
   service type   database identifier.data service
  identifi  | revoke admin  database identifi  |
  revoke metadata  database identifi  | revoke metadata  database identifier.view identifi  | revoke execute  column list 
   database identifier.view identifi  | revoke execute  column list 
  procedure  database identifier.procedure identifi  | revoke execute
   column list 
   condition literal 
  
  mask  database identifier.view identifi  | revoke execute
   column list 
   condition literal 
  
  mask procedure  database identifier.procedure identifi  | revoke execute custom  policy identifi  parameter  parameter list 
   database identifier.view identifi  | revoke execute custom  policy identifi  parameter  parameter list 
  procedure  database identifier.procedure identifi   database privilege  = privilege
  |  database privilege list 
   database privilege list  =  database privilege 
   database privilege 
   database privilege  = connect | create | create_data_source |
  create_view | create_data_service | create_folder | file | execute | metadata | write  role list  =  role identifier 
   role identifier 
   column list 
  =  column identifier 
   column identifier 
   view privilege  = privilege |
   view privilege list   view privilege list  =  view privilege 
   view privilege 
   view privilege  =
  execute | metadata | write |
  insert | update | delete  procedure privilege  = privilege
  |
   procedure privilege list   procedure privilege list  =  procedure privilege 
   procedure privilege 
   procedure privilege  = execute | metadata |
  write | insert | update | delete  datasource privilege 
  = privilege |  datasource privilege list 
   datasource privilege list  =  datum source privilege 
   datum source privilege 
   datasource privilege  = metadata | execute | write  datum source type  = custom |
  df | essbase | itp | jdbc | json | ldap | odbc | salesforce |
  sapbwbapi | saperp | ws | xml  datum service privilege  = privilege |
   data service privilege list 
   data service privilege list  =  datum service privilege 
   datum service privilege 
   datum service privilege  = metadata | write  service type 
  = webservice | widget | listener  parameter list  =  literal  value 
  literal  value 
   value 
  = null |  number  |
   boolean  |
   literal 
  assign specific privilege assign role user parameter grant role section manage user role
  addition assign execute privilege database element assign fine grain privilege column privilege
  user execute privilege view user query view obtain datum
  want user project column view use column privilege
  use follow parameter grant execute  column list 
  restrict column user obtain query certain view
  user able obtain column column list
  grant execute  column list 
  procedure restrict column user obtain execute certain store procedure
  section type access right column privilege administration guide contain information restriction
  user role execute access view add restriction filter row return user
  way user send query view result contain obtain row match certain criterion
  specify filter condition apply query ask list specific field
  use follow parameter grant execute
  
  
   column list 
   condition literal  user query view result contain row match condition
  column list condition evaluate
  condition evaluate query project column column list
  column list modifier present query project field column list query return row
  column list modifier present query project field column list condition evaluate return row match
  grant execute
   column list 
   condition literal  procedure
  previous structure assign privilege virtual dataport store procedure instead view
  custom policy custom
  user role execute access view add custom policy filter row return user role
  custom policy similar restriction account complex information
  parameter contain parameter pass custom policy
  section custom view policy developer guide learn develop custom policy section modify privilege user administration guide learn apply user role
  statement follow create database database1   database2
  create user user1 grant follow privilege database1 database2   admin privilege database database1
  connection permission create element database2
  privilege query insert update delete view1   database2
  project field summary   taxid   internet_inc
  user query view phone_inc server return row match condition description like adsl%
  example assign privilege user create database database1 database1 description create database database2 database2 description create user user1 user1password user1 description grant privilege database1 grant connect create database2 grant execute write database2.view1 grant execute summary taxid
  admin.internet_inc grant execute
  description like cable% admin.phone_inc
  grant privilege user role
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_the_privileges_of_a_user#syntax-of-the-clauses-grant-revoke-of-create-user-and-alter-user</field><field name="content">
  syntax clause grant revoke create user alter user  grant  = grant  database privilege   database identifi  | grant role  role list  | grant  datasource privilege 
   datum source type   database identifier.datasource identifi  | grant  view privilege 
   database identifier.view identifi  | grant  procedure privilege 
  procedure  database identifier.procedure identifi  | grant  datum service privilege 
   service type   database identifier.data service identifi  |
  grant admin  database identifi  | grant metadata
   database identifi  | grant metadata
   database identifier.view identifi  | grant execute  column list 
   database identifier.view identifi  | grant execute  column list 
  procedure  database identifier.procedure identifi  | grant execute
   column list 
   condition literal 
  
  mask  database identifier.view identifi  | grant execute
   column list 
   condition literal 
  
  mask procedure  database identifier.procedure identifi  | grant execute custom  policy identifi  parameter  parameter list 
   database identifier.view
  identifi  | grant execute custom  policy identifi  parameter  parameter list 
  procedure  database identifier.procedure
  identifi  | revoke  database privilege 
   database identifi  | revoke role  role list  |
  revoke  datasource privilege 
   datum source type   database identifier.datasource identifi  | revoke  view privilege 
   database identifier.view
  identifi  | revoke  procedure privilege 
  procedure  database identifier.procedure
  identifi  | revoke  datum service privilege 
   service type   database identifier.data service
  identifi  | revoke admin  database identifi  |
  revoke metadata  database identifi  | revoke metadata  database identifier.view identifi  | revoke execute  column list 
   database identifier.view identifi  | revoke execute  column list 
  procedure  database identifier.procedure identifi  | revoke execute
   column list 
   condition literal 
  
  mask  database identifier.view identifi  | revoke execute
   column list 
   condition literal 
  
  mask procedure  database identifier.procedure identifi  | revoke execute custom  policy identifi  parameter  parameter list 
   database identifier.view identifi  | revoke execute custom  policy identifi  parameter  parameter list 
  procedure  database identifier.procedure identifi   database privilege  = privilege
  |  database privilege list 
   database privilege list  =  database privilege 
   database privilege 
   database privilege  = connect | create | create_data_source |
  create_view | create_data_service | create_folder | file | execute | metadata | write  role list  =  role identifier 
   role identifier 
   column list 
  =  column identifier 
   column identifier 
   view privilege  = privilege |
   view privilege list   view privilege list  =  view privilege 
   view privilege 
   view privilege  =
  execute | metadata | write |
  insert | update | delete  procedure privilege  = privilege
  |
   procedure privilege list   procedure privilege list  =  procedure privilege 
   procedure privilege 
   procedure privilege  = execute | metadata |
  write | insert | update | delete  datasource privilege 
  = privilege |  datasource privilege list 
   datasource privilege list  =  datum source privilege 
   datum source privilege 
   datasource privilege  = metadata | execute | write  datum source type  = custom |
  df | essbase | itp | jdbc | json | ldap | odbc | salesforce |
  sapbwbapi | saperp | ws | xml  datum service privilege  = privilege |
   data service privilege list 
   data service privilege list  =  datum service privilege 
   datum service privilege 
   datum service privilege  = metadata | write  service type 
  = webservice | widget | listener  parameter list  =  literal  value 
  literal  value 
   value 
  = null |  number  |
   boolean  |
   literal 
  syntax clause grant revoke create user alter user
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/modifying_the_privileges_of_a_user#example-of-assigning-privileges-to-a-user</field><field name="content">
  example assign privilege user create database database1 database1 description create database database2 database2 description create user user1 user1password user1 description grant privilege database1 grant connect create database2 grant execute write database2.view1 grant execute summary taxid
  admin.internet_inc grant execute
  description like cable% admin.phone_inc
  example assign privilege user
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/managing_user_roles#managing-user-roles</field><field name="content">
  manage user role role set access right grant user way assign specific privilege
  section role administration guide explain role detail
  syntax command create new role follow syntax create role statement create replace
  role  identifi 
   description literal 
   grant   grant  = section grant privilege user role
  syntax alter role statement alter role  identifi 
   description literal 
   grant   grant  = section grant privilege user role
  access privilege assign role user work way syntax command
  addition assign role role role inheritance
  example follow role role vdp_developer privilege connect metadata execute create write database admin
  role itpilot_developer privilege connect metadata execute create write database itpilot
  follow statement create role new role denodo_developer assign role vdp_developer itpilot_developer
  role inheritance create role vdp_developer grant connect create metadata execute write admin create role itpilot_developer grant connect create metadata execute write itpilot create role denodo_developer grant role vdp_developer itpilot_developer user role denodo_developer assign privilege connect metadata execute create write database admin itpilot
  note explain section role administration guide effective permission user union privilege role
  manage user role
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/managing_user_roles#syntax-of-the-create-role-statement</field><field name="content">
  syntax create role statement create replace
  role  identifi 
   description literal 
   grant 
  syntax create role statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/managing_user_roles#syntax-of-the-alter-role-statement</field><field name="content">
  syntax alter role statement alter role  identifi 
   description literal 
   grant 
  syntax alter role statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/managing_users/managing_user_roles#using-role-inheritance</field><field name="content">
  role inheritance create role vdp_developer grant connect create metadata execute write admin create role itpilot_developer grant connect create metadata execute write itpilot create role denodo_developer grant role vdp_developer itpilot_developer
  role inheritance
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/ownership_of_elements/ownership_of_elements#ownership-of-elements</field><field name="content">
  ownership element element database owner datum source view web service folder etc
  user create element automatically owner
  later ownership element grant user command chown
  syntax statement chown change owner datum source chown  user identifi  datasource custom | df | essbase | jdbc | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  identifi  change owner wrapper chown  user identifi  wrapper custom | df | essbase | itp | jdbc | json |
  ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  identifi  change owner view store procedure web service soap rest widget jms listener chown  user identifi  view | procedure |
  webservice |
  widget | listener jms  identifi  change owner folder chown  user identifi  folder  path literal  change owner element need global administrator administrator database element belong   
  way obtain owner element administration tool right click element click property
  command desc parameter includeuserprivilege
  example desc vql view invoice includeuserprivileges'='yes
  output contain chown statement
  store procedure return information element
  e.g. get_views return owner view get_element return owner type element
  ownership element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/creating_databases_users_roles_and_access_privileges/ownership_of_elements/ownership_of_elements#syntax-of-the-statement-chown</field><field name="content">
  syntax statement chown change owner datum source chown  user identifi  datasource custom | df | essbase | jdbc | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  identifi  change owner wrapper chown  user identifi  wrapper custom | df | essbase | itp | jdbc | json |
  ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  identifi  change owner view store procedure web service soap rest widget jms listener chown  user identifi  view | procedure |
  webservice |
  widget | listener jms  identifi  change owner folder chown  user identifi  folder  path literal 
  syntax statement chown
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/global_security_policies/global_security_policies#global-security-policies</field><field name="content">
  global security policy global security policy allow define security restriction apply view column verify certain condition
  page global security policy administration guide
  command manage global security policy create global_security_policy create new global security policy
  syntax
  administrator local administrator run
  alter global_security_policies edit global security policy
  syntax
  administrator local administrator run
  desc vql global_security_policy obtain vql statement global security policy
  administrator local administrator run
  list global_security_policie return global security policy virtual dataport
  administrator local administrator run
  local administrator command return global security policy visible
  drop global_security_policy delete global security policy
  administrator local administrator run
  syntax create global_security_policy statement create replace global_security_policy  identifi 
  description
  =  description literal 
  enable = true | false audience  audience  element  element 
  restriction
   restriction   audience  = |  application_type  role  identifier_list role 
  | | not_in user
   identifier_list user 
  |  application_type  abac  abac_values_list abac_attrs 
   element  =  by_database database 
  view |
   by_database database  view tag |  identifier_list tag 
  |  by_database database  view tag  identifier_list tag 
  |  by_database database  column tag |  identifier_list tag 
  |  by_database database  column tag  identifier_list tag 
   restriction  = deny | deny |  identifier_list tag 
  | custom  identifi   parameter custom_policy_parameter 
  |  filter_condition filter  reject |
   filter_condition filter  reject |
   identifier_list tag 
  |  filter_condition filter  mask
  |  identifier_list tag 
  
  application_type  = |
  | not_in  parameter  = parameter  literal   value 
   literal   value 
   by_database  = view_database  identifier_list database 
   filter_condition  = filter =  literal condition   identifier_list  =  d identifier 
   d identifier 
  
   abac_values_list  =  literal 
   abac_operator operator   value literal 
   literal 
   abac_operator operator   value literal 
  
  
  abac_operator  = = | contain | | like description main parameter create global_security_policy enable indicate applicable runtime
  audience indicate global security policy apply element indicate element global security policy apply
  note element reference tag individually
  restriction restriction execute global security policy trigger
  syntax alter global_security_policies statement alter global_security_policies
   global_security_policies_status 
   global_security_policies_status  =  global_security_policy_status 
   global_security_policy_status 
   global_security_policy_status  =  identifi  enable = true | false command enable disable global security policy
  example disable global security policy filter_rows_to_devs_policy mask_rows_to_devs_policy alter global_security_policie filter_rows_to_devs_policy enable = false mask_rows_to_devs_policy enable = false
  global security policy
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/global_security_policies/global_security_policies#syntax-of-the-create-global-security-policy-statement</field><field name="content">
  syntax create global_security_policy statement create replace global_security_policy  identifi 
  description
  =  description literal 
  enable = true | false audience  audience  element  element 
  restriction
   restriction   audience  = |  application_type  role  identifier_list role 
  | | not_in user
   identifier_list user 
  |  application_type  abac  abac_values_list abac_attrs 
   element  =  by_database database 
  view |
   by_database database  view tag |  identifier_list tag 
  |  by_database database  view tag  identifier_list tag 
  |  by_database database  column tag |  identifier_list tag 
  |  by_database database  column tag  identifier_list tag 
   restriction  = deny | deny |  identifier_list tag 
  | custom  identifi   parameter custom_policy_parameter 
  |  filter_condition filter  reject |
   filter_condition filter  reject |
   identifier_list tag 
  |  filter_condition filter  mask
  |  identifier_list tag 
  
  application_type  = |
  | not_in  parameter  = parameter  literal   value 
   literal   value 
   by_database  = view_database  identifier_list database 
   filter_condition  = filter =  literal condition   identifier_list  =  d identifier 
   d identifier 
  
   abac_values_list  =  literal 
   abac_operator operator   value literal 
   literal 
   abac_operator operator   value literal 
  
  
  abac_operator  = = | contain | | like
  syntax create global security policy statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/global_security_policies/global_security_policies#syntax-of-the-create-global-security-policies-statement</field><field name="content">
  syntax alter global_security_policies statement alter global_security_policies
   global_security_policies_status 
   global_security_policies_status  =  global_security_policy_status 
   global_security_policy_status 
   global_security_policy_status  =  identifi  enable = true | false
  syntax create global security policy statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/global_security_policies/global_security_policies#disabling-global-security-policies-filter-rows-to-devs-policy-and-mask-rows-to-devs-policy</field><field name="content">
  disable global security policy filter_rows_to_devs_policy mask_rows_to_devs_policy alter global_security_policie filter_rows_to_devs_policy enable = false mask_rows_to_devs_policy enable = false
  disable global security policy filter row devs policy mask row devs policy
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/describing_catalog_elements/describing_catalog_elements#describing-catalog-elements</field><field name="content">
  describe catalog element desc statement allow obtain description element virtual dataport server
  syntax syntax statement desc
  syntax statement desc desc queryplan  query  |
   create remote table  desc catalog_database desc session desc vql association
  
  identifi database 
   desc parameter 
   desc parameter 
  desc vql database  identifi 
   desc database parameter 
   desc database parameter 
  desc vql datasource  datum source type 
   identifi database 
   desc parameter 
   desc parameter 
  desc vql folder  path literal   desc folder parameter 
   desc folder parameter  desc vql global_security_policy
   identifi   desc parameter 
   desc parameter 
  desc vql list  element desc statement 
   element desc statement 
   desc list parameter 
   desc list parameter 
  desc vql listener jms
   identifi database 
   desc parameter 
   desc parameter 
  desc vql map i18n | simple  identifi 
   desc parameter 
   desc parameter 
  desc vql procedure  identifi database 
   desc parameter 
   desc parameter 
  desc vql resource  resource type 
  version =
   literal 
  
  =  literal  desc vql role  identifi   desc parameter 
   desc parameter 
  desc vql tag  identifi   desc parameter 
   desc parameter 
  desc vql type  identifi database   desc parameter 
   desc parameter 
  desc vql user  identifi   desc parameter 
   desc parameter 
  desc vql interface view  identifi database   desc parameter 
   desc parameter 
  desc vql viewstatsummary  view identifi database   desc parameter 
   desc parameter 
  desc vql rest | soap webservice  identifi database   operation resource literal 
   operation resource literal 
  preserve_operation  desc parameter 
   desc parameter 
  desc vql widget
   identifi database 
   desc parameter 
   desc parameter 
  desc vql wrapper  wrapper type 
   identifi database 
   desc parameter 
   desc parameter 
  desc vql wrapper itp  identifi database 
   itpilot desc parameter 
   datum source type  = custom |
  df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  element desc statement 
  = association  identifi database  | database_config  identifi  |
  datasource  type datasource type   identifi database  |
  folder
   database 
   path literal  | global_security_policy
   identifi  | interface view  identifi database  |
  listener jms  identifi database  |
  procedure  identifi database 
  |
  role  identifi  | tag  identifi  | user  identifi  | view  identifi database  stat
  | widget  identifi database  | wrapper itp  identifi database  | rest | soap webservice  identifi database   operation resource literal 
   operation resource literal 
  preserve_operation  resource type  = essbase |
  jar| jdbc |
  jdbc | kerbero |
  library | sapjco  wrapper type 
  =  datum source type  |
  itp  desc folder parameter 
  = include"content" = yes | default |  desc parameter 
   desc database parameter  = | includeenvspecificelement = yes | default | includenonenvspecificelement = yes | default | includevcsconfiguration = yes | default |  desc parameter 
  |  itpilot desc parameter 
   desc parameter  = dropelement = yes |
  yes default | replaceexistingelement = yes | default | includecreatedatabase = yes | default | includedependencie = yes | yes default | includedeployment = yes | default | includejar = yes | default | includestatistic = yes | default | includeuserprivilege = yes | default | exclude_database_element = yes | default | includecreatewebservice = yes | default | includepropertie = yes | default | exclude_jdbc_wrapper_propertie = yes | default  desc list parameter  = includeserverpropertie = yes | default | includewebcontainerpropertie = yes | default | include_dependencies_from_all_database = yes | default |  desc parameter 
  |  desc folder parameter 
   itpilot desc parameter  = includescanner = yes | default | includecustomcomponent = yes | default  query  = syntax select statement  create remote table  = syntax create remote table statement
  desc queryplan  query  return execution plan execution engine use execute query
  add trace end query query return information desc queryplan avoid run query
  desc catalog_database return parameter connection database store metadata virtual dataport
  configure virtual dataport store metadata external database command return parameter connection embe derby database
  desc session return database user connect login
  statement follow group return vql element catalog
  element wrapper view web service widget association statement return statement need create element depend
  example desc vql view v return statement require create view v statement need create datum type wrapper datum source store procedure view require define view v. execute desc vql view need vql statement element view depend add parameter includedependencie
  e.g. desc vql view v includedependencie = return sentence create view v sentence create view v depend datum source
  statement desc vql folder return vql statement recreate folder
  add option include"content" = yes output include statement recreate element inside folder include folder
  add option includedependencie = yes output include statement recreate dependency element inside folder
  example folder f1 view v command desc vql folder f1 includedependencie = yes include"content" = yes return statement create folder statement create view v statement create element v depend different folder
  desc vql list b return statement require create element b. example desc vql list view v
  datasource jdbc d return sentence create view v data source d dependency
  desc vql webservice add token follow operation resource
  result alter rest webservice statement alter soap webservice statement allow add operation resource exist web service
  want generate create replace statement existent operation resource web service exist simply add preserve_operation token desc vql webservice statement   
  parameter includepropertie = yes value parameter depend environment variable instead actual value
  example property create datasource jdbc statement value databaseuri like $ databases.common_database.datasources.jdbc.oracle_product
  databaseuri instead uri database
  add includepropertie = yes add exclude_jdbc_wrapper_propertie = yes want parameter catalogname schemaname create wrapper jdbc statement contain actual value instead variable   
  export database option includecreatedatabase'='yes output contain statement create database alter database database create configuration include vcs set database
  want export vcs set add includevcsconfiguration'='no   
  default statistic view include result export vql entire server export database export view
  include statistic view result add option includestatistics'='ye
  describe catalog element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/describing_catalog_elements/describing_catalog_elements#syntax-of-the-statement-desc</field><field name="content">
  syntax statement desc desc queryplan  query  |  create remote table  desc catalog_database desc session desc vql association
  
  identifi database 
   desc parameter 
   desc parameter 
  desc vql database  identifi 
   desc database parameter 
   desc database parameter 
  desc vql datasource  datum source type 
   identifi database 
   desc parameter 
   desc parameter 
  desc vql folder  path literal   desc folder parameter 
   desc folder parameter  desc vql global_security_policy
   identifi   desc parameter 
   desc parameter 
  desc vql list  element desc statement 
   element desc statement 
   desc list parameter 
   desc list parameter 
  desc vql listener jms
   identifi database 
   desc parameter 
   desc parameter 
  desc vql map i18n | simple  identifi 
   desc parameter 
   desc parameter 
  desc vql procedure  identifi database 
   desc parameter 
   desc parameter 
  desc vql resource  resource type 
  version =
   literal 
  
  =  literal  desc vql role  identifi   desc parameter 
   desc parameter 
  desc vql tag  identifi   desc parameter 
   desc parameter 
  desc vql type  identifi database   desc parameter 
   desc parameter 
  desc vql user  identifi   desc parameter 
   desc parameter 
  desc vql interface view  identifi database   desc parameter 
   desc parameter 
  desc vql viewstatsummary  view identifi database   desc parameter 
   desc parameter 
  desc vql rest | soap webservice  identifi database   operation resource literal 
   operation resource literal 
  preserve_operation  desc parameter 
   desc parameter 
  desc vql widget
   identifi database 
   desc parameter 
   desc parameter 
  desc vql wrapper  wrapper type 
   identifi database 
   desc parameter 
   desc parameter 
  desc vql wrapper itp  identifi database 
   itpilot desc parameter 
   datum source type  = custom |
  df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  element desc statement 
  = association  identifi database  | database_config  identifi  |
  datasource  type datasource type   identifi database  |
  folder
   database 
   path literal  | global_security_policy
   identifi  | interface view  identifi database  |
  listener jms  identifi database  |
  procedure  identifi database 
  |
  role  identifi  | tag  identifi  | user  identifi  | view  identifi database  stat
  | widget  identifi database  | wrapper itp  identifi database  | rest | soap webservice  identifi database   operation resource literal 
   operation resource literal 
  preserve_operation  resource type  = essbase |
  jar| jdbc |
  jdbc | kerbero |
  library | sapjco  wrapper type 
  =  datum source type  |
  itp  desc folder parameter 
  = include"content" = yes | default |  desc parameter 
   desc database parameter  = | includeenvspecificelement = yes | default | includenonenvspecificelement = yes | default | includevcsconfiguration = yes | default |  desc parameter 
  |  itpilot desc parameter 
   desc parameter  = dropelement = yes |
  yes default | replaceexistingelement = yes | default | includecreatedatabase = yes | default | includedependencie = yes | yes default | includedeployment = yes | default | includejar = yes | default | includestatistic = yes | default | includeuserprivilege = yes | default | exclude_database_element = yes | default | includecreatewebservice = yes | default | includepropertie = yes | default | exclude_jdbc_wrapper_propertie = yes | default  desc list parameter  = includeserverpropertie = yes | default | includewebcontainerpropertie = yes | default | include_dependencies_from_all_database = yes | default |  desc parameter 
  |  desc folder parameter 
   itpilot desc parameter  = includescanner = yes | default | includecustomcomponent = yes | default
  syntax statement desc
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/describing_catalog_elements/exporting_metadata/exporting_metadata#exporting-metadata</field><field name="content">
  export metadata desc vql database statement export metadata virtual dataport database entire server
  useful backup migration purpose
  syntax statement syntax desc vql database statement export database desc vql database  database_name 
   property 
  = yes |  property 
  = yes |
  desc vql database statement include parameter  database_name  metadata database export
  include metadata user definition privilege
  desc vql database statement include parameter  database_name  entire server metadata export
  metadata entire server create database statement
  user definition privilege
  server set user execute statement need administrator privilege metadata_export role export metadata_export role section export file property
  configuration parameter  property  command includecreatedatabase
  yes export database output include create database statement create database export includejar
  yes output include jar contain java class associate extension
  section develop extension developer guide explain extension develop includeenvspecificelement includenonenvspecificelement
  use option obtain vql statement element depend environment includeenvspecificelement = yes statement element independent environment includenonenvspecificelement = yes
  example user create new view want obtain vql statement vql element depend environment e.g. datum source use follow option includenonenvspecificelement = yes includeenvspecificelement =
  section export environment dependent independent element different file administration guide list element consider dependent environment consider independent
  note option deprecate remove future version denodo platform
  use option includepropertie instead
  section feature deprecate denodo platform 8.0 list feature deprecate includescanner
  yes output include binary file itpilot scanner www wrapper includestatistic
  yes output include statistic gather view
  statistic cost base optimization process
  section cost base optimization administration guide includecustomcomponent
  yes output file include itpilot custom component exist www datum source dropelement
  yes default value output include command drop
  cascade command create
  result include drop sentence create replaceexistingelement
  yes output vql statement create element like create replace
  default value vql statement like create replace
  element type exist command fail
  usually parameter combination dropelement
  example desc vql datasource jdbc oracle_ds dropelement = replaceexistingelement = yes return create replace datasource jdbc oracle_ds
  command execute create jdbc datum source exist
  jdbc data source exist replace datum source
  execute follow desc vql datasource jdbc oracle_ds result like drop datasource jdbc oracle_ds cascade create datasource jdbc oracle_ds
  command execute datum source view element depend delete
  datum source create
  exclude_database_element
  yes result include element database privilege database configuration
  output file include element database
  example follow statement export database customer360 include statistic view database
  desc vql database customer360 includecreatedatabase = yes includestatistic = yes dropelement = replaceexistingelement = yes
  parameter includestatistic = yes desc vql return statistic view export
  export metadata
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/describing_catalog_elements/exporting_metadata/exporting_metadata#syntax-of-the-desc-vql-database-statement-to-export-a-database</field><field name="content">
  syntax desc vql database statement export database desc vql database  database_name 
   property 
  = yes |  property 
  = yes |
  syntax desc vql database statement export database
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/describing_catalog_elements/importing_metadata/importing_metadata#importing-metadata</field><field name="content">
  import metadata import export metadata need execute vql statement obtain export process
  option import dialog administration tool
  section import metadata server administration guide
  use import script
  section import script administration guide
  import metadata
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/listing_elements_in_the_catalog/listing_elements_in_the_catalog#listing-elements-in-the-catalog</field><field name="content">
  list element catalog list command return list element
  e.g. list database list jdbc datum source etc
  vql shell administration tool execute help list obtain syntax command
  optional clause  database  list command allow obtain list type element different database connect
  element server list database list exist database
  list function return syntax function available
  list include function available box custom function develop user upload server
  output command change future version denodo platform
  list function custom return syntax custom function develop user upload server
  output command change future version denodo platform
  list global_security_policie return global security policy existent virtual dataport section global security policy list i18ns list available i18n
  obtain configuration specific execute desc vql map i18n  i18n 
  list jar list jar extension section define jar extension
  command list jar file user import execute command create jar extension management dialog administration tool
  list map list map type simple i18n section define map
  list operator list operator applicable datum type int double float text etc
  list policy list custom policy
  section custom view policy developer guide explain develop import virtual dataport
  list resource_manager rule | plan list information rule plan define resource manager
  list role list role section manage user
  list tag list tag existent virtual dataport section tag
  list user list user role section manage user role
  element database connect list association list association section association
  list datasource list datum source type specify section specify path virtual dataport
  list listener jms list listener jms section define jms listener list procedure list denodo store procedure
  list resource list resource administrator upload extension management wizard administration tool
  list type datum type catalog certain type array register
  list view list derive view database
  clause present return list base derive view
  clause base present return list base view
  list viewstatsummarie list view statistic cost base optimization section define statistic view
  list webservice list publish web service section publication web service
  list widget list publish widget section publication widget
  list wrapper list wrapper specify type section generate wrapper datum source
  syntax list statement list association
   viewname identifier 
   database identifi 
  list database ldap list datasource  datasource type 
   database identifi  list environment list function list function custom list i18ns list jar list listener
  jms  database identifi  list maps i18n list map simple  database identifi  list operator  type
  identifi  list policy list procedure
   database identifi  list resource_manager rule | plan list resource |  resource type 
  version =
   literal  list role list type
  array | register
   database identifier  list user list view
  base |
   database identifi  list viewstatsummarie
   database identifi 
  list webservice  database identifi 
  list widget  database identifi 
  list wrapper  wrapper type 
   database identifi 
   datasource type  = custom |
  df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  | sapbwbapi | saperp| ws | xml  resource type 
  = essbase | generic | jar | jdbc | jdbc_other | kerbero |
  library | sapjco  wrapper type  =  datasource type  |
  itp example list exist database follow statement execute list database list map type i18n follow statement list map i18n list jdbc datum source support database list datasource jdbc support
  list element catalog
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/listing_elements_in_the_catalog/listing_elements_in_the_catalog#syntax-of-the-list-statement</field><field name="content">
  syntax list statement list association  viewname identifier 
   database identifi 
  list database ldap list datasource  datasource type 
   database identifi  list environment list function list function custom list i18ns list jar list listener
  jms  database identifi  list maps i18n list map simple  database identifi  list operator  type
  identifi  list policy list procedure
   database identifi  list resource_manager rule | plan list resource |  resource type 
  version =
   literal  list role list type
  array | register
   database identifier  list user list view
  base |
   database identifi  list viewstatsummarie
   database identifi 
  list webservice  database identifi 
  list widget  database identifi 
  list wrapper  wrapper type 
   database identifi 
   datasource type  = custom |
  df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  | sapbwbapi | saperp| ws | xml  resource type 
  = essbase | generic | jar | jdbc | jdbc_other | kerbero |
  library | sapjco  wrapper type  =  datasource type  | itp
  syntax list statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/removing_elements_from_the_catalog/removing_elements_from_the_catalog#removing-elements-from-the-catalog</field><field name="content">
  remove element catalog statement drop remove element virtual dataport server
  syntax drop statement drop database exist
   identifi  cascade drop datasource  datum source type 
  exist
   identifi  cascade
  drop procedure
  exist
   identifi  cascade
  drop wrapper  wrapper type 
  exist
   identifi  cascade
  drop
  
  interface view | view |
  table
  exist
   identifi  cascade
  drop association
  exist
   identifi  drop customcomponent  identifi  drop environment  identifi  drop folder
  exist  path folder literal  cascade drop jar
  exist
   literal  cascade
  drop listener
  jms
  exist
  
  literal  drop map i18n
  exist
   identifi  cascade
  drop map simple
  exist
   identifi  cascade
  drop resource_manager rule
  exist
   identifi  drop resource_manager
  plan exist
   identifi  cascade
  drop scanner  literal  drop type
  exist
   identifi  cascade drop rest webservice
  exist
   identifi  drop soap webservice exist
   identifi  drop user | role
  exist
   identifi  drop
  viewstatsummary
  exist
   view identifi  drop webservice
  exist
   identifi  drop widget
  exist
   identifi   datum source type  = custom | df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  wrapper type 
  =  datum source type  |
  itp available option drop statement remove database user user role server remove datum source wrapper indicate type remove store procedure remove view base derive remove association remove itpilot custom component remove folder remove jar extension remove jms listener remove specific datum dictionary map indicate type i18n simple remove itpilot scanner www wrapper remove datum type remove publish web service remove publish widget
  exist modifier include case
  case drop sentence run event specify element exist
  statement delete view type wrapper datum source allow optional modifier cascade
  modifier indicate attempt delete element error occur catalog element depend example datum source delete wrapper use exist
  case element delete
  modifier cascade specify indicate element delete element depend delete
  user execute delete operation privilege involve element operation fail
  example use drop statement
  eliminate view shopview follow statement execute drop view shopview remove www itpilot wrapper shopview simply execute drop wrapper itp shopview remove map type i18n
  es_euro follow statement drop map i18n es_euro drop map i18n es_euro
  remove element catalog
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/removing_elements_from_the_catalog/removing_elements_from_the_catalog#syntax-of-the-drop-statement</field><field name="content">
  syntax drop statement drop database exist
   identifi  cascade drop datasource  datum source type 
  exist
   identifi  cascade
  drop procedure
  exist
   identifi  cascade
  drop wrapper  wrapper type 
  exist
   identifi  cascade
  drop
  
  interface view | view |
  table
  exist
   identifi  cascade
  drop association
  exist
   identifi  drop customcomponent  identifi  drop environment  identifi  drop folder
  exist  path folder literal  cascade drop jar
  exist
   literal  cascade
  drop listener
  jms
  exist
  
  literal  drop map i18n
  exist
   identifi  cascade
  drop map simple
  exist
   identifi  cascade
  drop resource_manager rule
  exist
   identifi  drop resource_manager
  plan exist
   identifi  cascade
  drop scanner  literal  drop type
  exist
   identifi  cascade drop rest webservice
  exist
   identifi  drop soap webservice exist
   identifi  drop user | role
  exist
   identifi  drop
  viewstatsummary
  exist
   view identifi  drop webservice
  exist
   identifi  drop widget
  exist
   identifi   datum source type  = custom | df | essbase | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml  wrapper type 
  =  datum source type  |
  itp
  syntax drop statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/publication_of_web_services#publication-of-web-services</field><field name="content">
  publication web service virtual dataport publish view web service enable external application use jdbc odbc interface retrieve datum virtual dataport
  deploy web service web service container embed denodo platform generate war file deploy external j2ee application server
  virtual dataport type web service soap web service set operation invoke service execute specific vql query view
  rest web service set view association
  rest web service define operation view
  instead service follow restful approach denodo restful web service section restful web service administration guide
  web service provide different representation datum
  html xml json rss main difference type soap web service operation orient rest web service resource orient
  type provide different authentication method validate user identity section connection parameter
  section describe create deploy soap rest web service vql statement
  note strongly recommend define new web service virtual dataport administration tool section publication web service administration guide syntax create rest webservice create soap webservice statement complex
  publication web service
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/creating_soap_web_services/creating_soap_web_services#creating-soap-web-services</field><field name="content">
  create soap web service use statement create soap webservice create soap web service publish view and/or store procedure
  syntax create soap webservice statement create replace
  soap webservice  identifi  connection chunksize =  integer  chunktimeout =
   integer  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer 
  i18n  identifi  datetypemappe date | datetime
  nowraparray
  raisefaultonidu
  donotapplyoutputxslttoerror
  verboseerror =  boolean 
  default value true authentication  authentication 
  output style document | rpc xslt  xslt configuration 
   xslt configuration 
  jms vendor activemq | webspheremq | jndi destination
  =  literal 
  replyto =  literal  queue |
  "topic" user =  literal  password
  =
   literal  encrypt
  property  property 
   property 
   operation 
  + folder =  literal 
  description =  literal 
  create replace soap webservice  identifi  connection chunksize =  integer  chunktimeout =
   integer  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer 
  i18n  identifi  datetypemappe date | datetime
  nowraparray
  raisefaultonidu
  donotapplyoutputxslttoerror
  verboseerror =  boolean 
  default value true authentication  authentication 
  output style document | rpc xslt  xslt configuration 
   xslt configuration 
  jms vendor activemq | webspheremq | jndi destination
  =  literal 
  replyto =  literal  queue |
  "topic" user =  literal  password
  =
   literal  encrypt
  property  property 
   property 
   operation 
  + folder =  literal 
  description =  literal 
   authentication  = basic  credential  | basic vdp vdpaccepteduser  users_list 
  | digest  credential  | spnego | wss basic  credential  | wss basic vdp vdpaccepteduser  users_list 
  | wss digest  credential   credential  = user  user_name literal  password  password literal  encrypt  users_list 
  =  user_name literal 
   user_name literal 
  
   operation  = operation  literal  type select | insert | update | delete schema view | wrapper  wrapper type  | procedure  schema literal  vql =  literal  input
   input element literal 
   input parameter 
  
  output  return parameter 
   input parameter  =  input parameter type 
   literal   view query literal 
   type literal 
   operator literal 
  
  obl
   rename field 
   input parameter type  = orderby | offset |
  fetch  return parameter  =  simple type literal  |  register type literal 
  array  return parameter register 
   rename field 
   rename field 
   return parameter register  =  literal  register  register field 
   register field 
   register field  =  literal   type literal   rename field  =  xpath field literal 
  =  display literal   display array type literal 
   display type literal 
   xslt configuration  = operation
  =  literal 
  soapaction =  action literal 
  inputxslt =  xslt literal   isenable 
  outputxslt =  xslt literal  isenable   isenable  = enable | disabled  property  =  key literal 
  =  value literal   wrapper type  = custom | df | essbase | itp | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml soap web service publish virtual dataport form list operation define operation clause
  operation run vql statement indicate vql property operation
  operation act view wrapper store procedure execute specific vql statement schema property
  type statement type property select common insert update delete
  operation contain list input parameter output parameter
  output parameter query operation array register contain result query run
  insert update delete operation return number tuple affect operation
  parameter chunksize chunktimeout querytimeout poolenable poolinitsize poolmaxactive configure connection web service establish virtual dataport server section connection parameter
  i18n parameter indicate internationalization configuration service
  datetypemappe parameter configure value type date format date server print day month year
  datetime include time
  authentication set service control authentication parameter
  clause nowraparray modify soap output web service value clause style document
  clause present output soap web service simple
  output backward compatible soap web service publish previous version denodo platform
  recommend add
  add clause equivalent clear old soap document output check box publish soap web service wizard administration tool
  clause raisefaultonidu present web service raise soap fault insert delete update operation fail
  add clause equivalent clear ignore fault idu operation check box publish soap web service wizard administration tool
  soap web service subscribe jms server listen soap message soap jms
  add parameter jms appropriate parameter
  section define jms listener explain meaning parameter relate establish connection jms server
  environment exist soap client service need modify client work virtual dataport web service
  define xslt stylesheet transform incoming soap message adapt format new web service expect
  define stylesheet transform soap response send exist client
  use parameter xslt
  default xslt transformation apply datum error message return web service
  clause donotapplyoutputxslttoerror present service apply transformation error message
  want web service return verbose error message add clause verboseerror = false
  add clause set true web service return verbose error message error invoke operation
  message indicate problem raise
  e.g. timeout connect datum source error execute query etc
  want client web service verbose message add verboseerror = false
  information read section xslt transformation administration guide preserve_operation clause create replace operation
  token indicate exist web service operation preserve replace operation conflict
  rename soap web service use statement rename syntax statement
  rename webservice rename webservice  identifier   new identifi 
  rename web service customer360   ws_customer360  rename webservice customer360 ws_customer360
  create soap web service
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/creating_soap_web_services/creating_soap_web_services#syntax-of-the-create-soap-webservice-statement</field><field name="content">
  syntax create soap webservice statement create replace soap webservice  identifi  connection chunksize =  integer  chunktimeout =
   integer  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer 
  i18n  identifi  datetypemappe date | datetime
  nowraparray
  raisefaultonidu
  donotapplyoutputxslttoerror
  verboseerror =  boolean 
  default value true authentication  authentication 
  output style document | rpc xslt  xslt configuration 
   xslt configuration 
  jms vendor activemq | webspheremq | jndi destination
  =  literal 
  replyto =  literal  queue |
  "topic" user =  literal  password
  =
   literal  encrypt
  property  property 
   property 
   operation 
  + folder =  literal 
  description =  literal 
  create replace soap webservice  identifi  connection chunksize =  integer  chunktimeout =
   integer  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer 
  i18n  identifi  datetypemappe date | datetime
  nowraparray
  raisefaultonidu
  donotapplyoutputxslttoerror
  verboseerror =  boolean 
  default value true authentication  authentication 
  output style document | rpc xslt  xslt configuration 
   xslt configuration 
  jms vendor activemq | webspheremq | jndi destination
  =  literal 
  replyto =  literal  queue |
  "topic" user =  literal  password
  =
   literal  encrypt
  property  property 
   property 
   operation 
  + folder =  literal 
  description =  literal 
   authentication  = basic  credential  | basic vdp vdpaccepteduser  users_list 
  | digest  credential  | spnego | wss basic  credential  | wss basic vdp vdpaccepteduser  users_list 
  | wss digest  credential   credential  = user  user_name literal  password  password literal  encrypt  users_list 
  =  user_name literal 
   user_name literal 
  
   operation  = operation  literal  type select | insert | update | delete schema view | wrapper  wrapper type  | procedure  schema literal  vql =  literal  input
   input element literal 
   input parameter 
  
  output  return parameter 
   input parameter  =  input parameter type 
   literal   view query literal 
   type literal 
   operator literal 
  
  obl
   rename field 
   input parameter type  = orderby | offset |
  fetch  return parameter  =  simple type literal  |  register type literal 
  array  return parameter register 
   rename field 
   rename field 
   return parameter register  =  literal  register  register field 
   register field 
   register field  =  literal   type literal   rename field  =  xpath field literal 
  =  display literal   display array type literal 
   display type literal 
   xslt configuration  = operation
  =  literal 
  soapaction =  action literal 
  inputxslt =  xslt literal   isenable 
  outputxslt =  xslt literal  isenable   isenable  = enable | disabled  property  =  key literal 
  =  value literal   wrapper type  = custom | df | essbase | itp | jdbc
  | json | ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml
  syntax create soap webservice statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/creating_soap_web_services/creating_soap_web_services#id1</field><field name="content">
  syntax statement rename webservice rename webservice  identifier   new identifi 
  id1
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/creating_soap_web_services/creating_soap_web_services#id2</field><field name="content">
  rename web service customer360   ws_customer360  rename webservice customer360 ws_customer360
  id2
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/modifying_soap_web_services/modifying_soap_web_services#modifying-soap-web-services</field><field name="content">
  modify soap web service modify soap web service use command alter soap webservice
  statement add replace drop operation soap web service
  syntax alter soap webservice statement alter soap webservice  identifi  set operation
   literal  type select | insert | update | delete schema view | wrapper  wrapper type  | procedure
   schema literal  vql =  literal  input
   input parameter 
  
  output  return parameter 
  alter soap webservice  identifi  drop operation
  exist
   literal   input parameter  =  input parameter type 
   literal   view query literal 
   type literal 
   operator literal 
  
  obl
   rename field 
   input parameter type  = orderby | offset |
  fetch  return parameter  =  simple type literal  |  register type literal 
  array  return parameter register 
   rename field 
   rename field 
   return parameter register  =  literal  register  register field 
   register field 
   register field  =  literal   type literal   rename field  =  xpath field literal 
  =  display literal   display array type literal 
   display type literal 
   wrapper type  = custom | df | essbase | itp | jdbc |
  json |
  ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml
  command add replace drop operation existent soap web service
  add replace resource define operation want publish set operation clause
  operation run vql statement indicate vql property operation
  operation act view wrapper store procedure execute specific vql statement schema property
  type statement type property select common insert update delete
  operation contain list input parameter output parameter
  output parameter query operation array register contain result query run
  insert update delete operation return number tuple affect operation
  remove operation use drop operation clause
  modify soap web service
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/modifying_soap_web_services/modifying_soap_web_services#syntax-of-the-alter-soap-webservice-statement</field><field name="content">
  syntax alter soap webservice statement alter soap webservice  identifi  set operation
   literal  type select | insert | update | delete schema view | wrapper  wrapper type  | procedure
   schema literal  vql =  literal  input
   input parameter 
  
  output  return parameter 
  alter soap webservice  identifi  drop operation
  exist
   literal   input parameter  =  input parameter type 
   literal   view query literal 
   type literal 
   operator literal 
  
  obl
   rename field 
   input parameter type  = orderby | offset |
  fetch  return parameter  =  simple type literal  |  register type literal 
  array  return parameter register 
   rename field 
   rename field 
   return parameter register  =  literal  register  register field 
   register field 
   register field  =  literal   type literal   rename field  =  xpath field literal 
  =  display literal   display array type literal 
   display type literal 
   wrapper type  = custom | df | essbase | itp | jdbc |
  json |
  ldap | odbc | olap | salesforce |
  sapbwbapi | saperp | ws | xml
  syntax alter soap webservice statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/creating_rest_web_services/creating_rest_web_services#creating-rest-web-services</field><field name="content">
  create rest web service rest web service publish datum view optionally association view section association
  service follow restful approach denodo restful web service work way difference display datum view association choose
  main difference soap web service rest web service resource orient soap operation orient
  rest web service provide different representation datum html xml json rss
  available configure service rss mapping view clause syntax create rest webservice statement create replace rest webservice  identifi 
  preserve_operation connection chunksize =  integer  chunktimeout =  integer 
  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer 
  defaultrepresentation =  representation 
  supportedrepresentation =  representation 
   representation 
  displayrestfulreference = true | false
  authentication  authentication 
  customnamespace =  literal 
  customcss =  css stylesheet literal 
  verboseerror =  boolean 
  default value true resource  resource config 
   resource config 
  association  association identifi database 
   association identifi database 
  option  rss mapping 
   rss mapping 
  
   xslt config 
   xslt config 
  
  applyoutputxslttoerror nullvaluesasemptyxmlelement =  boolean 
  allow_cors_origin |  literal 
   literal  enable | disable
  max_rows_per_page =  non zero positive integer 
  process_functions_in_select_parameter =  boolean 
  folder =  literal 
  description =  literal 
   representation 
  = html | json | rss | xml  authentication  = basic  credential  | basic vdp vdpaccepteduser  user list 
  | digest  credential  | spnego | saml2  saml2 parameter 
   credential  = user  user literal  password  password literal  encrypt
   user list 
  =  user literal 
   user literal   saml2 parameter  = spentityid  service provider entity d literal   resource config  = view  view identifi  field  field list 
   field mapping 
   field list  =  field 
   field 
   field 
  =  literal   type literal   xpath field literal 
  =  display literal 
   direction 
  obl
  unescape  direction  = input_only | output_only  rss mapping  = rss mapping view  viewname literal 
  channel  mapping 
   mapping  item  item mapping 
   item mapping 
   mapping  =  rss tag literal 
  =  value literal   item mapping 
  =  rss tag literal  =  field identifi   xslt config  = view  viewname literal  xslt
  inputxslt =  xslt literal  enable | disable
  outputxslt =  xslt literal  enable | disable
   view identifier  = basic element vql statement  identifi database  = basic element vql statement define view want publish resource clause
  view publish indicate view clause field view field
  force publish field view
  publish association add association parameter comma separate list association want publish
  parameter chunksize chunktimeout querytimeout poolenable poolinitsize poolmaxactive configure connection web service virtual dataport server section connection parameter
  parameter defaultrepresentation supportedrepresentation set default representation available representation web service section select default available representation administration guide
  want web service return verbose error message add clause verboseerror = false
  add clause set true web service return verbose error message error invoke operation
  message indicate problem raise
  e.g. timeout connect datum source error execute query etc
  want client web service verbose message add verboseerror = false
  parameter displayrestfulreference correspond check box display restful link   create rest web service dialog section set tab rest administration guide
  false runtime web service return link view
  definition field follow modifier correspond status field obl mandatory field input_only output output_only searchable
  unescaped indicate runtime value field html escape section
  html escape datum administration guide
  authentication configuration service control authentication parameter
  rss format specify series specific field item
  export view rss format correspondence field view field rss format specify
  possible mapping clause
  rss feed contain channel element specify general information feed
  channel parameter mapping clause allow specify constant value channel subelement permit rss format
  rss feed contain list item element
  virtual dataport generate item element tuple return query view store procedure service
  item parameter mapping clause allow select attribute view correspond item subelement define rss format
  rss format specify value assign title subelement description subelement   
  default xslt transformation apply datum error message return web service
  add clause applyoutputxslttoerror want service apply error message
  affect xml representation service   
  default denodo rest web service explicitly specify value field null add attribute xsi nil=\true element
  e.g. row value field field_name null service return follow  field_name xsi nil=\true 
  want web service specify null value attribute xsi nil=\true add clause nullvaluesasemptyxmlelement = true
  result null value represent element
  e.g.  field_name 
  problem enable option text field difference null value string
  add clause equivalent add nullvaluesasemptyxmlelement = false
  note apply xml representation view   
  enable support cross origin resource sharing cor rest web service
  cor section cross origin resource sharing cor administration guide
  enable support add clause allow_cors_origin indicate domain service receive request
  enter allow_cors_origins allow cor request domain
  enter allow_cors_origin  list allow domain   list allow domain  comma separate list url request service allow
  example allow_cors_origin http://foo.com https://foo.bar.com
  set list allow domain cor request domain deny http code 403 forbid important url enter protocol
  url contain protocol invalid
  e.g. allow_cors_origins foo.com invalid   
  limit maximum number row return service
  limit enable client query view number row response exceed limit
  feature useful sure client strain virtual dataport server datum source
  enable limit add parameter max_rows_per_page =  non zero positive integer  option clause   
  add parameter process_functions_in_select_parameter
  = true equivalent select check box process function $ select parameter tab advance configuration rest web service administration tool
  section advance tab rest administration guide explain option   
  environment exist rest client service need modify client work virtual dataport web service
  define xslt stylesheet transform incoming xml message adapt format new web service expect
  define stylesheet transform xml response send exist client
  use parameter xslt
  information read section xslt transformation administration guide preserve_operation clause create replace operation
  token indicate exist web service resource preserve replace resource conflict
  create rest web service
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/creating_rest_web_services/creating_rest_web_services#syntax-of-the-create-rest-webservice-statement</field><field name="content">
  syntax create rest webservice statement create replace rest webservice  identifi 
  preserve_operation connection chunksize =  integer  chunktimeout =  integer 
  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer 
  defaultrepresentation =  representation 
  supportedrepresentation =  representation 
   representation 
  displayrestfulreference = true | false
  authentication  authentication 
  customnamespace =  literal 
  customcss =  css stylesheet literal 
  verboseerror =  boolean 
  default value true resource  resource config 
   resource config 
  association  association identifi database 
   association identifi database 
  option  rss mapping 
   rss mapping 
  
   xslt config 
   xslt config 
  
  applyoutputxslttoerror nullvaluesasemptyxmlelement =  boolean 
  allow_cors_origin |  literal 
   literal  enable | disable
  max_rows_per_page =  non zero positive integer 
  process_functions_in_select_parameter =  boolean 
  folder =  literal 
  description =  literal 
   representation 
  = html | json | rss | xml  authentication  = basic  credential  | basic vdp vdpaccepteduser  user list 
  | digest  credential  | spnego | saml2  saml2 parameter 
   credential  = user  user literal  password  password literal  encrypt
   user list 
  =  user literal 
   user literal   saml2 parameter  = spentityid  service provider entity d literal   resource config  = view  view identifi  field  field list 
   field mapping 
   field list  =  field 
   field 
   field 
  =  literal   type literal   xpath field literal 
  =  display literal 
   direction 
  obl
  unescape  direction  = input_only | output_only  rss mapping  = rss mapping view  viewname literal 
  channel  mapping 
   mapping  item  item mapping 
   item mapping 
   mapping  =  rss tag literal 
  =  value literal   item mapping 
  =  rss tag literal  =  field identifi   xslt config  = view  viewname literal  xslt
  inputxslt =  xslt literal  enable | disable
  outputxslt =  xslt literal  enable | disable
  syntax create rest webservice statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/modifying_rest_web_services/modifying_rest_web_services#modifying-rest-web-services</field><field name="content">
  modify rest web service modify rest web service use command alter rest webservice
  statement add replace drop view web service
  syntax alter rest webservice statement alter rest webservice  identifi  set view  view identifi  field  field list 
   field mapping 
  alter rest webservice  identifi  set association  association identifi database 
   association identifi database 
  alter rest webservice  identifi  drop view
  exist  view identifier   field list  =  field 
   field 
   view identifier  = basic element vql statement  identifi database  = basic element vql statement  field  = create rest web service add replace view use set view clause
  field clause identifi field view
  publish field view
  remove view use drop view clause
  add association use clause set association follow comma separate list identifi association want service publish
  modify rest web service
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/modifying_rest_web_services/modifying_rest_web_services#syntax-of-the-alter-rest-webservice-statement</field><field name="content">
  syntax alter rest webservice statement alter rest webservice  identifi  set view  view identifi  field  field list 
   field mapping 
  alter rest webservice  identifi  set association  association identifi database 
   association identifi database 
  alter rest webservice  identifi  drop view
  exist  view identifier   field list  =  field 
   field 
  
  syntax alter rest webservice statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/connection_parameters/connection_parameters#connection-parameters</field><field name="content">
  connection parameter statement create soap web service rest web service old web service parameter manage connection establish service virtual dataport order retrieve datum publish view
  parameter follow chunksize chunktimeout querytimeout
  interpretation virtual dataport client section connection parameter administration guide
  poolenable
  true service use pool connection server
  strongly recommend set true poolinitsize
  poolenable true initial number connection open pool poolmaxactive
  poolenable true maximum number connection pool
  negative value number unlimited
  connection parameter
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#web-services-authentication</field><field name="content">
  web service authentication protect access rest soap web service configure authentication method service
  available authentication method depend web service type authentication method support soap rest web service  
  authentication method available soap web service available rest web service use credential web service use credential web service client http basic http basic vdp http digest http spnego kerbero oauth 2.0 openid saml 2.0 wss
  basic wss basic vdp wss digest web service use virtual dataport authentication method basic vdp wss vdp client web service use virtual dataport credential
  client send request service service use credential provide client open connection server execute appropriate query
  set authentication method server account privilege user role custom policy
  possible authentication method service use connection server execute query
  parameter vdpaccepteduser basic vdp wss vdp comma separate list user
  user user list access service
  parameter miss service accept virtual dataport user
  unlike authentication method grant user privilege access publish view
  basic digest basic digest authentication mode use basic digest http access authentication method
  http basic credential pass plaintext http digest send encrypt
  user use credential indicate parameter user password
  encrypt modifier indicate password provide encrypt option typically server export import metadata process
  user need use option
  oauth 2.0 openid use authentication method web service need enable oauth authentication virtual dataport server
  section oauth authentication explain
  openid extension oauth 2.0
  denodo support openid configure accept json web tokens jwt
  oauth 2.0 configuration server option use jwt select saml 2.0 rest web service publish virtual dataport support saml authentication security assertion markup language
  enable saml web service enable saml global configuration server
  section saml authentication explain
  publish web service type authentication
  add parameter spentityid string identify web service service provider identity provider idp
  section saml 2.0 administration guide explain detail configure web service authentication type vdp authentication method basic vdp soap rest wss basic vdp soap web service connect virtual dataport credential client web service
  user user vdpaccepteduser list access service
  list virtual dataport user accept
  authentication method user need permission access publish view
  wss web service security wss enforce integrity confidentiality web service message
  work basic digest authentication method
  currently virtual dataport support authentication profile username token
  web service authentication
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#authentication-methods-support-by-soap-and-rest-web-services-table-of-the-vql-guide</field><field name="content">
   
  authentication method support soap rest web service table vql guide
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#basic-and-digest</field><field name="content">
  basic digest basic digest authentication mode use basic digest http access authentication method
  http basic credential pass plaintext http digest send encrypt
  user use credential indicate parameter user password
  encrypt modifier indicate password provide encrypt option typically server export import metadata process
  user need use option
  basic digest
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#oauth-2-0-and-openid</field><field name="content">
  oauth 2.0 openid use authentication method web service need enable oauth authentication virtual dataport server
  section oauth authentication explain
  openid extension oauth 2.0
  denodo support openid configure accept json web tokens jwt
  oauth 2.0 configuration server option use jwt select
  oauth 2 0 openid
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#saml-2-0</field><field name="content">
  saml 2.0 rest web service publish virtual dataport support saml authentication security assertion markup language
  enable saml web service enable saml global configuration server
  section saml authentication explain
  publish web service type authentication
  add parameter spentityid string identify web service service provider identity provider idp
  section saml 2.0 administration guide explain detail configure web service authentication type
  saml 2 0
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#vdp</field><field name="content">
  vdp authentication method basic vdp soap rest wss basic vdp soap web service connect virtual dataport credential client web service
  user user vdpaccepteduser list access service
  list virtual dataport user accept
  authentication method user need permission access publish view
  vdp
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/web_services_authentication/web_services_authentication#wss</field><field name="content">
  wss web service security wss enforce integrity confidentiality web service message
  work basic digest authentication method
  currently virtual dataport support authentication profile username token
  wss
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/embedded_web_container_management/embedded_web_container_management#embedded-web-container-management</field><field name="content">
  embed web container management manage web container embed denodo platform webcontainer statement
  syntax webcontainer statement webcontainer start | stop |
  status | set  propertylist 
  statement follow parameter start stop status parameter start stop check current status web container
  set specify port number embed web container
  command desc webservice  web service literal  provide detailed description web service operation field operation etc
  embed web container management
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/embedded_web_container_management/embedded_web_container_management#syntax-of-the-webcontainer-statement</field><field name="content">
  syntax webcontainer statement webcontainer start | stop |
  status | set  propertylist 
  syntax webcontainer statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/deploying_and_exporting_soap_and_rest_web_services/deploying_and_exporting_soap_and_rest_web_services#deploying-and-exporting-soap-and-rest-web-services</field><field name="content">
  deploy export soap rest web service  
  statement deploy redeploy undeploy web service rest soap web service deploy webservice redeploy webservice undeploy webservice
  want deploy service external j2ee web container execute export war webservice statement generate war file contain web service specify webservice parameter
  file specify parameter
  generate wsdl file soap web service execute export wsdl webservice statement
  output file specify parameter
  war wsdl file accessible  denodo_home/resource apache tomcat webapps export directory url http://localhost:9090 export
  syntax deploy redeploy undeploy export war export wsdl statement deploy webservice  identifi  login =  literal  password
  =  literal  encrypt redeploy webservice  identifi  login =  literal  password
  =
   literal  encrypt
  undeploy
  exist webservice  identifi  export war webservice  identifi 
  =  literal  uri =  literal  login
  =  literal  password =
   literal  encrypt
  samlbaseurl =  saml 2.0 base url literal 
  export wsdl webservice  identifi 
  =  literal 
  parameter login password credential web service use open connection virtual dataport server execute query
  statement deploy webservice parameter login password present web service use credential user execute statement
  statement redeploy webservice parameter login password present web service use credential originally deploy
  example service deploy user scott user bruce execute redeploy webservice add login password parameter service use credential user scott
  credential web service store configuration file
  user web service delete password change redeploy web service
  deploy export soap rest web service
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/publication_of_web_services/deploying_and_exporting_soap_and_rest_web_services/deploying_and_exporting_soap_and_rest_web_services#syntax-of-the-deploy-redeploy-undeploy-export-war-and-export-wsdl-statement</field><field name="content">
  syntax deploy redeploy undeploy export war export wsdl statement deploy webservice  identifi  login =  literal  password =  literal  encrypt redeploy webservice  identifi  login =  literal  password =  literal  encrypt undeploy
  exist webservice  identifi  export war webservice  identifi 
  =  literal  uri =  literal  login
  =  literal  password =
   literal  encrypt
  samlbaseurl =  saml 2.0 base url literal 
  export wsdl webservice  identifi 
  =  literal 
  syntax deploy redeploy undeploy export war export wsdl statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/restful_architecture/restful_architecture#restful-architecture</field><field name="content">
  restful architecture section explain define association view
  select_navigational execute query allow navigate association define view
  element primary key support view rest architecture denodo platform
  main feature architecture restful web service describe section restful web service administration guide
  service allow client browse "content" virtual dataport http interface
  association  
  association represent relationship view similar way join view link view
  section association administration guide explain concept detail
  section explain vql statement create modify delete association
  syntax create association statement create replace association
   identifi database  referential constraint
  folder =  folder literal 
  description =  association_description literal 
  endpoint  role_name identifi   view_name identifi   mult multiplicity 
  precondition  condition 
  description =  endpoint_description literal 
  endpoint  role_name identifi   view_name identifi 
   mult multiplicity 
  precondition  condition 
  description =  endpoint_description literal 
  add mapping  val1 mapping_value 
  =  val1
  mapping_value  +  mapping_value  =  field 
  |
   mapping_value   funcsymbol 
   value  |  value   funcsymbol 
   mapping_value  | case  mapping_value 
   compare_value value   result value 
   compare_value value   result value 
   result
  value 
  end | case  condition   result value   condition   result value 
   result value 
  end  multiplicity  = 0 1 | 1 |
  | +
   identifi database  = basic element vql statement  value  = rule form function  condition  = rule form function
  clause referential constraint mark association referential constraint section referential integrity association administration guide
  description clause description association second description endpoint association
  clause precondition represent role precondition end point section role precondition administration guide
  syntax alter association statement alter association  identifi  rename  new_name identifi 
  description =  desc literal 
  use alter association statement rename association and/or change description
  delete association execute statement drop assocation syntax drop statement
  navigational query select_navigational execute query allow navigate association define view
  want identify particular row view primary key obtain row view link row view way join view
  define association view runtime use select_navigational traverse association
  define association provide benefit join query simple
  client need know view association
  client need know build valid join condition link view
  change view association condition association affect client
  example association view customer   order application execute statement select_navigational obtain order particular customer know field join condition view hold customer order
  drawback association instead join join allow link view complex way
  example consider view customer primary key field cid
  view participate association role endpoint customer view order
  select_navigational customer 2 order
  o_description like bandages% query return order customer cid = 2 description start bandage
  equivalent select query complex need know field build join condition
  e.g. select order
  customer inner join order customer.cid = orders.cid customer.cid = 2 orders.o_description like bandages% syntax select_navigational statement navigational query select_navigational
   navigation field   view identifi 
   select navigation 
  expand  expand element 
   extend condition 
  group  group expression 
   group expression 
  
   extend condition 
  order  order expression 
  asc | desc
   order expression 
  asc | desc
  condition mapping evaluation
  flatten level role
  offset  number 
  row | row
  fetch |
   number  row | row |
  limit
   number 
  context  context information 
  
   context information 
  trace  navigation field  =  navigation field 
   navigation field 
   navigation field  = |  field identifi   alia identifi 
  |  role identifi 
  |  role identifi   field identifi  |  function 
   function parameter 
   alia identifi  |  expression   function parameter  =  field
  identifi  |  simple navigation field 
   simple navigation field  =  role identifi   field identifier   select navigation  =  primary key value  |
   condition  |  primary key value   association identifi 
   primary key value  | lbrace  condition  rbrace
   primary key value  =  primary key value value 
   primary key value value 
   expand element  =  expand element   expand element 
   expand element  =  role identifier 
   regular condition condition 
   role identifier 
  
   regular condition condition 
  
   group expression 
  =  field identifi  |  role identifi   field identifi  |  expression  |  function 
   function parameter 
   order expression  =  expression  |
   field  |  field position integer 
  |  role
  identifi   field identifi  |  function 
   function parameter 
  
  important statement navigational expression clause
  expression identify collection element apply query
  collection view row view result traverse association view
  clause order support use navigation field e.g. role_customer customer_name
  use scalar function parameter navigation field
  example select_navigational order_id order_date concat customer company_name customer contact_name company_contact shipper company_name order expand customer shipper upper(customer city = london flatten level role primary key requirement navigational query traverse association view primary key define
  section primary key view administration guide explain define primary key view administration tool
  syntax statement create table syntax create view statement contain syntax vql statement define primary key create base derive view
  operator div use division operator navigation field expression use div allow navigational query traverse role
  cardinality multiple clause navigation field navigate endpoint cardinality n consider condition true row meet condition
  example select_navigational order_detail customer expand order_detail
  order_detail discount 
  0.2 query return row table customer associate row order_detail   discount great 0.2
  use navigation field meet condition condition navigation field traverse role
  e.g. support navigation field traverse role email
  position('acme.com email email  0 position('denodo.com email email
  condition unsupported use non navigation field city
  city = los angeles position('acme.com email email 
  0 limitation apply condition
  e.g. support field city = santiago de compostela position('acme.com email email
   0 filter condition role expand role navigate endpoint cardinality n possible filter collection result return role
  e.g. select_navigational order_detail customer expand order_detail discount  0.1
  query return row table customer
  value return order_detail discount great 0.1
  consider define filter condition role myrole use field endpoint myrole navigate
  use navigation field condition
  query like invalid condition select_navigational order_detail
  order_detail product_detail customer expand order_detail
  product_detail warehouse_id = 132
  product_detail define filter condition role myrole role appear expand clause define filter condition occurence myrole
  example select_navigational order_detail product_detail order_detail incidence_detail customer expand order_detail discount  0.1 product_detail order_detail discount  0.1 incidence_detail extra field select_navigational query return extra field addition specify select clause additional field association view
  value field register contain description involve role
  path expression relative clause allow traverse association row
  view primary key define result field primary_key
  provide path expression uniquely identify row result
  value field register structure association field
  case value rel attribute self path expression absolute
  use order add field order clause query project field
  aggregation group select_navigational support group involve expand field e.g. customer_role d
  example let view customer primary key field cid
  view order primary key field oid
  association customer_order role view customer final_order
  consider follow example valid navigational expression query explanation select_navigational customer return row customer
  select_navigational customer 1234 return row cid = 1234
  note client need know field form primary key
  select_navigational customer 1234 final_order return order customer cid = 1234 select_navigational customer 1234 final_order 123 product return product sell order oid = 123 customer cid = 1234 select_navigational customer 1234 final_order field   value return order match condition field   value customer cid = 1234
  remain clause select order fetch offset way select statement
  restful architecture
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/restful_architecture/restful_architecture#associations</field><field name="content">
  association association represent relationship view similar way join view link view
  section association administration guide explain concept detail
  section explain vql statement create modify delete association
  syntax create association statement create replace association
   identifi database  referential constraint
  folder =  folder literal 
  description =  association_description literal 
  endpoint  role_name identifi   view_name identifi   mult multiplicity 
  precondition  condition 
  description =  endpoint_description literal 
  endpoint  role_name identifi   view_name identifi 
   mult multiplicity 
  precondition  condition 
  description =  endpoint_description literal 
  add mapping  val1 mapping_value 
  =  val1
  mapping_value  +  mapping_value  =  field 
  |
   mapping_value   funcsymbol 
   value  |  value   funcsymbol 
   mapping_value  | case  mapping_value 
   compare_value value   result value 
   compare_value value   result value 
   result
  value 
  end | case  condition   result value   condition   result value 
   result value 
  end  multiplicity  = 0 1 | 1 |
  | +
   identifi database  = basic element vql statement  value  = rule form function  condition  = rule form function
  clause referential constraint mark association referential constraint section referential integrity association administration guide
  description clause description association second description endpoint association
  clause precondition represent role precondition end point section role precondition administration guide
  syntax alter association statement alter association  identifi  rename  new_name identifi 
  description =  desc literal 
  use alter association statement rename association and/or change description
  delete association execute statement drop assocation syntax drop statement
  association
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/restful_architecture/restful_architecture#syntax-of-the-create-association-statement</field><field name="content">
  syntax create association statement create replace association  identifi database  referential constraint
  folder =  folder literal 
  description =  association_description literal 
  endpoint  role_name identifi   view_name identifi   mult multiplicity 
  precondition  condition 
  description =  endpoint_description literal 
  endpoint  role_name identifi   view_name identifi 
   mult multiplicity 
  precondition  condition 
  description =  endpoint_description literal 
  add mapping  val1 mapping_value 
  =  val1
  mapping_value  +  mapping_value  =  field 
  |
   mapping_value   funcsymbol 
   value  |  value   funcsymbol 
   mapping_value  | case  mapping_value 
   compare_value value   result value 
   compare_value value   result value 
   result
  value 
  end | case  condition   result value   condition   result value 
   result value 
  end  multiplicity  = 0 1 | 1 |
  | +
  syntax create association statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/restful_architecture/restful_architecture#syntax-of-the-alter-association-statement</field><field name="content">
  syntax alter association statement alter association  identifi  rename  new_name identifi 
  description =  desc literal 
  syntax alter association statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/restful_architecture/restful_architecture#navigational-queries</field><field name="content">
  navigational query select_navigational execute query allow navigate association define view
  want identify particular row view primary key obtain row view link row view way join view
  define association view runtime use select_navigational traverse association
  define association provide benefit join query simple
  client need know view association
  client need know build valid join condition link view
  change view association condition association affect client
  example association view customer   order application execute statement select_navigational obtain order particular customer know field join condition view hold customer order
  drawback association instead join join allow link view complex way
  example consider view customer primary key field cid
  view participate association role endpoint customer view order
  select_navigational customer 2 order
  o_description like bandages% query return order customer cid = 2 description start bandage
  equivalent select query complex need know field build join condition
  e.g. select order
  customer inner join order customer.cid = orders.cid customer.cid = 2 orders.o_description like bandages% syntax select_navigational statement navigational query select_navigational
   navigation field   view identifi 
   select navigation 
  expand  expand element 
   extend condition 
  group  group expression 
   group expression 
  
   extend condition 
  order  order expression 
  asc | desc
   order expression 
  asc | desc
  condition mapping evaluation
  flatten level role
  offset  number 
  row | row
  fetch |
   number  row | row |
  limit
   number 
  context  context information 
  
   context information 
  trace  navigation field  =  navigation field 
   navigation field 
   navigation field  = |  field identifi   alia identifi 
  |  role identifi 
  |  role identifi   field identifi  |  function 
   function parameter 
   alia identifi  |  expression   function parameter  =  field
  identifi  |  simple navigation field 
   simple navigation field  =  role identifi   field identifier   select navigation  =  primary key value  |
   condition  |  primary key value   association identifi 
   primary key value  | lbrace  condition  rbrace
   primary key value  =  primary key value value 
   primary key value value 
   expand element  =  expand element   expand element 
   expand element  =  role identifier 
   regular condition condition 
   role identifier 
  
   regular condition condition 
  
   group expression 
  =  field identifi  |  role identifi   field identifi  |  expression  |  function 
   function parameter 
   order expression  =  expression  |
   field  |  field position integer 
  |  role
  identifi   field identifi  |  function 
   function parameter 
  
  important statement navigational expression clause
  expression identify collection element apply query
  collection view row view result traverse association view
  clause order support use navigation field e.g. role_customer customer_name
  use scalar function parameter navigation field
  example select_navigational order_id order_date concat customer company_name customer contact_name company_contact shipper company_name order expand customer shipper upper(customer city = london flatten level role primary key requirement navigational query traverse association view primary key define
  section primary key view administration guide explain define primary key view administration tool
  syntax statement create table syntax create view statement contain syntax vql statement define primary key create base derive view
  operator div use division operator navigation field expression use div allow navigational query traverse role
  cardinality multiple clause navigation field navigate endpoint cardinality n consider condition true row meet condition
  example select_navigational order_detail customer expand order_detail
  order_detail discount 
  0.2 query return row table customer associate row order_detail   discount great 0.2
  use navigation field meet condition condition navigation field traverse role
  e.g. support navigation field traverse role email
  position('acme.com email email  0 position('denodo.com email email
  condition unsupported use non navigation field city
  city = los angeles position('acme.com email email 
  0 limitation apply condition
  e.g. support field city = santiago de compostela position('acme.com email email
   0 filter condition role expand role navigate endpoint cardinality n possible filter collection result return role
  e.g. select_navigational order_detail customer expand order_detail discount  0.1
  query return row table customer
  value return order_detail discount great 0.1
  consider define filter condition role myrole use field endpoint myrole navigate
  use navigation field condition
  query like invalid condition select_navigational order_detail
  order_detail product_detail customer expand order_detail
  product_detail warehouse_id = 132
  product_detail define filter condition role myrole role appear expand clause define filter condition occurence myrole
  example select_navigational order_detail product_detail order_detail incidence_detail customer expand order_detail discount  0.1 product_detail order_detail discount  0.1 incidence_detail extra field select_navigational query return extra field addition specify select clause additional field association view
  value field register contain description involve role
  path expression relative clause allow traverse association row
  view primary key define result field primary_key
  provide path expression uniquely identify row result
  value field register structure association field
  case value rel attribute self path expression absolute
  use order add field order clause query project field
  aggregation group select_navigational support group involve expand field e.g. customer_role d
  example let view customer primary key field cid
  view order primary key field oid
  association customer_order role view customer final_order
  consider follow example valid navigational expression query explanation select_navigational customer return row customer
  select_navigational customer 1234 return row cid = 1234
  note client need know field form primary key
  select_navigational customer 1234 final_order return order customer cid = 1234 select_navigational customer 1234 final_order 123 product return product sell order oid = 123 customer cid = 1234 select_navigational customer 1234 final_order field   value return order match condition field   value customer cid = 1234
  remain clause select order fetch offset way select statement
  navigational query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/restful_architecture/restful_architecture#syntax-of-the-select-navigational-statement-navigational-queries</field><field name="content">
  syntax select_navigational statement navigational query select_navigational  navigation field   view identifi   select navigation 
  expand  expand element 
   extend condition 
  group  group expression 
   group expression 
  
   extend condition 
  order  order expression 
  asc | desc
   order expression 
  asc | desc
  condition mapping evaluation
  flatten level role
  offset  number 
  row | row
  fetch |
   number  row | row |
  limit
   number 
  context  context information 
  
   context information 
  trace  navigation field  =  navigation field 
   navigation field 
   navigation field  = |  field identifi   alia identifi 
  |  role identifi 
  |  role identifi   field identifi  |  function 
   function parameter 
   alia identifi  |  expression   function parameter  =  field
  identifi  |  simple navigation field 
   simple navigation field  =  role identifi   field identifier   select navigation  =  primary key value  |
   condition  |  primary key value   association identifi 
   primary key value  | lbrace  condition  rbrace
   primary key value  =  primary key value value 
   primary key value value 
   expand element  =  expand element   expand element 
   expand element  =  role identifier 
   regular condition condition 
   role identifier 
  
   regular condition condition 
  
   group expression 
  =  field identifi  |  role identifi   field identifi  |  expression  |  function 
   function parameter 
   order expression  =  expression  |
   field  |  field position integer 
  |  role
  identifi   field identifi  |  function 
   function parameter 
  syntax select navigational statement navigational query
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/help_command/help_command#help-command</field><field name="content">
  help command virtual dataport include help statement help return syntax vql command
  execute help obtain list command
  execute help  command  obtain syntax command
  example help create view
  help command
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/version_control_systems_integration_commands#version-control-systems-integration-commands</field><field name="content">
  version control system integration command version control system integration vcs configure activate globally current database order execute vcs relate command section version control system integration administration guide detailed information vcs
  note recommend vcs relate command manually ci cd process command design administration tool design studio
  statement work centralized version control system statement work git command environment management version control command
  version control system integration command
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#statements-to-work-with-centralized-version-control-systems</field><field name="content">
  statement work centralized version control system section describe command require work centralized version control system support virtual dataport
  subversion microsoft tfs repository
  note recommend vcs relate command manually ci cd process command design administration tool design studio
  modify programmatically vcs configuration denodo database check section create modifying virtual dataport database
  vcscommit vcsupdate vcs"content" vcsshow revision vcscommit vcscommit check specify element configure version control repository dependency
  element exist command commit element local change dependency
  syntax vcscommit statement vcscommit dbelement  element path literal  simulate vcscommit noconflict dbelement  element path literal  simulate vcscommit dbelement  element path literal  force
  logmessage  log message literal 
  vcscommit noconflict dbelement  element path literal  logmessage  log message literal 
  mandatory specify element path
  path refer database folder single element
  path syntax follow database /databases/databasename  example /database db1
  folder note end /databases/databasename/folder.foldername1/[folder.foldernamen/
  example /database db1 folder
  folder 1 folder
  folder 2/. single element /databases/databasename/[folder.foldernamen/]*elementtype/[elementsubtype/]elementname 
  example /database db1 folder
  folder 1 view base view
  possible element type view view base view datasource association webservice widget storedprocedure listener
  possible element sub type apply datum source custom df itp jdbc json ldap odbc olap saperp ws xml
  jar i18n map special case syntax path different jar /extensions jars/jarname  i18n map /maps i18n/mapname 
  check database folder "content" "content" dependency check commit case database associate jms listener include
  clause dbelement indicate commit element belong database element common database i18n map jar
  optional log message specify logmessage clause
  nocommit clause disable detection conflict
  add clause increase performance statement
  hand conflict operation fail
  case user execute statement force clause
  check operation fail conflict find
  case vcscommit return list conflict element i.e. element date contain local change
  force clause conflict resolve override remote change local
  alternatively simulate clause command attempt actual change remote repository inform user conflict find file check actually execute command vcsupdate vcsupdate check specify element configure version control repository dependency "content" case folder database load server
  element exist command update dependency
  syntax vcsupdate statement vcsupdate dbelement  element path literal  force
  revision  revision literal 
  drop vcsupdate noconflict dbelement  element path literal  force
  revision  revision literal 
  mandatory specify element path database folder single element path syntax vcscommit
  case database associate jms listener check update necessary
  clause dbelement indicate update element belong database element common database i18n map jar
  revision specify revision clause revision
  nocommit clause disable detection conflict
  add clause increase performance statement
  hand conflict operation fail
  case user execute statement force clause
  check operation fail conflict
  case vcsupdate return list conflict element i.e. element date contain local change
  force clause conflict resolve override remote change local
  check operation fail detect deletion element require complete operation
  case vcsupdate return list element need delete e.g. element exist specify revision
  force drop clause require deletion perform
  vcs"content" vcs"content" return element actual file contain database folder configure version control repository
  obtain list database contain repository
  syntax vcs"content" statement vcs"content"  element path literal  file | list database path database folder specify path syntax vcscommit order obtain list element contain
  file clause list actual file instead vdp element
  vcs"content" list database store list database contain repository
  vcsshow vcsshow return vql local element vql element store vcs server
  work element version control
  syntax vcsshow statement vcsshow  path literal  revision  revision literal 
  with_dependencie example example vcsshow vcsshow /databases customer360 view p_view1 with_dependencie section vcscommit describe syntax path
  obtain remote version element revision specify revision clause revision
  add with_dependencie vcsshow return element element depend revision revision return list exist revision specify element element path syntax vcsupdate
  syntax revision statement revision  path literal 
  statement work centralized version control system
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#vcscommit</field><field name="content">
  vcscommit vcscommit check specify element configure version control repository dependency
  element exist command commit element local change dependency
  syntax vcscommit statement vcscommit dbelement  element path literal  simulate vcscommit noconflict dbelement  element path literal  simulate vcscommit dbelement  element path literal  force
  logmessage  log message literal 
  vcscommit noconflict dbelement  element path literal  logmessage  log message literal 
  mandatory specify element path
  path refer database folder single element
  path syntax follow database /databases/databasename  example /database db1
  folder note end /databases/databasename/folder.foldername1/[folder.foldernamen/
  example /database db1 folder
  folder 1 folder
  folder 2/. single element /databases/databasename/[folder.foldernamen/]*elementtype/[elementsubtype/]elementname 
  example /database db1 folder
  folder 1 view base view
  possible element type view view base view datasource association webservice widget storedprocedure listener
  possible element sub type apply datum source custom df itp jdbc json ldap odbc olap saperp ws xml
  jar i18n map special case syntax path different jar /extensions jars/jarname  i18n map /maps i18n/mapname 
  check database folder "content" "content" dependency check commit case database associate jms listener include
  clause dbelement indicate commit element belong database element common database i18n map jar
  optional log message specify logmessage clause
  nocommit clause disable detection conflict
  add clause increase performance statement
  hand conflict operation fail
  case user execute statement force clause
  check operation fail conflict find
  case vcscommit return list conflict element i.e. element date contain local change
  force clause conflict resolve override remote change local
  alternatively simulate clause command attempt actual change remote repository inform user conflict find file check actually execute command
  vcscommit
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#syntax-of-the-vcscommit-statement</field><field name="content">
  syntax vcscommit statement vcscommit dbelement  element path literal  simulate vcscommit noconflict dbelement  element path literal  simulate vcscommit dbelement  element path literal  force
  logmessage  log message literal 
  vcscommit noconflict dbelement  element path literal  logmessage  log message literal 
  syntax vcscommit statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#vcsupdate</field><field name="content">
  vcsupdate vcsupdate check specify element configure version control repository dependency "content" case folder database load server
  element exist command update dependency
  syntax vcsupdate statement vcsupdate dbelement  element path literal  force
  revision  revision literal 
  drop vcsupdate noconflict dbelement  element path literal  force
  revision  revision literal 
  mandatory specify element path database folder single element path syntax vcscommit
  case database associate jms listener check update necessary
  clause dbelement indicate update element belong database element common database i18n map jar
  revision specify revision clause revision
  nocommit clause disable detection conflict
  add clause increase performance statement
  hand conflict operation fail
  case user execute statement force clause
  check operation fail conflict
  case vcsupdate return list conflict element i.e. element date contain local change
  force clause conflict resolve override remote change local
  check operation fail detect deletion element require complete operation
  case vcsupdate return list element need delete e.g. element exist specify revision
  force drop clause require deletion perform
  vcsupdate
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#syntax-of-the-vcsupdate-statement</field><field name="content">
  syntax vcsupdate statement vcsupdate dbelement  element path literal  force
  revision  revision literal 
  drop vcsupdate noconflict dbelement  element path literal  force
  revision  revision literal 
  syntax vcsupdate statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#vcs"content"s</field><field name="content">
  vcs"content" vcs"content" return element actual file contain database folder configure version control repository
  obtain list database contain repository
  syntax vcs"content" statement vcs"content"  element path literal  file | list database path database folder specify path syntax vcscommit order obtain list element contain
  file clause list actual file instead vdp element
  vcs"content" list database store list database contain repository
  vcs"content"
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#syntax-of-the-vcs"content"s-statement</field><field name="content">
  syntax vcs"content" statement vcs"content"  element path literal  file | list database
  syntax vcs"content" statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#vcsshow</field><field name="content">
  vcsshow vcsshow return vql local element vql element store vcs server
  work element version control
  syntax vcsshow statement vcsshow  path literal  revision  revision literal 
  with_dependencie example example vcsshow vcsshow /databases customer360 view p_view1 with_dependencie section vcscommit describe syntax path
  obtain remote version element revision specify revision clause revision
  add with_dependencie vcsshow return element element depend
  vcsshow
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#syntax-of-the-vcsshow-statement</field><field name="content">
  syntax vcsshow statement vcsshow  path literal  revision  revision literal 
  with_dependencie
  syntax vcsshow statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#example-of-using-vcsshow</field><field name="content">
  example vcsshow vcsshow /databases customer360 view p_view1 with_dependencie
  example vcsshow
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#revisions</field><field name="content">
  revision revision return list exist revision specify element element path syntax vcsupdate
  syntax revision statement revision  path literal 
  revision
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_centralized_version_control_systems/statements_to_work_with_centralized_version_control_systems#syntax-of-the-revisions-statement</field><field name="content">
  syntax revision statement revision  path literal 
  syntax revision statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#statements-to-work-with-git</field><field name="content">
  statement work git section describe command require work git
  command different subversion microsoft tfs git distribute version control system centralized system
  note recommend vcs relate command manually ci cd process command design administration tool design studio
  modify programmatically vcs configuration denodo database check section create modifying virtual dataport database
  dvcscommit dvcspush dvcspull dvcsrevert dvcscommit dvcscommit check specify element version control repository dependency element modify
  syntax dvcscommit statement dvcscommit  element path literal  logmessage  log message literal 
  optionally add message commit logmessage clause
  dvcspush dvcspush transfer commit database local repository remote repository
  syntax dvcspush statement dvcspush  database_name literal  dvcspull dvcspull merge commit database remote repository local repository
  syntax dvcspull statement dvcspull  database_name literal  dvcsrevert dvcsrevert reset local repository database specific commit
  revert commit start reach select commit
  syntax dvcsrevert statement dvcsrevert  database literal   commit d literal 
  statement work git
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#dvcscommit</field><field name="content">
  dvcscommit dvcscommit check specify element version control repository dependency element modify
  syntax dvcscommit statement dvcscommit  element path literal  logmessage  log message literal 
  optionally add message commit logmessage clause
  dvcscommit
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#syntax-of-the-dvcscommit-statement</field><field name="content">
  syntax dvcscommit statement dvcscommit  element path literal  logmessage  log message literal 
  syntax dvcscommit statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#dvcspush</field><field name="content">
  dvcspush dvcspush transfer commit database local repository remote repository
  syntax dvcspush statement dvcspush  database_name literal 
  dvcspush
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#syntax-of-the-dvcspush-statement</field><field name="content">
  syntax dvcspush statement dvcspush  database_name literal 
  syntax dvcspush statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#dvcspull</field><field name="content">
  dvcspull dvcspull merge commit database remote repository local repository
  syntax dvcspull statement dvcspull  database_name literal 
  dvcspull
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#syntax-of-the-dvcspull-statement</field><field name="content">
  syntax dvcspull statement dvcspull  database_name literal 
  syntax dvcspull statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#dvcsrevert</field><field name="content">
  dvcsrevert dvcsrevert reset local repository database specific commit
  revert commit start reach select commit
  syntax dvcsrevert statement dvcsrevert  database literal   commit d literal 
  dvcsrevert
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/statements_to_work_with_git/statements_to_work_with_git#syntax-of-the-dvcsrevert-statement</field><field name="content">
  syntax dvcsrevert statement dvcsrevert  database literal   commit d literal 
  syntax dvcsrevert statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/commands_for_environment_management/commands_for_environment_management#commands-for-environment-management</field><field name="content">
  command environment management note recommend vcs relate command manually ci cd process command design administration tool design studio
  environment vcs integration context consist optional description section environment management administration guide
  follow figure syntax create modify delete environment list environment available configure version control repository syntax create modify delete list available environment create environment  identifi 
   description literal 
  alter environment  identifi 
   description literal  drop environment  identifi  list environment vcs configure activate order execute environment relate command
  addition global administrator user allow create alter drop environment
  create environment property file like environment contain environment description check vcs repository configure vdp server
  environment file locate  path_to_remote_repository/environment remote repository e.g. svn://svn.acme.com/denodorepo/trunk/environment
  drop environment property file associate environment remove correspond remote repository
  command environment management
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/commands_for_environment_management/commands_for_environment_management#syntax-to-create-modify-delete-and-list-the-available-environments</field><field name="content">
  syntax create modify delete list available environment create environment  identifi 
   description literal 
  alter environment  identifi 
   description literal  drop environment  identifi  list environment
  syntax create modify delete list available environment
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/other_vcs_commands/other_vcs_commands#other-version-control-commands</field><field name="content">
  version control command section describe command common support version control system
  note recommend vcs relate command manually ci cd process command design administration tool design studio
  vcsdiscard vcsdiscard vcsdiscard revert uncommitte change select element
  syntax vcsdiscard statement vcsdiscard  element path literal  with_global_elements discard change database level database contain modify element depend modify global element operation abort optional with_global_element clause include command
  section discard administration guide provide detail operation
  version control command
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/other_vcs_commands/other_vcs_commands#vcsdiscard</field><field name="content">
  vcsdiscard vcsdiscard revert uncommitte change select element
  syntax vcsdiscard statement vcsdiscard  element path literal  with_global_elements discard change database level database contain modify element depend modify global element operation abort optional with_global_element clause include command
  section discard administration guide provide detail operation
  vcsdiscard
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/version_control_systems_integration_commands/other_vcs_commands/other_vcs_commands#syntax-of-the-vcsdiscard-statement</field><field name="content">
  syntax vcsdiscard statement vcsdiscard  element path literal  with_global_elements
  syntax vcsdiscard statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/resource_manager#resource-manager</field><field name="content">
  resource manager environment multiple concurrent user session run query user session importance
  want priority query execute transactional application need immediate response query execute generate daily report
  resource manager allow classify session group base attribute session allocate resource group way optimize resource utilization application environment
  recommend manage resource manager administration tool
  section resource manager administration guide provide explain resource manager work use administration tool
  section list vql command relate management plan rule resource manager
  manage plan resource manager manage rule resource manager
  resource manager
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_plans_of_the_resource_manager/managing_the_plans_of_the_resource_manager#managing-the-plans-of-the-resource-manager</field><field name="content">
  manage plan resource manager section syntax command create modify delete plan resource manager
  syntax create resource_manager plan statement create replace resource_manager
  plan  identifi 
  description
  =  description literal 
  condition  condition  action  literal  parameter  parameter 
  
  action  literal  parameter  parameter 
  
  condition  condition  action  literal  parameter  parameter 
  
  action  literal  parameter  parameter 
  
  
   parameter  =  param literal 
  =  value 
   param literal 
  =
   value 
  
   condition  = rule form function  identifier  = basic element vql statement
   literal  = basic element vql statement  value  = rule form function
  syntax alter resource_manager plan statement alter resource_manager plan  identifi 
  
  rename  identifi 
  description =  description literal 
  condition  condition  action  literal  parameter  parameter  + list exist plan run list resource_manager plan
  drop plan execute drop resource_manager plan syntax drop resource_manager plan statement drop resource_manager
  plan exist
   identifi  cascade
  delete plan rule associate add cascade clause
  cascade clause delete plan rule associate
  manage plan resource manager
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_plans_of_the_resource_manager/managing_the_plans_of_the_resource_manager#syntax-of-the-create-resource-manager-plan-statement</field><field name="content">
  syntax create resource_manager plan statement create replace resource_manager
  plan  identifi 
  description
  =  description literal 
  condition  condition  action  literal  parameter  parameter 
  
  action  literal  parameter  parameter 
  
  condition  condition  action  literal  parameter  parameter 
  
  action  literal  parameter  parameter 
  
  
   parameter  =  param literal 
  =  value 
   param literal 
  =
   value 
  syntax create resource manager plan statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_plans_of_the_resource_manager/managing_the_plans_of_the_resource_manager#syntax-of-the-alter-resource-manager-plan-statement</field><field name="content">
  syntax alter resource_manager plan statement alter resource_manager plan  identifi 
  
  rename  identifi 
  description =  description literal 
  condition  condition  action  literal  parameter  parameter  +
  syntax alter resource manager plan statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_plans_of_the_resource_manager/managing_the_plans_of_the_resource_manager#syntax-of-the-drop-resource-manager-plan-statement</field><field name="content">
  syntax drop resource_manager plan statement drop resource_manager plan
  exist
   identifi  cascade
  syntax drop resource manager plan statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_rules_of_the_resource_manager/managing_the_rules_of_the_resource_manager#managing-the-rules-of-the-resource-manager</field><field name="content">
  manage rule resource manager section syntax command create modify delete rule resource manager
  syntax create resource_manager rule statement create replace resource_manager rule  identifi 
  description
  =  description literal 
  condition  condition  resource_manager
  plan  identifi   condition  = rule form function  identifier  = basic element vql statement syntax alter resource_manager rule statement alter resource_manager rule  identifi 
  rename  new_name identifi 
  description =  description literal 
  condition  condition 
  resource_manager plan  identifi 
  list exist rule run list resource_manager rule
  drop plan execute drop resource_manager rule syntax drop resource_manager rule statement drop resource_manager
  rule
  exist
   identifi 
  manage rule resource manager
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_rules_of_the_resource_manager/managing_the_rules_of_the_resource_manager#syntax-of-the-create-resource-manager-rule-statement</field><field name="content">
  syntax create resource_manager rule statement create replace resource_manager rule  identifi 
  description
  =  description literal 
  condition  condition  resource_manager
  plan  identifi 
  syntax create resource manager rule statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_rules_of_the_resource_manager/managing_the_rules_of_the_resource_manager#syntax-of-the-alter-resource-manager-rule-statement</field><field name="content">
  syntax alter resource_manager rule statement alter resource_manager rule  identifi 
  
  rename  new_name identifi 
  description =  description literal 
  condition  condition 
  resource_manager plan  identifi 
  syntax alter resource manager rule statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/resource_manager/managing_the_rules_of_the_resource_manager/managing_the_rules_of_the_resource_manager#syntax-of-the-drop-resource-manager-rule-statement</field><field name="content">
  syntax drop resource_manager rule statement drop resource_manager rule
  exist
   identifi 
  syntax drop resource manager rule statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/advanced_characteristics#advanced-characteristics</field><field name="content">
  advanced characteristic section describe advanced characteristic virtual dataport necessary common administration task interest certain case
  management compound value change set virtual dataport web container cache configure swap policy manage internationalization configuration replace i18n map delete i18n map execution context query interpolation string add variable selection condition getvar setvar
  advanced characteristic
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/management_of_compound_values#management-of-compound-values</field><field name="content">
  management compound value virtual dataport class datum type simple type compound type
  compound type array register represent hierarchical datum virtual dataport base relation view
  note virtual dataport array type element view subview
  array register type associate
  subelement contain array belong register datum type
  field register schema subview model
  important bear mind apply operator subelement compound field
  attribute value view server uniquely identify tuple expression uri
  uri associate value attribute belong simple type simply consist attribute
  hand value compound attribute represent tree leave atomic value i.e. belong simple datum type
  type non leaf node tree array array type arch run node represent subelement comprise array belong register datum type
  arch tag position index array subelement indicate write symbol   
  register register type arch run node represent subelement comprise register subelement relate field record belong different datum type
  arch tag field
  furthermore arch attribute indicate root tree
  tree uri identify node obtain start root tree concatenate separate character   case array index indicate index value bracket different arch arrive require node
  finally attribute concatenate begin string
  furthermore uri array type node index specify uri indicate list value array
  distinguish type uris indicate simple type register type value
  type uris select clause query group attribute group clause
  addition simple type value point uri manner simple type attribute query statement clause select
  group etc
  possible use row constructor section condition compound value build compound value use right condition
  case operator =   allow datum type uris right leave condition compatible tree equal arc
  indicate list value
  uris correspond array value subrelation array element tuple schema tuple define register element field associate array
  type uris appear follow scenario condition clause uris appear leave condition
  case condition evaluate condition subrelation model uri
  flatten view clause
  section flatten view flatten datum structure
  aggregation function section use aggregation function support type uris
  management compound value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#processing-of-compound-types-example</field><field name="content">
  processing compound type example imagine want define relation model book title author
  attribute title simple type text author compound type
  specifically author author want represent surname list contact address
  explain early array type model subrelation necessary indicate register type schema relation
  subrelation author associate register type subattribute simple type surname compound attribute array type contain list contact address contact
  contact represent subrelation schema comprise subattribute mail address mail simple type address register comprise subattribute
  street place country
  tree type author tree compound element
  datum type represent element type author create follow statement create type address register street text city text country text create type contactaddress register mail text address address create type contactaddressarray array contactaddress create type author register text surname text contactaddress contactaddressarray create type authorarray array author tree compound element tuple compound element example tuple view internal representation tuple compound element title author book surname contactadress 1 surname1 mail adress author1@authors.com street city country street1 city1 country1 mail adress author2@authors.com street city country street2 city2 country2
  surname contactadress
  3 surname3 mail adress author3@authors.com street city country street3 city3 country3 mail adress author4@authors.com
  street city country street4 city4 country4 title author book
  surname contactadress
  1 surname1 mail adress author1@authors.com street city country street1 city1 country1 mail adress author2@authors.com street city country street2 city2 country2 surname contactadress
  3 surname3 mail adress author3@authors.com street city country street3 city3 country3 mail adress author4@authors.com
  street city country street4 city4 country4 structure value tree tree compound type value
  tree compound type value  
  base relation model relation create create base relation compound type create table
  book i18n es_euro title text search author authorarray necessary create wrapper relation
  note schema datum return wrapper compatible schema relation case mean wrapper require datum return form compound value
  note strongly recommend use administration tool import datum source create base view avoid create compound type wrapper base view manually
  example follow figure vql sentence create itpilot wrapper obtain require datum
  note output schema define compatible relation create wrapper compound type create wrapper itp book_sm1 outputschema title author
  array author
  register surname contactaddress array contactaddress register mail address array address register street city country
  wrapper definition wrapper create search method define book relation section modify base view
  case query restriction define uris indicate simple datum type consistent fact compound type attribute consider subrelation
  possible add restriction uris indicate compound type case remember operand right condition build constructor row operator =  
  follow sentence add possible search method note restriction include compound uri author.contactaddress add search method compound type alter table book add searchmethod book_sm1 constraint add title nos zero add author.name nos zero add author.surname nos zero
  add author.contactaddress nos zero add author.contactaddress.mail nos zero add author.contactaddress.address.street nos zero add author.contactaddress.address.city nos zero
  add author.contactaddress.address.country nos zero outputlist title author wrapper itp book
  note specification uris compound attribute condition query order avoid ambiguity table attribute attribute specify parenthesis
  finally example query relation obtain title author book contain title word java
  select title list((author).name
  authorlist book
  title like java% group title find tile list contact address author book contain title word java
  select title list((author).contactaddress authorlist book title like java% group title find title e mail address author book contain title word java
  select title list((author).contactaddress[0].mail
  authorlist book
  title like java% group title find title author book contain word java title author e mail address contain word .es
  select title list((author).name
  authorlist book
  title like java%
  author).contactaddress.mail like .es% group title find title author book contain word java title author address street real
  select title list((author).name
  authorlist book
  title like java% author).contactaddress.address.street like real% group title find book write author single contact address e mail john@mail.com live real street city madrid spain
  select title author book
  author).contactaddress = row('john@mail.com',{row('real madrid spain
  processing compound type example
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#trees-of-compound-elements</field><field name="content">
  tree compound element
  tree compound element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#tuple-with-compound-elements</field><field name="content">
   
  tuple compound element
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#tree-of-compound-type-values</field><field name="content">
  tree compound type value
  tree compound type value
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#creating-a-base-relation-with-compound-types</field><field name="content">
  create base relation compound type create table book i18n es_euro title text search author authorarray
  create base relation compound type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#creating-a-wrapper-with-compound-types</field><field name="content">
  create wrapper compound type create wrapper itp book_sm1 outputschema title author array author
  register surname contactaddress array contactaddress register mail address array address register street city country
  wrapper definition
  create wrapper compound type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/management_of_compound_values/processing_of_compound_types_example#adding-a-search-method-with-compound-types</field><field name="content">
  add search method compound type alter table book add searchmethod book_sm1 constraint add title nos zero add author.name nos zero add author.surname nos zero add author.contactaddress nos zero add author.contactaddress.mail nos zero add author.contactaddress.address.street nos zero add author.contactaddress.address.city nos zero
  add author.contactaddress.address.country nos zero outputlist title author wrapper itp book
  add search method compound type
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/changing_settings/changing_settings#changing-settings-of-virtual-dataport-and-the-web-container</field><field name="content">
  change set virtual dataport web container command set add modifie delete property configuration file virtual dataport  denodo_home/conf vdp vdbconfiguration.propertie
  command webcontainer set add modify property configuration file web container denodo  denodo_home/resource apache tomcat conf tomcat.propertie
  change set virtual dataport administration tool dialog administration  server configuration
  setting involve modify file
  edit file directly strongly recommend command set webcontainer set instead
  benefit command modify file directly change value property value apply immediately true property
  change file directly restart virtual dataport server apply change
  enable feature store metadata external database new value propagate necessary server share external database
  convenient execute command vql shell design studio administration tool tool connect ssh host server run
  change memory allocate virtual dataport server directly file execute script  denodo_home bin regeneratescript
  modify command set need execute script restart virtual dataport apply change
  syntax command set add replace property set  property literal 
  =  value literal  remove property set  property literal  = null syntax command webcontainer set webcontainer set  property literal 
  =  value literal  consideration change value certain property need restart virtual dataport server
  new value apply immediately
  documentation property mention
  administrator execute command set webcontainer set
  example example 1 execute allocate 4 gigabyte memory virtual dataport server change set java virtual machine set java.env
  denodo_opts_start
  = -server -xms4
  g -xmx4 g
  -xx:+disableexplicitgc -xx:+useconcmarksweepgc -xx newratio=4 -xx cmsinitiatingoccupancyfraction=60 -xx reservedcodecachesize=256 m change value property java.env.denodo_opts_start invoke script  denodo_home bin regeneratescript
  change property directly file change apply execute script restart
  need restart virtual dataport server apply change
  example 2 execute allocate 2 gigabyte memory web container denodo change set java virtual machine webcontainer set java.env
  denodo_opts_start
  = -xmx2 g -dorg.apache.tomcat.util.buf
  udecoder
  allow_encoded_slash = true -dorg.apache.catalina.connector.coyoteadapter.allow_backslash = true need restart web container apply change property web container
  example 3 delete property configuration virtual dataport
  set com.denodo.vdb.util.tablemanagement.sql.insertion.hdfsinsertworker.parquet.compression = null note remove property value null quote
  quote value property character string null
  webcontainer set support add modify property delete
  change setting virtual dataport web container
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/changing_settings/changing_settings#syntax-of-the-command-set</field><field name="content">
  syntax command set add replace property set  property literal 
  =  value literal  remove property set  property literal  = null
  syntax command set
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/changing_settings/changing_settings#syntax-of-the-command-webcontainer-set</field><field name="content">
  syntax command webcontainer set webcontainer set  property literal  =  value literal 
  syntax command webcontainer set
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/using_the_cache/using_the_cache#using-the-cache</field><field name="content">
  cache enable cache system cache option view command modify base view alter table section query capability search method wrapper modify view alter view section modify derive view
  enable tuple obtain result execute query view store cache
  use alter database command section create modifying virtual dataport database establish default configuration cache view belong certain database
  note cache activate view run periodic preload source datum execute query obtain datum want preload
  virtual dataport follow cache mode partial query execute view server check cache contain datum require answer query
  query datum source
  mode additional clause exact type cache cache store result query
  query execute entry query cache expire ttl reach datum return client retrieve cache datum source
  important partial cache exact clause appropriate certain type non relational source
  preload cache datum reload manually execute special query instead automatically reload server
  view use cache mode explicitly preload cache special query
  preloade datum retrieve cache check query load cache retrieve datum source
  mean server retrieve datum source preloade datum source
  incremental
  incremental mode subtype cache mode
  mode enable query view incremental query
  query view merge result obtain cache recent datum retrieve source
  main benefit mode query return fully date result retrieve result set datum source row add change cache refresh
  section cache mode administration guide explain detail cache mode work
  disable cache view use parameter cache command alter table base view alter view derive view
  cache enable partial set value parameter timetoliveincache
  value number second datum expire default
  time live datum define database view belong
  noexpire
  datum cache expire
     cache maintenance task remove expire invalid row cache database
  section cache maintenance task administration guide explain detail task
  behavior thread control parameter maintenance maintainerperiod maintenance server spawn cache maintenance thread
  option expire row cache actually delete database
  mark expire return result query
  maintenance server spawn cache maintenance thread maintainerperiod second
  cache
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/using_the_cache/cache_invalidation#cache-invalidation</field><field name="content">
  cache invalidation cache view invalidate alter vql sentence section modify derive view
  type cache invalidation   invalidation remove cache datum view
     partial invalidation remove cache datum verify specify condition
  invalidation type support cascade option cause operation propagate view participate definition view specify invalidation sentence
  sentence invalidate cache sampleview view view participate sampleview definition alter view sampleview cache invalidate cascade sentence partial invalidation
  tuple match specify condition invalidate
  case cascade option sentence affect sampleview view alter view sampleview cache invalidate field1 = value cache view   cache invalidate cascade
  addition invalidate cascade cache view cache subviews cache mode invalidate
  store procedure cache_"content" return information "content" cache
  section cache_"content" provide detail procedure syntax information return
  cache invalidation
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/using_the_cache/displaying_the_"content"s_of_the_cache#displaying-the-"content"s-of-the-cache</field><field name="content">
  display "content" cache query datum cache server store query pattern later know query solve datum store cache
  denodo store procedure cache_"content" return information query pattern store cache
  section cache module administration guide information query pattern
  syntax cache_"content" procedure cache_"content"  database string   view stre 
  output procedure follow field describe query pattern querypatternid d query pattern
  databasename database viewname view
  numcondition number condition
  condition list condition
  projectedfield list project field
  blank mean field view project
  expirationdate expiration date query pattern
  status query pattern
  value valid invalid processing
  sample invocation cache_"content" procedure cache_"content"('admin incidence
  input parameter view null procedure return information query pattern database
  input parameter database null procedure return information query pattern database currently connect
  procedure execute administrator local administrator database obtain query pattern
  display "content" cache
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/using_the_cache/displaying_the_"content"s_of_the_cache#syntax-of-the-cache-"content"-procedure</field><field name="content">
  syntax cache_"content" procedure cache_"content"  database string   view stre 
  syntax cache "content" procedure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/using_the_cache/displaying_the_"content"s_of_the_cache#sample-invocation-of-the-cache-"content"-procedure</field><field name="content">
  sample invocation cache_"content" procedure cache_"content"('admin incidence
  sample invocation cache "content" procedure
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/configuring_swapping_policies/configuring_swapping_policies#configuring-swapping-policies</field><field name="content">
  configure swap policy virtual dataport provide way avoid memory overflow deal huge dataset stop retrieve datum source size datum process exceed certain limit
  enable swapping mechanism store secondary storage intermediate result execution query size exceed certain limit
  swap intermediate result sort operation query order involve
  section configure memory usage swap policy administration guide explain method detail change default value set control
  change value follow element execute certain vql statement specific database statement alter database section create modifying virtual dataport database
  specific base view derive view statement alter table section query capability search method wrapper alter view section modify derive view respectively
  query add appropriate parameter context clause statement
  note modify swap configuration view database
  time change configuration provide improvement performance query certain value negative effect
  graphical support change set database view
  example example 1 modify memory usage parameter database set follow parameter maximum size memory node 100 maximum size block store swap 150 maximum size memory intermediate result 50 alter database test memoryconfig
  swap swapsize 100 swapblocksize 150 maxresultsize 50 example 2 disable swap view alter view v swap example 3 enable swap view set max size 100 mb result maximum size 25 mb alter view v swap swapsize 100 maxresultsize 25 example 4 run query disabling swap
  add attribute swap context clause query swap disable enable view
  value parameter swap swapsize context clause override set view
  select context swap = example 5 run query swap enable swap max size 100 mb select context swap = swapsize = 100
  configure swap policy
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/creating_new_internationalization_configurations/creating_new_internationalization_configurations#managing-internationalization-configurations</field><field name="content">
  manage internationalization configuration virtual dataport work datum group different country location
  internationalization configuration represent map exist country location datum manage virtual dataport come
  configurable parameter exist location contemplate
  example configurable parameter symbol separator decimal number thousand date format etc
  virtual dataport include internationalization configuration create common situation create new configuration simple process
  section describe process detail
  internationalization parameter location divide group
  different group mention parameter comprise describe detail note internationalization parameter case insensitive
  instance timezone   timezone correspond key
  generic parameter language indicate language location
  valid iso language code
  code contain letter low case define iso-639
  example es spanish en english fr french
  country specify country associate location
  valid iso country code
  code contain letter upper case define iso-3166
  example es spain es_euro spain euro currency gb england fr france fr_euro france euro currency united states
  timezone indicate time zone location e.g. europe madrid spain = gmt+01:00 = meet = cet
  configuration date configuration type date
  datepattern indicate format date
  parameter pattern syntax date relate method java class java.text
  dateformat java.text.simpledateformat
  java date time pattern virtual dataport list mean reserve character date pattern
  example date pattern d mmm yyyy h'h m'm
  datesubtypepattern indicate format date type   source type property date
  timesubtypepattern indicate format date type   source type property time
  configuration real number facilitate configuration datum type float double decimal
  doubledecimalposition indicate number decimal position represent decimal value doubledecimalseparator represent decimal separator print decimal value
  doublegroupseparator specify group separator decimal value
  follow figure contain statement require create internationalization configuration us_pst u.s pacific standard time
  internationalization configuration us_pst create map i18n i18n_us_pst country = datepattern = mmm d yyyy h mm ss doubledecimalposition = 2 doubledecimalseparator = doublegroupseparator = language = en timepattern = day timezone = pst replace i18n map replace i18n map execute statement create replace map i18n  map  execute operation follow condition meet user execute statement administrator
  user execute statement normal user administrator follow database database server configure use vcs depend i18n map replace
  database configure use vcs remote database depend i18n map
  example second condition custom i18n map mymap
  user1 normal user administrator database mylocaldb db1_user1 db2_user1
  i18n map database mymap
  db1_user1 db2_user1 configure use vcs link remote database db1 db2 respectively
  mylocaldb configure use vcs
  user2 normal user administrator database db1_user2 db2_user2
  i18n map database mymap
  db1_user2 db2_user2 configure use vcs link remote database db1 db2 respectively
  scenario user1 execute create replace map i18n mymap
  user2 execute create replace map i18n mymap administrator database depend mymap configure use vcs
  mylocaldb
  database vcs configure user perform check database server execute create replace map  map database 
  delete i18n map delete i18n map execute statement drop map i18n  map 
  statement fail map reference element view database database view i18n
  want force deletion map execute drop map i18n  map 
  cascade
  delete map view i18n map delete
  database i18n delete command fail add cascade modifier
  manage internationalization configuration
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/creating_new_internationalization_configurations/creating_new_internationalization_configurations#internationalization-configuration-us-pst</field><field name="content">
  internationalization configuration us_pst create map i18n i18n_us_pst country = datepattern = mmm d yyyy h mm ss doubledecimalposition = 2 doubledecimalseparator = doublegroupseparator = language = en timepattern = day timezone = pst
  internationalization configuration pst
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/creating_new_internationalization_configurations/creating_new_internationalization_configurations#replacing-an-i18n-map</field><field name="content">
  replace i18n map replace i18n map execute statement create replace map i18n  map  execute operation follow condition meet user execute statement administrator
  user execute statement normal user administrator follow database database server configure use vcs depend i18n map replace
  database configure use vcs remote database depend i18n map
  example second condition custom i18n map mymap
  user1 normal user administrator database mylocaldb db1_user1 db2_user1
  i18n map database mymap
  db1_user1 db2_user1 configure use vcs link remote database db1 db2 respectively
  mylocaldb configure use vcs
  user2 normal user administrator database db1_user2 db2_user2
  i18n map database mymap
  db1_user2 db2_user2 configure use vcs link remote database db1 db2 respectively
  scenario user1 execute create replace map i18n mymap
  user2 execute create replace map i18n mymap administrator database depend mymap configure use vcs
  mylocaldb
  database vcs configure user perform check database server execute create replace map  map database 
  replace i18n map
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/creating_new_internationalization_configurations/creating_new_internationalization_configurations#deleting-an-i18n-map</field><field name="content">
  delete i18n map delete i18n map execute statement drop map i18n  map 
  statement fail map reference element view database database view i18n
  want force deletion map execute drop map i18n  map 
  cascade
  delete map view i18n map delete
  database i18n delete command fail add cascade modifier
  delete i18n map
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/execution_context_of_a_query_and_interpolation_strings/execution_context_of_a_query_and_interpolation_strings#execution-context-of-a-query-and-interpolation-strings</field><field name="content">
  execution context query interpolation string section describe concept interpolation string
  virtual dataport parameterize certain expression wrapper datum source base view depend query view section generate wrapper datum source
  interpolation string expression use execution context variable generate string result
  variable interpolation string specify prefix follow variable provide string alphanumeric character letter character
  variable include character specify include symbol
  note symbol ^ appear constant interpolation string escape character i.e. \\^
  note imply specify local file type path window operating system character escape example suppose web server allow access certain report department particular company encode xml
  path access report department file match department
  example http://examplesite.com/exampleroute/reports/dpt1.xml http://examplesite.com/exampleroute/reports/dpt2.xml suppose want build base view retrieve report
  create xml datum source section xml data source xml wrapper section xml wrapper base view use wrapper
  base view dpt_report contain tuple department
  tuple attribute dpt_name text type report contain report datum
  create datum source base view problem arise data file access depend department refer query
  solve problem add interpolation variable route parameter create datasource xml statement create datum source
  e.g. example add variable dpt_name url service instead actual file http://examplesite.com/exampleroute/reports/@{dpt_name}.xml wrapper base view create datum source field dpt_name
  query follow execute select report dpt_report
  dpt_name = dpt3
  server retrieve xml document path http://examplesite.com/exampleroute/reports/dpt3.xml interpolation variable list element value happen case operator allow list value operand value associate variable link single element separate character +
  parameterization certain aspect www wrapper section www wrapper
  situation need replace interpolation variable value provide query value null case replace text
  scenario use interpolation function executeifisnotnull
  section whereexpression variable administration guide explain use function
  example provide use interpolation variable @whereexpression variable
  execution context query interpolation string
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/adding_variables_to_selection_conditions_getvar_and_setvar/adding_variables_to_selection_conditions_getvar_and_setvar#adding-variables-to-selection-conditions-getvar-and-setvar</field><field name="content">
  add variable selection condition getvar setvar situation want create aggregation view condition
  create view condition group
  limitation condition static change runtime
  example view base view client field income state
  view wealthy_client_by_state define create view wealthy_client_by_state select state count client income  1000000 group state limitation second view limit income consider client wealthy static
  know limit create view
  want change limit runtime remove condition add field income group field
  group field want
  income output base view add income group
  avoid problem use function getvar definition query
  syntax function syntax function getvar getvar('name variable   type variable   default value 
  getvar try obtain value variable  variable  context query
  find return  default value 
  important try use view parameter instead function getvar setvar
  function push source worsen performance query view
  hand scenario function easy parameter
  example use want use value condition view hierarchy performance query view problem
  section parameter derive view administration guide explain view parameter
  example define view wealthy_client_by_state like definition view variable selection condition getvar create view wealthy_client_by_state select state count client income  =
  getvar('_var_wealthy_client_income_limit int 1000000 group state
  change limit income long static query view define value runtime invoke view define variable selection
  condition select wealthy_client_by_state context var var_wealthy_client_income_limit = 250000
  value variable context query value selection condition  default value  getvar function 1000000
  option obtain value variable view runtime value context function setvar
  syntax function syntax function setvar setvar('name variable   value variable
  e.g. df base view income_limit return row value want use variable var_wealthy_client_income_limit
  invoke view define variable selection condition select wealthy_client_by_state
  select setvar('_var_wealthy_client_income_limit limit income_limit type = wealthy nest order join wealthy_client_by_state execute nest join view type join leave branch execute
  mean server query view income_limit function setvar value variable context
  right branch execute getvar find value variable var_wealthy_client_income_limit context
  note query leave branch join return row setvar function account value field row
  important cache engine deal variable
  use query involve view cache enable
  add variable selection condition getvar setvar
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/adding_variables_to_selection_conditions_getvar_and_setvar/adding_variables_to_selection_conditions_getvar_and_setvar#syntax-of-the-function-getvar</field><field name="content">
  syntax function getvar getvar('name variable   type variable   default value 
  syntax function getvar
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/adding_variables_to_selection_conditions_getvar_and_setvar/adding_variables_to_selection_conditions_getvar_and_setvar#definition-of-a-view-with-a-variable-in-the-selection-condition-getvar</field><field name="content">
  definition view variable selection condition getvar create view wealthy_client_by_state select state count client income  = getvar('_var_wealthy_client_income_limit int 1000000 group state
  definition view variable selection condition getvar
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/adding_variables_to_selection_conditions_getvar_and_setvar/adding_variables_to_selection_conditions_getvar_and_setvar#invoking-a-view-defined-with-a-variable-in-the-selection-condition</field><field name="content">
  invoke view define variable selection condition select wealthy_client_by_state context var var_wealthy_client_income_limit = 250000
  invoke view define variable selection condition
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/adding_variables_to_selection_conditions_getvar_and_setvar/adding_variables_to_selection_conditions_getvar_and_setvar#syntax-of-the-function-setvar</field><field name="content">
  syntax function setvar setvar('name variable   value variable
  syntax function setvar
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/advanced_characteristics/adding_variables_to_selection_conditions_getvar_and_setvar/adding_variables_to_selection_conditions_getvar_and_setvar#invoking-a-view-defining-a-variable-in-the-selection-condition</field><field name="content">
  invoke view define variable selection condition select wealthy_client_by_state
  select setvar('_var_wealthy_client_income_limit limit income_limit type = wealthy nest order join wealthy_client_by_state
  invoke view define variable selection condition
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/appendix#appendix</field><field name="content">
  appendix list appendix include document syntax condition function case
  clause example date time pattern string publication widget
  appendix
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/syntax_of_condition_functions/syntax_of_condition_functions#syntax-of-condition-functions</field><field name="content">
  syntax condition function "content" page page function
  syntax condition function
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/case_clause_examples/case_clause_examples#case-clause-examples</field><field name="content">
  case clause example consider follow virtual dataport view internet_inc d | summary ttime taxid 1 error adsl router 2005 06 29 19:19:41.0 b78596011 2 incident adsl router 2005 06 29 19:19:41.0 b78596012 3 install additional line 2005 06 29 19:19:41.0 b78596013 4 bandwidth increase 2005 06 29 19:19:41.0 b78596014 example example
  1 select d summary case len(summary 
  22 summary
  d end internet_inc
  d summary case 1 error adsl router 1 2 incident adsl router incident adsl router 3 install additional line install additional line 4 bandwidth increase 4 example 2
  select d case
  d = 1 true
  d end
  is_first internet_inc error executing sentence incorrect select sentence case argument iinc_id compatible rest value
  type result clause incompatible clause
  type boolean long
  example 3
  select d case
  
  d = 1 d end
  is_first internet_inc d is_first 1 2 2 3 3 4 4 note type result clause automatically convert obtain valid result
  case result convert string
  example 4 case clause query
  select internet_inc
  true = case d 1 true false end
  d summary ttime taxid 1 error adsl router 2005 06 29 19:19:41.0 b78596011 example 5 query equivalent obtain result use case different way
  select d case d
  case d
  1 1 2 end 2 second end internet_inc
  select d case d case
  
  d = 1 1 2 end
  2 second end internet_inc d case 1 2 3 4 note case return result clause evaluate true
  example second condition true return result
  case clause example
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/date_and_time_pattern_strings/date_and_time_pattern_strings#date-and-time-pattern-strings</field><field name="content">
  date time pattern string virtual dataport use date time java pattern specify date time format
  pattern letter column represent date
  java date time pattern virtual dataport symbol date time component presentation example g era designator text ad y year year 1996 96 m month year month july jul 07 w week year number 27 w week month number 2 d day year number 189 d day month number 10 f day week month number 2 e day week text tuesday tue pm marker text pm h hour day 0 23 number 0 k hour day 1 24 number 24 k hour pm 0 11 number 0 h hour pm 1 12 number 12 m minute hour number 30 s second minute number 55 s millisecond number 978 z time zone general time zone pacific standard time pst gmt-08:00 z time zone rfc 822 time zone -0800 escape character text display single inverted comma literal table different value indicate arrangement reserve character
  specific output format depend number time different element repeat position text use 4 character specify complete form 4 character use abbreviate form
  instance date pattern specifie eeee day week position indicate day week complete form e.g. monday instead abbreviate form e.g. mon
  number use minimum number digit possible
  0 add leave short number require
  year special case number y 2 year shorten 2 digit
  text number 3 character represent text number
  instance date pattern specifies mmm month position indicate month text e.g. jul
  pattern specify mm month number
  date format character find range z z consider constant i.e. character appear result date invert comma format pattern
  date time pattern string
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/date_and_time_pattern_strings/date_and_time_pattern_strings#java-date-and-time-patterns-used-in-virtual-dataport</field><field name="content">
   
  java date time pattern virtual dataport
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/publication_of_widgets/publication_of_widgets#publication-of-widgets</field><field name="content">
  publication widget note publish view widget deprecate feature remove future major version denodo platform
  section feature deprecate denodo platform 8.0 list feature deprecate
  virtual dataport publish view store procedure widget
  widget deploy allow query "content" desire element
  contain query form table visualize obtain result
  widget compliant common widget inter operability standard collaborate independently develop widget section publication view widget administration guide
  widget export different widget technology java portal server portlet jsr-168 jsr-286 microsoft sharepoint note strongly recommend publish widget administration tool section publication view widget administration guide
  way necessary vql statement generate automatically
  publication widget
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/publication_of_widgets/create_new_widgets/create_new_widgets#create-new-widgets</field><field name="content">
  create new widget note publish view widget deprecate feature remove future major version denodo platform
  section feature deprecate denodo platform 8.0 list feature deprecate
  use statement create widget create new widget
  syntax create widget statement create replace widget  identifi 
  displayname =  literal 
  description =  literal  elementtopublish =  database identifer.]element identifi  elementtopublishtype = view | storedprocedure chunksize =  integer  chunktimeout =  integer 
  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer  i18n =  identifi  helpmodeenable =  boolean  customizedhelpmode"content" =  html_fragment literal 
  option portletjsr286 publishcustomtableevent =  boolean 
  brief description parameter statement elementtopublish view optionally prefix identifi database base view store procedure publish
  helpmodeenable enable help mode widget
  widget platform widget help mode display information widget
  parameter true customizedhelpmode"content" parameter present widget help mode display text instruction use widget customizedhelpmode"content" html fragment user open widget help mode
  parameter useful helpmodeenable true
  chunksize chunktimeout querytimeout
  interpretation virtual dataport client
  poolenable true connection pool enable highly recommend
  poolinitsize initial number connection open pool
  poolmaxactive
  maximum number connection pool
  negative value number limit publishcustomtableevent
  enable option widget export jsr-286 portlet send complex object portlet
  complex object contain result execute query view store procedure obtain virtual dataport section export jsr-168 jsr-286 portlet administration guide
  create new widget
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/publication_of_widgets/create_new_widgets/create_new_widgets#syntax-of-the-create-widget-statement</field><field name="content">
  syntax create widget statement create replace widget  identifi 
  
  displayname =  literal 
  description =  literal  elementtopublish =  database identifer.]element identifi  elementtopublishtype = view | storedprocedure chunksize =  integer  chunktimeout =  integer 
  querytimeout
  =  integer  poolenable = 
  boolean  poolinitsize
  =  integer  poolmaxactive =
   integer  i18n =  identifi  helpmodeenable =  boolean  customizedhelpmode"content" =  html_fragment literal 
  option portletjsr286 publishcustomtableevent =  boolean 
  syntax create widget statement
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/publication_of_widgets/export_a_widget/export_a_widget#export-a-widget</field><field name="content">
  export widget note publish view widget deprecate feature remove future major version denodo platform
  section feature deprecate denodo platform 8.0 list feature deprecate
  command export exist widget particular widget technology
  depend target output different portlet jsr 168 286 output .war file deploy standard portlet server
  microsoft web output .zip contain webpart file deployment microsoft office sharepoint xml file contain information export element
  important order use microsoft web auxiliary web service deploy
  section deployment export auxiliary web service
  syntax export widget statement export portletjsr168 | portletjsr286 widget  widget_name identifi 
  =  target_file_name literal  uri =  vdp_server_uri
  literal  login
  =
   vdp_user_name literal  password =
   literal  encrypt export webpart widget identifier_name widgetname =  target_file_name literal  uri =  vdp_auxiliary_web_service_url literal  uri mean depend target widget portlet uri virtual dataport server portlet connect order retrieve datum
  microsoft web uri auxiliary web service connect order obtain datum
  login password
  credential connect virtual dataport
  export widget
  </field></doc><doc><field name="topic">
 https://community.denodo.com/docs/html/browse/8.0/en/vdp/vql/appendix/publication_of_widgets/export_a_widget/export_a_widget#syntax-of-the-export-widget-statement</field><field name="content">
  syntax export widget statement export portletjsr168 | portletjsr286 widget  widget_name identifi 
  =  target_file_name literal  uri =  vdp_server_uri
  literal  login
  =
   vdp_user_name literal  password =
   literal  encrypt export webpart widget identifier_name widgetname =  target_file_name literal  uri =  vdp_auxiliary_web_service_url literal 
  syntax export widget statement
 
 </field>
 </doc>
</add>